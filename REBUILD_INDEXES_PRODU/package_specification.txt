create or replace package PKG_IndexRebuild
AUTHID CURRENT_USER
is

  -- Author  : EVGENY.VELIKANOV
  -- Created : 11.05.2011 15:35:19
  -- Version : 2.1
  -- Purpose :
  /*
  +добавлен параметр iParallelAlter задающий количество потоков перестройки
  +поставлено ограничение не использовать таблспейс UNDO%
  +эксепшн блок если полностью не хватает места
  +добавлен ордер бай в главный цикл
  +поле current_status содержит скрипт который выполняется
  +1.2
  +переменная bStopAtNextStep теперь действует и в блоке возвращения индексов
  +current_status теперь не апдейтится а добавляется
  +поставлено ограничение не использовать таблспейс CALL%
  +поле с новым таблспейсом проставляется всегда и обратная перестройка происходит если отличаются новый и старый
      tablespace_name_new is not null and tablespace_name_new<>tablespace_name_old
  +при пересечении пороговых значение по времени или по объему все равно будет происходить обратная перестройка индексов
  +расширенная запись в поле статус о выходах при превышении пороговых значений
  +1.3
  +переделал цикл обратной перестройки с цикла по курсору на простой цикл
  +добавил эксепт блок в обратную перестройку
  +1.4
  +переделана рабочая таблица (добавлен первичный ключ и сиквенция)
  +добавил bForceRun для возможности запуска в любое время
  +1.5
  +добавил режим отладки
  +1.6
  + добавил цикл LookForWork теперь по выполнении всей работы если осталось время джоб запускается по новой
  + добавил условие в выборку "какие индексы перестраивать" отсекающее индексы которые уже есть в INDEX_REBUILD_STATS
  +1.7 = 18 ноября 2011
  +поправил Exit(выходы из цикла) на реальные завершения goto ExitWork;
  +убрал обратную перестройку индексов (если надо вернуть на место просто убрать кусок с выходом)
  +1.8 = 10 января 2012
  +добавил условие  (irs.rebuild_date is null) в выборку кандидатов на перестройку, чтобы не дублировались записи
  +1.9 = 3 мая 2012
  +таблспейсы ограничил not like 'SYS%' а было not like 'SYSTEM'
  +2.0 = 12 октября 2012
  + добавлена процедура по перетасовке и высвобождению места под большой индекс
  + после построения списка джобов для обработкиЮ для максимального индекса отрабатывает хранимка ResortIndexInTbs
  + которая высвобождает объем необходимый для перемещения максимального индекса
  TODO возможно рассчитывать скорость работы джоба на основе недельной активности с мин и макс ограничениями и более плавно рассчитывать время завершения
  TODO если вернем обратную перестройку - то добавить проверку на свободное место в ней
  +2.1 = 28 мая 2013
  * расширил окно в котором джоб не работает
  +2.2 = 4 июля 2013
  * добавил параметр sAllRebuildToTBS
  +2.3 = 9 апреля 2014
  * добавил параметр sAllRebuildToTBS
  */
  bStopAtNextStep        boolean; -- служит для принудительной остановки джоба после завершения текущей итерации
  fFreeSpaceToLeaveInTbs float;
  iPercentFreeInTbs      float;
  iWorkThresholdGB       integer; --сколько обрабатывать за один вызов в гигабайтах
  iMaxIndexSizeMB        integer;
  iMinIndexSizeMB        integer;
  iRebuildOlderThanDays  integer; -- брать индексы которые не перестраивались больше чем iRebuildOlderThanDays дней
  iMaxIndexCountToDo     integer;
  iParallelAlter         integer; -- разрешенное число паралелов--(использовать распараллеливание только если больше 30Гб)
  bForceRun              boolean; -- запуск без проверок на мэйтанс окно ( (sysdate > Trunc(start_time + 8 / 24) + 6 / 24) и не первые и последние дни месяца)
  bDebugMode             boolean; -- выводить ли отладочную информацию в таблицу INDEX_REBUILD_EVENTS
  bCanMoveToOtherTBS     boolean; -- можно ли перестраивать в другой тбс
  sAllRebuildToTBS       varchar2(100); -- все индексы будут перестраиваться в этот тбс в обход любой логики имеет приоритет над bCanMoveToOtherTBS
  sCustomFilter          varchar2(400); -- дополнительный фильтр индексов, поддающийся настройке
  -- Function and procedure implementations
  procedure IndexRebuild;
  function ResortIndexInTbs ( a_owner varchar2, a_object_name varchar2,a_preffered_tbs varchar2,iOnlyPrint int default 1 ) return number;
  procedure rebuild_index_part;
end PKG_IndexRebuild;
