SQL> @/u01/app/oracle/product/11.2.0.4/db_1/javavm/install/initjvm.sql;
SQL> -- Setup a database for running Java
SQL> 
SQL> -- This script can not function properly in SVRMGR.  The following
SQL> -- lines are intended to abort the script if it is being run with
SQL> -- SVRMGR, but will be interpreted simply as remarks by SQLPLUS.
SQL> rem -
> set stoponerror on
SQL> rem -
> initjvm.sql must be run with SQLPLUS, not SVRMGRL
SQL> 
SQL> 
SQL> whenever sqlerror exit;
SQL> 
SQL> variable test_for_1335603 varchar2(30)
SQL> 
SQL> /*
SQL> #######################################################################
SQL> #######################################################################
SQL>   If the following   :test_for_1335603 := 'x'   statement causes
SQL>   a PLS-00553 error, and thereby terminates the sqlplus connection,
SQL>   simply restart the script in a new sqlplus session.
SQL>   This error can occur if the script is run in the same session where
SQL>   the database was started.  To avoid this problem, always start a new
SQL>   session to run scripts after starting the database.
SQL> #######################################################################
SQL> #######################################################################
SQL> */
SQL> 
SQL> execute :test_for_1335603 := 'x';

PL/SQL procedure successfully completed.

SQL> 
SQL> whenever sqlerror continue;
SQL> 
SQL> -- Load support packages, including rmjvm
SQL> @@initjvma
SQL> -- status tables referenced in initjvmaux
SQL> begin
  2  execute immediate 'create table java$jvm$status(action varchar2(40),' ||
  3                                                 'inprogress varchar2(1),' ||
  4                                                 'execid varchar2(40),' ||
  5                                                 'rmjvmtime date,' ||
  6                                                 'punting varchar2(5))';
  7  exception
  8  when others then
  9  if sqlcode not in (-955) then raise; end if;
 10  end;
 11  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin
  2  execute immediate 'create table java$jvm$steps$done(step varchar2(40))';
  3  exception
  4  when others then
  5  if sqlcode not in (-955) then raise; end if;
  6  end;
  7  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- initjvmaux: support package for conditional execution during jvm scripts
SQL> create or replace package initjvmaux authid current_user is
  2   -- exec: execute a statement
  3   procedure exec (x varchar2);
  4   -- drp: execute a statement
  5   -- with some errors typically seen in drop commands ignored
  6   procedure drp (x varchar2);
  7   -- rollbacksetup: do whatever is possible to ensure that there is a large
  8   -- enough rollback segment available and where apppropriate make it so that
  9   -- rollbackset will make that segment be in use for the current transaction
 10   procedure rollbacksetup;
 11   -- rollbackset: make the rollback segment determined by rollbacksetup, if any,
 12   -- be in use for the current transaction
 13   procedure rollbackset;
 14   -- rollbackcleanup: deallocate any rollback segment allocated by rollbacksetup
 15   procedure rollbackcleanup;
 16   -- setloading: make dbms_registry entry for status loading
 17   procedure setloading;
 18   -- setloaded: make dbms_registry entry for status loaded
 19   procedure setloaded;
 20   -- validate_javavm: validation procedure for dbms_registry
 21   procedure validate_javavm;
 22   -- registrystatus: get the value of status from dba_registry for JAVAVM
 23   function registrystatus return varchar2;
 24   -- startup_pending_p: see whether startup_required bit is set in registry
 25   -- for JAVAVM
 26   function startup_pending_p return boolean;
 27   -- check_sizes_for_cjs: verify that pool sizes and tablespace are large
 28   -- enough for create java system
 29   procedure check_sizes_for_cjs(required_shared_pool number := 24000000,
 30                                 required_shared_pool_if_10049
 31                                         number := 70000000,
 32                                 required_java_pool number := 12000000,
 33                                 required_tablespace number := 70000000);
 34   -- create_if_not_present: create an object only if it's not there
 35   procedure create_if_not_present(command varchar2);
 36   -- abort_message: dbms_output a highlighted message
 37   procedure abort_message(msg1 varchar2, msg2 varchar2 default null);
 38   -- jvmuscript: return jvmuxxx script name if it is appropriate to run it
 39   -- given the upgrade from version indicated in dba_registry, else return
 40   -- jvmempty.sql (the empty script).
 41   function jvmuscript return varchar2;
 42   -- jvmversion: return version value for JAVAVM from dba_registry
 43   function jvmversion return varchar2;
 44   -- current_release_version: return version value from v$instance
 45   function current_release_version return varchar2;
 46   -- drop_sys_class: drop the (long)named class from SYS, along with any
 47   -- public synonym and MD5 table entry
 48   procedure drop_sys_class(name varchar2);
 49   -- drop_sys_resource: drop the (long)named resource from SYS, along with any
 50   -- MD5 table entry
 51   procedure drop_sys_resource(name varchar2);
 52   -- do_jis_drop: say whether jis is installed and so needs to be dropped
 53   -- turn off Compiler if so
 54   function do_jis_drop return boolean;
 55   -- startaction_outarg: declare intention to start a given action
 56   -- returns requested action, if allowed, else conflicting pending action
 57   procedure startaction_outarg(newaction IN OUT varchar2);
 58   -- startaction: convenience wrapper for startaction_outarg which ignores
 59   -- return value and so is callable with a literal string
 60   procedure startaction(newaction IN varchar2);
 61   -- endaction_outarg: declare end of current action
 62   -- returns (in the OUT arg) current action if not punting else 'PUNT'
 63   procedure endaction_outarg(action OUT varchar2);
 64   -- endaction: convenience wrapper for endaction_outarg which ignores
 65   -- return value
 66   procedure endaction;
 67   -- endaction_asload: endaction and if not punting, set last action to 'LOAD'
 68   procedure endaction_asload;
 69   -- startstep: indicate start of a script step
 70   -- returns true if step should be attempted
 71   function startstep(newstep varchar2) return boolean;
 72   -- endstep: indicate current step completed successfully
 73   procedure endstep;
 74   -- currentexecid: return the unique id for the current session that is
 75   -- used to indicate what session last did startaction
 76   function currentexecid return varchar2;
 77   -- Some debugoutput functions
 78   procedure set_debug_output_on;
 79   procedure set_debug_output_off;
 80   procedure debug_output(line varchar2);
 81   procedure set_alt_tablespace_limit(l number);
 82   -- drop sros during up/downgrade
 83   procedure drop_sros;
 84  end;
 85  /

Package created.

SQL> 
SQL> create or replace package body initjvmaux is
  2  
  3  deallocate_rollback_name varchar2(30);
  4  sec_rollback_segment_name varchar2(32);
  5  
  6  current_step varchar2(40);
  7  standalone_action boolean := false;
  8  do_debug_output boolean := false;
  9  
 10  alt_tablespace_limit number := 0;
 11  
 12  procedure exec (x varchar2) as
 13  begin
 14  dbms_output.put_line(substr(x, 1, 250));
 15  if login_user != 'SYS' then
 16    declare
 17     foo exception;
 18     pragma exception_init(foo,-1031);
 19    begin
 20     raise foo;
 21    end;
 22  end if;
 23  execute immediate x;
 24  end;
 25  
 26  procedure drp (x varchar2) as
 27  begin
 28  exec(x);
 29  exception
 30  when others then
 31  if sqlcode not in (-4080, -1418, -1919, -942, -1432, -4043, -1918, -2289,
 32                     -6550, -1598, -1534, -1434) then raise; end if;
 33  end;
 34  
 35  procedure rollbacksetup as
 36    x number;
 37    rollback_segment_name varchar2(30);
 38  BEGIN
 39    deallocate_rollback_name := null;
 40    sec_rollback_segment_name := null;
 41  
 42  -- no rollback actions when undo_management is AUTO
 43    begin
 44      select num into x from v$parameter
 45         where name='undo_management' and value='AUTO';
 46      return;
 47    exception when no_data_found then null;
 48    end;
 49  
 50    begin
 51      select segment_name into rollback_segment_name from dba_rollback_segs
 52        where tablespace_name='SYSTEM' and next_extent*max_extents>100000000 and
 53              status='ONLINE' and initial_extent>1000000 and rownum < 2;
 54      debug_output('found good enough rollback segment ' ||
 55         rollback_segment_name);
 56    exception when no_data_found then
 57      debug_output('didnt find good enough rollback segment');
 58      x := 1;
 59      rollback_segment_name := 'MONSTER';
 60      loop
 61        begin
 62          select segment_name into deallocate_rollback_name
 63          from dba_rollback_segs where segment_name = rollback_segment_name;
 64          debug_output('skipped rollback segment ' || rollback_segment_name);
 65        exception when no_data_found then
 66          deallocate_rollback_name := rollback_segment_name;
 67          sec_rollback_segment_name :=
 68            dbms_assert.simple_sql_name(rollback_segment_name);
 69          exec('create rollback segment ' || sec_rollback_segment_name ||
 70               ' storage (initial 2 m next 2 m maxextents unlimited)');
 71          exec('alter rollback segment ' ||
 72             sec_rollback_segment_name || ' online');
 73          debug_output('created rollback segment ' || rollback_segment_name);
 74          exit;
 75        end;
 76        rollback_segment_name := 'MONSTER' || x;
 77        x := x + 1;
 78      end loop;
 79    end;
 80  
 81    sec_rollback_segment_name :=
 82      dbms_assert.simple_sql_name(rollback_segment_name);
 83  END;
 84  
 85  procedure rollbackset as
 86  begin
 87  if sec_rollback_segment_name is not null then
 88     execute immediate 'set transaction use rollback segment ' ||
 89       sec_rollback_segment_name;
 90  end if;
 91  end;
 92  
 93  procedure rollbackcleanup as
 94  counter number := 0;
 95  begin
 96  if deallocate_rollback_name is not null then
 97      loop
 98      declare
 99        sec_name varchar2(32); --  30+2
100      begin
101      sec_name := dbms_assert.simple_sql_name(deallocate_rollback_name);
102      drp('alter rollback segment ' || sec_name || ' offline');
103      begin
104      drp('drop rollback segment ' || sec_name);
105      exit;
106      exception when others then
107          if sqlcode not in (-1545) then raise; end if;
108      end;
109      counter := counter + 1;
110      dbms_output.put_line('retrying because of ORA-01545');
111      dbms_lock.sleep(2);
112      exit when counter > 150;
113      exception when others then
114        if sqlcode in (-20000) then
115          dbms_output.disable;
116          dbms_output.enable;
117        else
118          raise;
119        end if;
120      end;
121      end loop;
122  end if;
123  end;
124  
125  procedure setloading as
126  begin
127  dbms_registry.loading('JAVAVM',
128                        'JServer JAVA Virtual Machine',
129                        'initjvmaux.validate_javavm');
130  end;
131  
132  procedure setloaded as
133  begin
134  dbms_registry.loaded('JAVAVM');
135  validate_javavm;
136  end;
137  
138  procedure validate_javavm as
139  begin
140    execute immediate
141    'declare junk varchar2(10) := dbms_java.longname(''foo''); begin null; end;';
142    dbms_registry.valid('JAVAVM');
143  exception when others then
144    dbms_registry.invalid('JAVAVM');
145  end;
146  
147  function registrystatus return varchar2 as
148  result varchar2(30) := dbms_registry.status('JAVAVM');
149  begin
150    if result = 'VALID' then result := 'LOADED'; end if;
151    return result;
152  end;
153  
154  function startup_pending_p return boolean as
155   result boolean := false;
156   rmjvmtime date;
157  begin
158    begin
159      select rmjvmtime into rmjvmtime from java$jvm$status
160         where rmjvmtime = (select startup_time from v$instance);
161      result := true;
162    exception when no_data_found then null;
163    end;
164    return result;
165  end;
166  
167  procedure check_sizes_for_cjs(required_shared_pool number := 24000000,
168                                required_shared_pool_if_10049
169                                        number := 70000000,
170                                required_java_pool number := 12000000,
171                                required_tablespace number := 70000000) as
172  foo exception;
173  pragma exception_init(foo, -29554);
174  free number;
175  shared_pool_limit number := required_shared_pool;
176  tablespace_limit number := required_tablespace;
177  step_name varchar2(40) := 'CHECK_SIZES';
178  sga_target_value number := 0;
179  begin
180    if alt_tablespace_limit != 0 then
181      tablespace_limit := alt_tablespace_limit;
182    end if;
183    if startstep(step_name) then
184      exec('alter system flush shared_pool');
185      begin
186        select 0 into free from v$parameter2
187           where name='event' and value like '%10049 trace%'
188           and not exists (select * from v$parameter2
189                           where name='event'
190                           and value='10049 trace name all off');
191        shared_pool_limit := required_shared_pool_if_10049;
192      exception when no_data_found then null;
193      end;
194      begin
195        select current_size into sga_target_value
196          from v$memory_dynamic_components
197          where component='SGA Target';
198      exception when no_data_found then null;
199      end;
200      if sga_target_value = 0 then
201        begin
202          select sum(bytes) into free from v$sgastat where pool='java pool';
203        exception when no_data_found then free := 0;
204        end;
205        if free < required_java_pool then
206          abort_message('Aborting because available java pool, ' || free ||
207                        ', is less than ' || required_java_pool || ' .');
208          raise foo;
209        end if;
210        declare
211          msg1 varchar2(200);
212        begin
213          select bytes into free from v$sgastat
214             where name='free memory' and
215                   pool='shared pool' and
216                   bytes < shared_pool_limit;
217          msg1 := 'Aborting because available shared pool, ' || free ||
218                  ', is less than ' || shared_pool_limit || ' .';
219          if shared_pool_limit = required_shared_pool_if_10049 then
220            abort_message(msg1,
221                          'Required value is large because event 10049 is set.');
222          else
223            abort_message(msg1);
224          end if;
225          raise foo;
226        exception when no_data_found then null;
227        end;
228      else
229        if sga_target_value <
230           required_java_pool + shared_pool_limit + 1000000 then
231          abort_message('Aborting because sga_target value, ' ||
232                         sga_target_value ||
233                        ', is not sufficiently larger than the sum of '||
234                        ' the required java_pool size, ' || required_java_pool ||
235                        ', and the required shared_pool size, ' ||
236                        shared_pool_limit || ' .');
237          raise foo;
238        end if;
239      end if;
240      select sum(length) into free from idl_ub1$,x$joxft
241         where obj#=joxftobn and bitand(joxftflags,96)!=0;
242      tablespace_limit := tablespace_limit - free;
243      select sum(length) into free from idl_ub1$ u,obj$ o
244         where o.obj#=u.obj# and o.type#=56 and name like 'Locale%';
245      tablespace_limit := tablespace_limit - free;
246      select sum(bytes) into free from dba_free_space
247         where tablespace_name='SYSTEM';
248      if free < tablespace_limit then
249        abort_message('Aborting because available SYSTEM tablespace, ' || free ||
250                      ', is less than ' || tablespace_limit || ' .');
251        raise foo;
252      end if;
253    end if;
254    endstep;
255    delete from java$jvm$steps$done where step = step_name;
256    commit;
257  end;
258  
259  procedure create_if_not_present(command varchar2) as
260  begin
261    exec(command);
262  exception when others then
263    if sqlcode not in (-955, -1921) then raise; end if;
264  end;
265  
266  procedure abort_message(msg1 varchar2, msg2 varchar2 default null) as
267  begin
268      dbms_output.put_line('.');
269      dbms_output.put_line('###');
270      dbms_output.put_line('### ' || msg1);
271      if msg2 is not null then dbms_output.put_line('### ' || msg2);end if;
272      dbms_output.put_line('###');
273      dbms_output.put_line('.');
274  end;
275  
276  function jvmuscript return varchar2 as
277  result varchar2(30) := 'jvmempty.sql';
278  stat varchar2(30);
279  registry_version varchar2(30);
280  begin
281    begin
282      select status, version into stat, registry_version from dba_registry
283        where comp_id='JAVAVM';
284      if stat = 'UPGRADING' then
285        result := 'jvmu' || substr(translate(registry_version,'x.','x'), 1, 3) || '.sql';
286      end if;
287    exception when no_data_found then null;
288    end;
289    return result;
290  end;
291  
292  function jvmversion return varchar2 as
293  begin
294    return dbms_registry.version('JAVAVM');
295  end;
296  
297  function current_release_version return varchar2 as
298  v varchar2(20);
299  begin
300    SELECT version INTO v from v$instance;
301    return v;
302  end;
303  
304  procedure drop_sys_class(name varchar2) as
305  begin
306    drp('drop java class ' || dbms_assert.enquote_name(name, false));
307    drp('drop public synonym ' || dbms_assert.enquote_name(name, false));
308  end;
309  
310  procedure drop_sys_resource(name varchar2) as
311  begin
312    drp('drop java resource ' || dbms_assert.enquote_name(name, false));
313  end;
314  
315  function do_jis_drop return boolean as
316  junk number;
317  begin
318    select count(*) into junk from obj$
319      where type#=4 and owner#=0 and name='ALL_IDS';
320    if junk = 0 then return false; end if;
321     update obj$ set status=5 where obj#=(select obj# from obj$,javasnm$
322        where owner#=0 and type#=29 and short(+)=name and
323        nvl(longdbcs,name)='oracle/aurora/rdbms/Compiler');
324    commit;
325    return true;
326  end;
327  
328  -- actions: LOAD       initjvm.sql
329  --          UNLOAD     rmjvm.sql
330  --          UPGRADE    udjvmrm from jvmdbmig
331  --          DOWNGRADE* jvmexxx
332  --          STANDALONE initsec
333  
334  -- If input action is compatible with the current action status, as
335  -- given by the values in the single row in table java$jvm$status,
336  -- then change java$jvm$status to reflect that the input action is
337  -- now (or again) in progress.  If the input action is incompatible,
338  -- set the punting column in java$jvm$status so that until a subsequent
339  -- endaction or startaction call resets things, startstep will always
340  -- indicate that a given step should be skipped.
341  procedure startaction_outarg(newaction IN OUT varchar2) as
342  lastaction varchar2(40);
343  inprogress varchar2(1);
344  inaction varchar(40) := newaction;
345  begin
346    begin
347      select action,inprogress into lastaction,inprogress from java$jvm$status;
348    exception when no_data_found then
349      lastaction := 'NONE';
350      inprogress := 'N';
351      insert into java$jvm$status values('NONE','N',null,null,'TRUE');
352    end;
353    standalone_action := false;
354    if inprogress = 'Y' then
355      if not (newaction = lastaction or
356              (newaction = 'UNLOAD' and lastaction = 'LOAD') or
357              (substr(newaction,1,13) = 'DOWNGRADE_TO_' and
358               substr(lastaction,1,13) = 'DOWNGRADE_TO_')) then
359        newaction := 'PUNT';
360      end if;
361    elsif newaction = 'LOAD' then
362      if lastaction != 'UNLOAD' and lastaction != 'NONE' then
363        newaction := 'PUNT';
364      end if;
365    elsif newaction = 'UPGRADE' then
366      if (not (lastaction = 'LOAD' or lastaction = 'NONE')) or
367         jvmversion = current_release_version
368      then
369        newaction := 'PUNT';
370      end if;
371    elsif newaction = 'DOWNGRADERELOAD' then
372      if substr(lastaction,1,9) != 'DOWNGRADE' then
373        newaction := 'PUNT';
374      end if;
375    elsif substr(newaction,1,9) = 'DOWNGRADE' then
376      if lastaction != 'LOAD' then
377        newaction := 'PUNT';
378      end if;
379    elsif newaction = 'PATCHSET' then
380      if lastaction != 'LOAD' then
381        newaction := 'PUNT';
382      end if;
383    elsif newaction = 'STANDALONE' then
384      if lastaction != 'LOAD' then
385        newaction := 'PUNT';
386      end if;
387    elsif newaction != 'UNLOAD' then
388      newaction := 'PUNT';
389    end if;
390  
391    if newaction = 'PUNT' then
392      debug_output('startaction(' || inaction || ') PUNTED');
393      update java$jvm$status set punting = 'TRUE';
394    elsif newaction = 'STANDALONE' then
395      standalone_action := true;
396      update java$jvm$status set punting = 'FALSE';
397    else
398      debug_output('startaction(' || inaction || ') STARTED');
399      update java$jvm$status set
400        action = newaction,
401        inprogress = 'Y',
402        execid = currentexecid,
403        punting = 'FALSE';
404    end if;
405  
406    commit;
407  
408  end;
409  
410  procedure startaction(newaction IN varchar2) as
411  newaction_outarg varchar2(40) := newaction;
412  begin
413    startaction_outarg(newaction_outarg);
414  end;
415  
416  procedure endaction_outarg(action OUT varchar2) as
417  begin
418    if standalone_action then
419      update java$jvm$status set punting = 'FALSE';
420      standalone_action := false;
421      action := 'STANDALONE';
422    else
423      begin
424        select action into action from java$jvm$status where
425           punting = 'FALSE' and
426           execid = currentexecid;
427        delete from java$jvm$steps$done;
428        update java$jvm$status set inprogress = 'N', execid = null;
429        debug_output('endaction(' || action || ') DONE');
430      exception when no_data_found then
431        debug_output('endaction while PUNTING');
432        update java$jvm$status set punting = 'FALSE';
433        action := 'PUNT';
434      end;
435    end if;
436  
437    commit;
438  
439  end;
440  
441  procedure endaction as
442  outarg varchar2(40);
443  begin
444    endaction_outarg(outarg);
445  end;
446  
447  procedure endaction_asload as
448  outarg varchar2(40);
449  begin
450    endaction_outarg(outarg);
451    if (outarg != 'PUNT') then
452      update java$jvm$status set action = 'LOAD';
453      commit;
454    end if;
455  end;
456  
457  function startstep(newstep varchar2) return boolean as
458  punting varchar2(5);
459  execid varchar2(40);
460  oldstep varchar2(40);
461  try boolean := false;
462  begin
463    current_step := null;
464    begin
465      select execid, punting into execid, punting from java$jvm$status;
466      if punting = 'FALSE' then
467        debug_output('NOT YET PUNTING AT ' || newstep);
468        if standalone_action then
469          try := true;
470          update java$jvm$status set punting = 'TRUE';
471        elsif execid = currentexecid then
472          begin
473            select step into oldstep from java$jvm$steps$done where step = newstep;
474          exception when no_data_found then
475            try := true;
476            current_step := newstep;
477            update java$jvm$status set punting = 'TRUE';
478          end;
479        else
480          debug_output('startstep(' || newstep || ') PUNTED');
481          update java$jvm$status set punting = 'TRUE';
482        end if;
483      end if;
484    exception when no_data_found then
485      insert into java$jvm$status values('NONE','N',null,null,'TRUE');
486    end;
487  
488    commit;
489  
490    if try then
491      debug_output('TRIED ' || newstep);
492    else
493      debug_output('SKIPPED ' || newstep);
494    end if;
495  
496    return try;
497  
498  end;
499  
500  procedure endstep as
501  begin
502    if current_step is not null then
503      debug_output('COMPLETED ' || current_step);
504      insert into java$jvm$steps$done values(current_step);
505      current_step := null;
506    end if;
507    update java$jvm$status set punting = 'FALSE';
508    commit;
509  end;
510  
511  function currentexecid return varchar2 as
512  execid varchar2(40);
513  begin
514    select sid||'-'||serial# into execid from v$session
515           where sid = (select unique(sid) from v$mystat);
516    return execid;
517  end;
518  
519  procedure set_debug_output_on as begin do_debug_output := true; end;
520  procedure set_debug_output_off as begin do_debug_output := false; end;
521  
522  procedure debug_output(line varchar2) as
523  begin
524    if do_debug_output then dbms_output.put_line(line);end if;
525  end;
526  
527  procedure set_alt_tablespace_limit(l number) as
528  begin
529    alt_tablespace_limit := l;
530  end;
531  
532  -- drop sros during up/downgrade
533  procedure drop_sros as
534  begin
535    update obj$ set status=5 where obj#=(select obj# from obj$,javasnm$
536      where owner#=0 and type#=29 and short(+)=name and
537      nvl(longdbcs,name)='oracle/aurora/rdbms/Compiler');
538    commit;
539    declare
540      cursor C1 is select
541         u.name, o.name
542         from obj$ o,user$ u where o.type#=56 and u.user#=o.owner#;
543      ddl_statement varchar2(200);
544      uname         varchar2(30);
545      oname         varchar2(30);
546      iterations number;
547      previous_iterations number;
548      loop_count number;
549      my_err     number;
550    begin
551      previous_iterations := 10000000;
552      loop
553        -- To make sure we eventually stop, pick a max number of iterations
554        select count(*) into iterations from obj$ where type#=56;
555        exit when iterations=0 or iterations >= previous_iterations;
556        previous_iterations := iterations;
557        loop_count := 0;
558        open C1;
559        loop
560          begin
561            fetch C1 into uname,oname;
562            -- zsqi LRG 4937433 (Enquote_Name in place of manually added quotes)
563            ddl_statement := 'DROP JAVA DATA ' ||
564                             dbms_assert.enquote_name(uname,FALSE) || '.' ||
565                             dbms_assert.enquote_name(oname,FALSE);
566            exit when C1%NOTFOUND or loop_count > iterations;
567          exception when others then
568             my_err := sqlcode;
569             if my_err = -1555 then -- snapshot too old, re-execute fetch query
570               exit;
571             else
572               raise;
573             end if;
574          end;
575          initjvmaux.exec(ddl_statement);
576          loop_count := loop_count + 1;
577        end loop;
578        close C1;
579      end loop;
580    end;
581    commit;
582    drp('delete from java$policy$shared$table');
583    update obj$ set status=1 where obj#=(select obj# from obj$,javasnm$
584      where owner#=0 and type#=29 and short(+)=name and
585      nvl(longdbcs,name)='oracle/aurora/rdbms/Compiler');
586    commit;
587  end;
588  
589  end;
590  /

Package body created.

SQL> 
SQL> show errors
No errors.
SQL> 
SQL> call initjvmaux.drp('drop table java$rmjvm$aux');

Call completed.

SQL> call initjvmaux.drp('drop table java$rmjvm$aux2');

Call completed.

SQL> call initjvmaux.drp('drop table java$rmjvm$aux3');

Call completed.

SQL> create table java$rmjvm$aux(obj# number);

Table created.

SQL> create table java$rmjvm$aux2(name varchar2(30));

Table created.

SQL> create table java$rmjvm$aux3(obj# number);

Table created.

SQL> create unique index java$rmjvm$auxi on java$rmjvm$aux(obj#);

Index created.

SQL> create unique index java$rmjvm$auxi2 on java$rmjvm$aux2(name);

Index created.

SQL> create unique index java$rmjvm$auxi3 on java$rmjvm$aux3(obj#);

Index created.

SQL> 
SQL> call initjvmaux.create_if_not_present('create table javajar$ (name varchar2(30) not null, owner# number not null, path varchar2(4000), contents blob)');

Call completed.

SQL> call initjvmaux.create_if_not_present('create unique index javajar$i on javajar$(name, owner#)');

Call completed.

SQL> 
SQL> call initjvmaux.create_if_not_present('create table javajarobjects$ (jarname varchar2(30) not null, owner# number not null, objname varchar2(40) not null, namespace number not null)');

Call completed.

SQL> 
SQL> call initjvmaux.create_if_not_present('create table java$jvm$runtime$parameters (owner# number not null, flags number)');

Call completed.

SQL> call initjvmaux.create_if_not_present('create unique index java$jvm$runtime$parameters$i on java$jvm$runtime$parameters(owner#)');

Call completed.

SQL> 
SQL> call initjvmaux.create_if_not_present('create table java$jvm$rjbc (id varchar2(100), path varchar2(4000), lob blob)');

Call completed.

SQL> call initjvmaux.create_if_not_present('create unique index java$jvm$rjbc$i on java$jvm$rjbc(id)');

Call completed.

SQL> 
SQL> -- Persistent storage for jit
SQL> call initjvmaux.create_if_not_present('create table java$mc$ (  obj#    number not null,  method# number not null,  piece#  number not null,  length  number not null,  piece   long raw not null )');

Call completed.

SQL> call initjvmaux.create_if_not_present('create index java$mc$objn_idx on java$mc$(obj#)');

Call completed.

SQL> 
SQL> -- Method-level jit-dependences
SQL> call initjvmaux.create_if_not_present('create table java$mc$deps (  obj#    number not null,  method# number not null,  dobj#  number not null,  dtype#  number not null )');

Call completed.

SQL> call initjvmaux.create_if_not_present('create index java$mc$deps$objn_idx on java$mc$deps(obj#)');

Call completed.

SQL> 
SQL> -- Method-level metadata
SQL> call initjvmaux.create_if_not_present('create table java$method$metadata (  obj#    number not null,  method# number not null,  piece#  number not null,  length  number not null,  piece   long raw not null )');

Call completed.

SQL> call initjvmaux.create_if_not_present('create index java$method$metadata$$objn_idx on java$method$metadata(obj#)');

Call completed.

SQL> 
SQL> -- JIT compiler options
SQL> call initjvmaux.create_if_not_present('create table java$compiler$options (owner# number not null, property varchar2(64), value varchar2(4000))');

Call completed.

SQL> 
SQL> -- Java external call credentials
SQL> call initjvmaux.create_if_not_present('create table java$runtime$exec$user$ (owner# number not null, os_username varchar2(512), os_password varchar2(512))');

Call completed.

SQL> 
SQL> -- Java negative dependencies
SQL> call initjvmaux.create_if_not_present('create table javanegdeps$ (obj# number,name varchar2(30),uname varchar2(30))');

Call completed.

SQL> call initjvmaux.create_if_not_present('create index i_javanegdeps_1 on javanegdeps$(obj#)');

Call completed.

SQL> call initjvmaux.create_if_not_present('create index i_javanegdeps_2 on javanegdeps$(name, uname)');

Call completed.

SQL> 
SQL> -- Package rmjvm: encapsulates undo logic for removing Java system objects
SQL> -- during upgrade/downgrade and for full removal of Java to back out of
SQL> -- the results of a failed initjvm
SQL> 
SQL> create or replace package rmjvm authid current_user is
  2   procedure run(remove_all boolean);
  3   procedure strip;
  4   function hextochar(x varchar2) return varchar2;
  5   procedure check_for_rmjvm;
  6  end;
  7  /

Package created.

SQL> 
SQL> create or replace package body rmjvm is
  2  
  3  procedure exec (x varchar2) as
  4  begin
  5   initjvmaux.exec(x);
  6  end;
  7  
  8  procedure drp (x varchar2) as
  9  begin
 10   initjvmaux.drp(x);
 11  end;
 12  
 13  procedure run(remove_all boolean) as
 14  begin
 15  --    DESCRIPTION
 16  --      This removes java related objects from the data dictionary.
 17  --      If remove_all is true, it removes all java objects and java
 18  --      related tables and packages, including user objects.
 19  --      If remove all is false, it removes only the java objects, such
 20  --      as system classes, that are considered to be a fixed part of a
 21  --      given Oracle release.  It does not remove user objects.
 22  --
 23  --    NOTES
 24  --      This procedure is destructive.  After it runs, System classes
 25  --      must be reloaded either by initjvm or in a subsequent
 26  --      upgraded/downgrade phase before Java is again usable.
 27  --
 28  --      This procedure requires a significant amount of rollback
 29  --      to execute.
 30  --
 31  
 32  dbms_output.enable(10000000); -- biggest size we can get
 33  
 34  initjvmaux.rollbacksetup;
 35  
 36  commit;
 37  initjvmaux.rollbackset;
 38  
 39  declare
 40  c number;
 41  begin
 42  select count(*) into c from java$rmjvm$aux;
 43  if c = 0 then
 44    commit;
 45    initjvmaux.rollbackset;
 46    if remove_all then
 47    exec('insert into java$rmjvm$aux (select obj# from obj$ where ' ||
 48      'type#=28 or type#=29 or type#=30 or namespace=32)');
 49    else
 50    exec('insert into java$rmjvm$aux (select joxftobn from x$joxfc ' ||
 51      'where bitand(joxftflags,96)!=0)');
 52    commit;
 53    initjvmaux.rollbackset;
 54    exec('insert into java$rmjvm$aux (select joxftobn from x$joxfr ' ||
 55      'where bitand(joxftflags,96)!=0)');
 56    commit;
 57    initjvmaux.rollbackset;
 58    exec('insert into java$rmjvm$aux (select obj# from obj$ ' ||
 59      'where namespace=32)');
 60    end if;
 61  end if;
 62  end;
 63  
 64  commit;
 65  initjvmaux.rollbackset;
 66  
 67  dbms_output.put_line('drop or disable triggers with java implementations');
 68  
 69  drp('drop trigger JIS$ROLE_TRIGGER$');
 70  
 71  drp('delete from duc$ where owner=''SYS'' and pack=''JIS$INTERCEPTOR$'' ' ||
 72      'and proc=''USER_DROPPED''');
 73  drp('delete from aurora$startup$classes$ where ' ||
 74      'classname=''oracle.aurora.mts.http.admin.RegisterService''');
 75  drp('delete from aurora$dyn$reg');
 76  drp('alter trigger CDC_ALTER_CTABLE_BEFORE disable');
 77  drp('alter trigger CDC_CREATE_CTABLE_BEFORE disable');
 78  drp('alter trigger CDC_CREATE_CTABLE_AFTER disable');
 79  drp('alter trigger CDC_DROP_CTABLE_BEFORE disable');
 80  drp('delete from JAVA$CLASS$MD5$TABLE');
 81  commit;
 82  
 83  initjvmaux.rollbackset;
 84  
 85  dbms_output.put_line('drop synonyms with java targets');
 86  
 87  DECLARE
 88    cursor C1 is select name from java$rmjvm$aux2;
 89  
 90    DDL_CURSOR integer;
 91    syn_name varchar2(30);
 92    iterations number;
 93    previous_iterations number;
 94    loop_count number;
 95    my_err     number;
 96  BEGIN
 97   previous_iterations := 10000000;
 98  
 99   DDL_CURSOR := dbms_sql.open_cursor;
100  
101   loop
102  
103    exec('delete from java$rmjvm$aux2');
104    if remove_all then
105    exec('insert into  java$rmjvm$aux2 (select unique o1.name from ' ||
106       'obj$ o1,obj$ o2 where o1.type#=5 and o1.owner#=1 and o1.name=o2.name and o2.type#=29)');
107    else
108    exec('insert into  java$rmjvm$aux2 (select unique o1.name ' ||
109              'from obj$ o1,obj$ o2, java$rmjvm$aux j ' ||
110              'where o1.type#=5 and o1.owner#=1 and o1.name=o2.name and o2.obj#=j.obj#)');
111    end if;
112  
113   -- To make sure we eventually stop, pick a max number of iterations
114    select count(*) into iterations from java$rmjvm$aux2;
115  
116    exit when iterations=0 or iterations >= previous_iterations;
117    previous_iterations := iterations;
118    loop_count := 0;
119  
120    OPEN C1;
121  
122    LOOP
123  
124      BEGIN
125        FETCH C1 INTO syn_name;
126        EXIT WHEN C1%NOTFOUND OR loop_count > iterations;
127      EXCEPTION
128       WHEN OTHERS THEN
129         my_err := SQLCODE;
130         IF my_err = -1555 THEN -- snapshot too old, re-execute fetch query
131          exit;
132         ELSE
133          RAISE;
134         END IF;
135      END;
136  
137      BEGIN
138          -- Issue the Alter Statement  (Parse implicitly executes DDLs)
139          dbms_sql.parse(DDL_CURSOR, 'DROP PUBLIC SYNONYM '||
140              dbms_assert.enquote_name(syn_name, false),
141              dbms_sql.native);
142  
143      EXCEPTION
144          WHEN OTHERS THEN
145          null; -- ignore, and proceed.
146      END;
147  
148    <<continue>>
149      loop_count := loop_count + 1;
150  
151    END LOOP;
152    CLOSE C1;
153  
154   end loop;
155   dbms_sql.close_cursor(DDL_CURSOR);
156  
157  END;
158  commit;
159  
160  dbms_output.put_line('flush shared_pool');
161  execute immediate 'alter system flush shared_pool';
162  execute immediate 'alter system flush shared_pool';
163  execute immediate 'alter system flush shared_pool';
164  
165  declare
166  total_to_delete number;
167  deletions_per_iteration number := 1000;
168  begin
169  
170  initjvmaux.rollbackset;
171  
172  dbms_output.put_line('delete from dependency$');
173  
174  if remove_all then
175  select count(*) into total_to_delete from dependency$
176    where p_obj# in (select obj# from java$rmjvm$aux);
177  else
178  select count(*) into total_to_delete from dependency$
179    where p_obj# in (select obj# from obj$ where (type#=29 or type#=56));
180  end if;
181  commit;
182  
183  loop
184    dbms_output.put_line(total_to_delete ||' remaining at ' || to_char(sysdate,'mm-dd hh:mi:ss'));
185    initjvmaux.rollbackset;
186    if remove_all then
187    delete from dependency$ where p_obj# in
188      (select obj# from java$rmjvm$aux)
189      and rownum <= deletions_per_iteration;
190    else
191    delete from dependency$ where p_obj# in
192      (select obj# from obj$ where (type#=29 or type#=56))
193      and rownum <= deletions_per_iteration;
194    end if;
195    commit;
196    exit when total_to_delete <= deletions_per_iteration;
197    total_to_delete := total_to_delete - deletions_per_iteration;
198  end loop;
199  
200  initjvmaux.rollbackset;
201  
202  dbms_output.put_line('delete from error$');
203  
204  if remove_all then
205  select count(*) into total_to_delete from error$
206    where obj# in (select obj# from java$rmjvm$aux);
207  else
208  select count(*) into total_to_delete from error$
209    where obj# in (select obj# from obj$
210                   where type#=28 or type#=29 or type#=30 or type#=56);
211  end if;
212  commit;
213  loop
214    dbms_output.put_line(total_to_delete ||' remaining at ' || to_char(sysdate,'mm-dd hh:mi:ss'));
215    initjvmaux.rollbackset;
216    if remove_all then
217    delete from error$ where obj# in
218      (select obj# from java$rmjvm$aux)
219      and rownum <= deletions_per_iteration;
220    else
221    delete from error$ where obj# in
222      (select obj# from obj$ where type#=28 or type#=29 or type#=30 or type#=56)
223      and rownum <= deletions_per_iteration;
224    end if;
225    commit;
226    exit when total_to_delete <= deletions_per_iteration;
227    total_to_delete := total_to_delete - deletions_per_iteration;
228  end loop;
229  
230  initjvmaux.rollbackset;
231  
232  dbms_output.put_line('delete from objauth$');
233  
234  select count(*) into total_to_delete from objauth$
235     where obj# in (select obj# from java$rmjvm$aux);
236  commit;
237  loop
238    dbms_output.put_line(total_to_delete ||' remaining at ' || to_char(sysdate,'mm-dd hh:mi:ss'));
239    initjvmaux.rollbackset;
240    delete from objauth$ where obj# in (select obj# from java$rmjvm$aux)
241      and rownum <= deletions_per_iteration;
242    commit;
243    exit when total_to_delete <= deletions_per_iteration;
244    total_to_delete := total_to_delete - deletions_per_iteration;
245  end loop;
246  
247  initjvmaux.rollbackset;
248  
249  dbms_output.put_line('delete from access$');
250  
251  select count(*) into total_to_delete from access$
252     where d_obj# in (select obj# from java$rmjvm$aux);
253  commit;
254  loop
255    dbms_output.put_line(total_to_delete ||' remaining at ' || to_char(sysdate,'mm-dd hh:mi:ss'));
256    initjvmaux.rollbackset;
257    delete from access$ where d_obj# in (select obj# from java$rmjvm$aux)
258      and rownum <= deletions_per_iteration;
259    commit;
260    exit when total_to_delete <= deletions_per_iteration;
261    total_to_delete := total_to_delete - deletions_per_iteration;
262  end loop;
263  
264  if remove_all then
265  initjvmaux.rollbackset;
266  
267  dbms_output.put_line('delete from javasnm$');
268  delete from javasnm$;
269  commit;
270  end if;
271  
272  initjvmaux.rollbackset;
273  
274  dbms_output.put_line('delete from idl_ub1$');
275  
276  select count(*) into total_to_delete
277   from idl_ub1$ where obj# in (select obj# from java$rmjvm$aux);
278  commit;
279  loop
280    dbms_output.put_line(total_to_delete ||' remaining at ' || to_char(sysdate,'mm-dd hh:mi:ss'));
281    initjvmaux.rollbackset;
282    delete from idl_ub1$ where obj# in (select obj# from java$rmjvm$aux)
283       and rownum <= deletions_per_iteration;
284    commit;
285    exit when total_to_delete <= deletions_per_iteration;
286    total_to_delete := total_to_delete - deletions_per_iteration;
287  end loop;
288  
289  dbms_output.put_line('delete from idl_ub2$');
290  
291  execute immediate
292  'select count(*) from idl_ub2$ ' ||
293    'where obj# in (select obj# from java$rmjvm$aux)' into total_to_delete;
294  commit;
295  loop
296    dbms_output.put_line(total_to_delete ||' remaining at ' || to_char(sysdate,'mm-dd hh:mi:ss'));
297    initjvmaux.rollbackset;
298    execute immediate
299    'delete from idl_ub2$ where obj# in (select obj# from java$rmjvm$aux) ' ||
300       'and rownum <= :deletions_per_iteration' using deletions_per_iteration;
301    commit;
302    exit when total_to_delete <= deletions_per_iteration;
303    total_to_delete := total_to_delete - deletions_per_iteration;
304  end loop;
305  
306  dbms_output.put_line('delete from idl_char$');
307  
308  select count(*) into total_to_delete
309   from idl_char$ where obj# in (select obj# from java$rmjvm$aux);
310  commit;
311  loop
312    dbms_output.put_line(total_to_delete ||' remaining at ' || to_char(sysdate,'mm-dd hh:mi:ss'));
313    initjvmaux.rollbackset;
314    delete from idl_char$ where obj# in (select obj# from java$rmjvm$aux)
315       and rownum <= deletions_per_iteration;
316    commit;
317    exit when total_to_delete <= deletions_per_iteration;
318    total_to_delete := total_to_delete - deletions_per_iteration;
319  end loop;
320  
321  dbms_output.put_line('delete from idl_sb4$');
322  
323  execute immediate
324  'select count(*) from idl_sb4$ ' ||
325   'where obj# in (select obj# from java$rmjvm$aux)' into total_to_delete;
326  commit;
327  loop
328    dbms_output.put_line(total_to_delete ||' remaining at ' || to_char(sysdate,'mm-dd hh:mi:ss'));
329    initjvmaux.rollbackset;
330    execute immediate
331    'delete from idl_sb4$ where obj# in (select obj# from java$rmjvm$aux) ' ||
332       'and rownum <= :deletions_per_iteration' using deletions_per_iteration;
333    commit;
334    exit when total_to_delete <= deletions_per_iteration;
335    total_to_delete := total_to_delete - deletions_per_iteration;
336  end loop;
337  
338  dbms_output.put_line('delete from obj$');
339  --
340  -- only delete from obj$ if all the java information was deleted
341  -- from the other tables correctly.  Once we run this delete
342  -- there is no going back to remove the information from
343  -- syn$, objauth$, access$ and dependency$ using this script.
344  --
345  DECLARE
346   c1 number;
347   c2 number;
348   c3 number;
349   c4 number;
350   c5 number;
351  BEGIN
352    if remove_all then
353    select count(*) into c1 from syn$ where obj# in
354          (select o1.obj# from obj$ o1,obj$ o2
355                  where o1.name=o2.name and
356                  o1.type#=5 and o1.owner#=1 and o2.type#=29);
357    select count(*) into c2 from dependency$ where p_obj# in
358          (select obj# from java$rmjvm$aux);
359    select count(*) into c4 from javasnm$;
360    else
361    select count(*) into c1 from syn$ where obj# in
362          (select o1.obj# from obj$ o1,obj$ o2,java$rmjvm$aux j
363             where o1.name=o2.name and o1.type#=5 and o1.owner#=1
364                   and o2.obj#=j.obj#);
365    select count(*) into c2 from dependency$ where p_obj# in
366          (select obj# from obj$ where
367           type#=28 or type#=29 or type#=30 or type#=56);
368    c4 := 0;
369    end if;
370  
371    select count(*) into c3 from objauth$ where obj# in
372          (select obj# from java$rmjvm$aux);
373    select count(*) into c5 from access$ where d_obj# in
374          (select obj# from java$rmjvm$aux);
375  
376    update java$jvm$status set rmjvmtime = (select startup_time from v$instance);
377  
378    IF c1 = 0 AND c2 = 0 AND c3 = 0 AND c4 = 0 AND c5 = 0 THEN
379          select count(*) into total_to_delete
380           from obj$ where obj# in (select obj# from java$rmjvm$aux);
381          commit;
382          loop
383          initjvmaux.rollbackset;
384          delete from obj$ where obj# in (select obj# from java$rmjvm$aux)
385             and rownum <= deletions_per_iteration;
386          commit;
387          exit when total_to_delete <= deletions_per_iteration;
388          total_to_delete := total_to_delete - deletions_per_iteration;
389          end loop;
390  
391          initjvmaux.rollbackset;
392          if not remove_all then
393          update obj$ set status=5 where type#=28 or type#=29;
394          end if;
395  
396          commit;
397          initjvmaux.rollbackset;
398          delete from java$rmjvm$aux;
399  
400          commit;
401          initjvmaux.rollbackset;
402  
403          insert into java$rmjvm$aux
404             (select obj# from obj$ where type#=10 and owner#=1);
405          delete from java$rmjvm$aux
406              where obj# in (select p_obj# from dependency$);
407          delete from obj$ where obj# in  (select obj# from java$rmjvm$aux);
408          commit;
409          delete from java$rmjvm$aux;
410          commit;
411  
412          dbms_output.put_line('All java objects removed');
413    ELSE
414          dbms_output.put_line('Java objects not completely removed. ' ||
415                               'Rerun rmjvm.run');
416    END IF;
417  END;
418  
419  end;
420  
421  commit;
422  
423  initjvmaux.rollbackcleanup;
424  
425  dbms_output.put_line('flush shared_pool');
426  execute immediate 'alter system flush shared_pool';
427  execute immediate 'alter system flush shared_pool';
428  execute immediate 'alter system flush shared_pool';
429  end;
430  
431  function hextochar(x varchar2) return varchar2 as
432    y varchar2(200) := '';
433    d number;
434  begin
435    for i in 1..length(x)/2 loop
436      d := to_number(substr(x,i*2-1,2),'XX');
437      if d = 0 then return y;end if;
438      y := y || chr(d);
439    end loop;
440    return y;
441  end;
442  
443  procedure check_for_rmjvm as
444   foo exception;
445   pragma exception_init(foo,-28);
446   ct number;
447  begin
448    -- check whether registry says startup is pending
449    if initjvmaux.startup_pending_p then raise foo; end if;
450    -- check whether there are any KGL handles for non fixed objects which
451    -- do not appear in obj$.  This can indicate that rmjvm has run in the
452    -- current instance
453    -- Ignore SYS temp tables created during optimizer statstics
454    -- collection.
455    select count(*) into ct from x$kglob,obj$ where
456       kglnaobj=name(+) and name is null and kglobtyp in (28, 29, 30, 56);
457    if ct != 0 then raise foo; end if;
458  end;
459  
460  procedure strip as
461  begin
462  --    DESCRIPTION
463  --      This strips bytecode optimizations from non-system java classes,
464  --      and sets the status of these classes to invalid (unresolved).
465  --      It is intended for use only prior to downgrade to 8.1.5, and is
466  --      present only because 8.1.5 resolution code incorrectly fails to
467  --      do such stripping, allowing 8.1.6 optimization codes that cannot
468  --      be correctly interpreted by 8.1.5 to remain in place.
469  --
470  
471  dbms_output.enable(10000000); -- biggest size we can get
472  initjvmaux.rollbacksetup;
473  commit;
474  initjvmaux.rollbackset;
475  
476  delete from java$rmjvm$aux;
477  
478  exec('insert into java$rmjvm$aux (select joxftobn from x$joxfc ' ||
479      'where bitand(joxftflags,96)=0)');
480  
481  commit;
482  initjvmaux.rollbackset;
483  
484  exec('create or replace java source named java$rmjvm$src as import java.lang.Object;');
485  
486  commit;
487  initjvmaux.rollbackset;
488  
489  dbms_output.put_line('strip 8.1.6 bytecode optimizations');
490  
491  DECLARE
492    done boolean;
493    already_done number := 0;
494    cursor C1(above number) is select
495       'ALTER JAVA CLASS "' || u.name || '"."' || o.name || '" RESOLVE',
496       o.obj# from
497       obj$ o, user$ u, java$rmjvm$aux j where
498       o.obj#=j.obj# and u.user# = o.owner# and j.obj# > above
499       order by j.obj#;
500  
501    DDL_CURSOR integer;
502    ddl_statement varchar2(200);
503    my_err     number;
504  BEGIN
505  
506   DDL_CURSOR := dbms_sql.open_cursor;
507  
508   loop
509    done := true;
510    OPEN C1(already_done);
511  
512    LOOP
513  
514      BEGIN
515        FETCH C1 INTO ddl_statement, already_done;
516        EXIT WHEN C1%NOTFOUND;
517      EXCEPTION
518       WHEN OTHERS THEN
519         my_err := SQLCODE;
520         IF my_err = -1555 THEN -- snapshot too old, re-execute fetch query
521  --        CLOSE C1;
522          done := false;
523          exit;
524         ELSE
525          RAISE;
526         END IF;
527      END;
528  
529      BEGIN
530          -- Issue the Alter Statement  (Parse implicitly executes DDLs)
531          dbms_sql.parse(DDL_CURSOR, dbms_assert.noop(ddl_statement),
532                         dbms_sql.native);
533      EXCEPTION
534          WHEN OTHERS THEN
535          null; -- ignore, and proceed.
536      END;
537  
538    END LOOP;
539    CLOSE C1;
540    exit when done;
541  
542   end loop;
543   dbms_sql.close_cursor(DDL_CURSOR);
544  
545  END;
546  commit;
547  
548  initjvmaux.rollbackset;
549  
550  exec('drop java source java$rmjvm$src');
551  delete from java$rmjvm$aux;
552  
553  commit;
554  
555  initjvmaux.rollbackcleanup;
556  
557  end;
558  
559  end;
560  /

Package body created.

SQL> 
SQL> create or replace package jvmfcb authid current_user is
  2  procedure init(dirpath varchar2);
  3  procedure put(buff raw);
  4  procedure exit;
  5  end;
  6  /

Package created.

SQL> 
SQL> create or replace package body jvmfcb is
  2  
  3  fd utl_file.file_type;
  4  
  5  procedure init(dirpath varchar2) as
  6  begin
  7    execute immediate
  8     'create or replace directory wfcjadmin as ' ||
  9       dbms_assert.enquote_literal(dirpath);
 10    fd := utl_file.fopen('WFCJADMIN', 'fclasses.bin', 'wb');
 11    delete from java$rmjvm$aux;
 12    insert into java$rmjvm$aux
 13    (select joxftobn from x$joxft where bitand(joxftflags,4384) in (32,256,288));
 14    delete from java$rmjvm$aux2;
 15    insert into java$rmjvm$aux2
 16    (select unique(jj.name)
 17     from java$rmjvm$aux j,obj$ o,javajar$ jj,javajarobjects$ jjo
 18     where o.obj#=j.obj# and
 19      (select 1 from x$joxft
 20       where joxftobn=j.obj# and bitand(joxftflags,8192)=8192)=1 and
 21      jj.name=jjo.jarname and jj.owner#=0 and jjo.owner#=0 and
 22      jjo.objname=o.name);
 23  end;
 24  
 25  procedure put(buff raw) as
 26  begin
 27    utl_file.put_raw(fd, buff, true);
 28  end;
 29  
 30  procedure exit as
 31  begin
 32    utl_file.fclose(fd);
 33    delete from java$rmjvm$aux;
 34    delete from java$rmjvm$aux2;
 35  end;
 36  
 37  end;
 38  /

Package body created.

SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> -- try to determine whether this script is running in the same instance
SQL> -- where rmjvm.run was done
SQL> 
SQL> whenever sqlerror exit;
SQL> 
SQL> /*
SQL> #######################################################################
SQL> #######################################################################
SQL> ##  If the following  rmjvm.check_for_rmjvm()  statement results in
SQL> ##  ORA-00028 it means that the database has not been restarted
SQL> ##  since the rmjvm script was run.  If so, restart the database and
SQL> ##  retry this script.
SQL> #######################################################################
SQL> #######################################################################
SQL> */
SQL> 
SQL> call rmjvm.check_for_rmjvm();

Call completed.

SQL> 
SQL> set serveroutput on size 999999
SQL> 
SQL> -- State start of LOAD action
SQL> /*
SQL> #######################################################################
SQL> #######################################################################
SQL> ##  If the following statement causes an
SQL> ##  ORA-29539: Java system classes already installed
SQL> ##  error, and thereby terminates the sqlplus connection,
SQL> ##  initjvm.sql is being run in a database in which it has
SQL> ##  has already been run to completion.  This is not allowed.
SQL> #######################################################################
SQL> #######################################################################
SQL> */
SQL> declare foo exception;
  2  pragma exception_init(foo, -29539);
  3  action varchar2(30) := 'LOAD';
  4  begin
  5    initjvmaux.startaction_outarg(action);
  6    if action != 'LOAD' then
  7      initjvmaux.endaction;
  8      initjvmaux.abort_message(
  9          'Aborting because initjvm.sql has already been run');
 10      raise foo;
 11    end if;
 12  exception when no_data_found then null;
 13  end;
 14  /

PL/SQL procedure successfully completed.

SQL> 
SQL> /*
SQL> #######################################################################
SQL> #######################################################################
SQL> ##  The following statement may cause an
SQL> ##  ORA-29554: unhandled Java out of memory condition
SQL> ##  error, and thereby terminate the sqlplus connection.
SQL> ##  If so, this is because there is insufficient system tablespace,
SQL> ##  shared or java pool size, or some other resource value is too small.
SQL> ##  An additional message describing the problem will be output by
SQL> ##  the statement.
SQL> #######################################################################
SQL> #######################################################################
SQL> */
SQL> execute initjvmaux.check_sizes_for_cjs;
alter system flush shared_pool

PL/SQL procedure successfully completed.

SQL> 
SQL> whenever sqlerror continue;
SQL> 
SQL> begin if initjvmaux.startstep('SET_REGISTRY_LOADING') then
  2    initjvmaux.setloading();
  3    initjvmaux.endstep;
  4  end if; end;
  5  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Roles for Security - must come before create java system
SQL> @@initjvm1
SQL> -- subscript for initjvm.sql and ilk
SQL> 
SQL> -- Roles for Security - must come before create java system
SQL> begin if initjvmaux.startstep('ROLES_FOR_SECURITY') then
  2  
  3    initjvmaux.drp('drop role javauserpriv');
  4    initjvmaux.exec('create role javauserpriv');
  5    initjvmaux.exec('grant javauserpriv to sys');
  6    initjvmaux.drp('drop role javaidpriv');
  7    initjvmaux.exec('create role javaidpriv');
  8    initjvmaux.exec('grant javaidpriv to sys');
  9    initjvmaux.drp('drop role javasyspriv');
 10    initjvmaux.exec('create role javasyspriv');
 11    initjvmaux.exec('grant javasyspriv to sys');
 12    initjvmaux.exec('grant javauserpriv to javasyspriv');
 13    initjvmaux.drp('drop role javadebugpriv');
 14    initjvmaux.exec('create role javadebugpriv');
 15    initjvmaux.drp('drop role ejbclient');
 16    initjvmaux.exec('create role ejbclient');
 17    initjvmaux.drp('drop role jmxserver');
 18    initjvmaux.exec('create role jmxserver');
 19    initjvmaux.exec('grant jmxserver to sys');
 20  
 21    initjvmaux.endstep;
 22  end if; end;
 23  /
drop role javauserpriv
create role javauserpriv
grant javauserpriv to sys
drop role javaidpriv
create role javaidpriv
grant javaidpriv to sys
drop role javasyspriv
create role javasyspriv
grant javasyspriv to sys
grant javauserpriv to javasyspriv
drop role javadebugpriv
create role javadebugpriv
drop role ejbclient
create role ejbclient
drop role jmxserver
create role jmxserver
grant jmxserver to sys

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Prevent the script from continuing in the case where create java system
SQL> -- detects existing java classes or there is any other kind of error.
SQL> whenever sqlerror exit;
SQL> 
SQL> -- Load all the Java classes
SQL> begin if initjvmaux.startstep('CREATE_JAVA_SYSTEM') then
  2    initjvmaux.rollbacksetup;
  3    commit;
  4    initjvmaux.rollbackset;
  5    initjvmaux.exec('create or replace java system');
  6    commit;
  7    initjvmaux.rollbackcleanup;
  8    initjvmaux.endstep;
  9  end if; end;
 10  /
create or replace java system

PL/SQL procedure successfully completed.

SQL> 
SQL> whenever sqlerror continue;
SQL> 
SQL> -- create view javasnm
SQL> @@initjvm3
SQL> -- subscript for initjvm.sql and ilk
SQL> 
SQL> -- create view javasnm
SQL> create or replace view javasnm(short, longname) as
  2    select short,longdbcs from javasnm$;

View created.

SQL> call initjvmaux.drp('drop public synonym javasnm');
drop public synonym javasnm

Call completed.

SQL> create public synonym javasnm for javasnm;

Synonym created.

SQL> grant select on javasnm to public;

Grant succeeded.

SQL> 
SQL> 
SQL> -- Java Sanity check for installation
SQL> -- Define package dbms_java
SQL> @@initjvm2
SQL> -- subscript for initjvm.sql and ilk
SQL> 
SQL> -- Java Sanity check for installation
SQL> -- If the following query returns 0, then the Java installation
SQL> -- did not succeed
SQL> select count(*) from all_objects where object_type like 'JAVA%';

  COUNT(*)
----------
     25901

1 row selected.

SQL> 
SQL> -- Define package dbms_java
SQL> @@initdbj
SQL> variable jvmrmaction varchar2(30)
SQL> execute :jvmrmaction := 'FULL_REMOVAL';

PL/SQL procedure successfully completed.

SQL> @@jvmrmdbj
SQL> -- Remove some portion of the dictionary objects created by initdbj.sql
SQL> 
SQL> -- This script must be run as a subscript of a script which sets the
SQL> -- variable jvmrmaction.
SQL> -- Possible values are
SQL> --  FULL_REMOVAL:        remove all java related objects
SQL> --  GRADE_REMOVAL:       remove java related objects for general up/downgrade
SQL> --  DOWNGRADE_x.y.z_TO_a.b.c: remove or massage system objects as appropriate
SQL> --                       when downgrading to release a.b.c
SQL> --  NONE:                do nothing
SQL> 
SQL> 
SQL> print jvmrmaction

JVMRMACTION
--------------------------------------------------------------------------------
FULL_REMOVAL

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or
  2           (:jvmrmaction = 'GRADE_REMOVAL' and
  3            initjvmaux.startstep('JVMRMDBJ')) then
  4  
  5  initjvmaux.drp('drop package dbms_java');
  6  initjvmaux.drp('drop PUBLIC SYNONYM dbms_java');
  7  initjvmaux.drp('drop FUNCTION dbj_long_name');
  8  initjvmaux.drp('drop function "NameFromLastDDL"');
  9  initjvmaux.drp('drop PUBLIC SYNONYM "NameFromLastDDL"');
 10  initjvmaux.drp('drop FUNCTION dbj_short_name');
 11  initjvmaux.drp('drop PUBLIC SYNONYM dbj_short_name');
 12  
 13  if :jvmrmaction = 'GRADE_REMOVAL' then initjvmaux.endstep; end if;
 14  
 15  end if;end;
 16  /
drop package dbms_java
drop PUBLIC SYNONYM dbms_java
drop FUNCTION dbj_long_name
drop function "NameFromLastDDL"
drop PUBLIC SYNONYM "NameFromLastDDL"
drop FUNCTION dbj_short_name
drop PUBLIC SYNONYM dbj_short_name

PL/SQL procedure successfully completed.

SQL> 
SQL> create or replace package dbms_java authid current_user as
  2  
  3    type compiler_option_type is record(option_line varchar2(128));
  4  
  5    type compiler_option_type_table is table of compiler_option_type;
  6  
  7    PROCEDURE start_btl;
  8  
  9    PROCEDURE stop_btl;
 10  
 11    PROCEDURE terminate_btl;
 12  
 13    -- compile all methods defined by the class identified by
 14    -- classname in the current schema.
 15    -- return the number of methods successfully compiled
 16    --
 17    -- If the class does not exist an ORA-29532 (Uncaught Java
 18    -- exception) will occur.
 19    FUNCTION compile_class(classname VARCHAR2) return NUMBER;
 20  
 21  
 22    -- compile the method specified by name and Java type signature
 23    -- defined by the class identified by classname in the current
 24    -- schema.
 25    -- return the number of methods successfully compiled
 26    --
 27    -- If the class does not exist, an ORA-29532 (Uncaught Java
 28    -- exception) will occur.
 29    FUNCTION compile_method(classname  VARCHAR2,
 30                            methodname VARCHAR2,
 31                            methodsig  VARCHAR2) return NUMBER;
 32  
 33  
 34    -- uncompile all methods defined by the class identified by
 35    -- classname in the current schema.
 36    --
 37    -- return the number of methods successfully uncompiled.
 38    --
 39    -- If permanentp, then mark these methods as permanently dynamicaly
 40    -- un-compilable, otherwise, they are eligible for future dynamic
 41    -- recompilation.
 42    --
 43    -- If the class does not exist an ORA-29532 (Uncaught Java
 44    -- exception) will occur.
 45    FUNCTION uncompile_class(classname VARCHAR2,
 46                             permanentp NUMBER default 0) return NUMBER;
 47  
 48  
 49    -- uncompile the method specified by the name and Java type
 50    -- signature defined by the class identified by classname in the
 51    -- current schema.
 52    --
 53    -- return the number of methods successfully uncompiled.
 54    --
 55    -- If permanentp, then mark the method as permanently dynamicaly
 56    -- un-compilable, otherwise, it is eligible for future dynamic
 57    -- recompilation.
 58    --
 59    -- If the class does not exist an ORA-29532 (Uncaught Java
 60    -- exception) will occur.
 61    FUNCTION uncompile_method(classname  VARCHAR2,
 62                              methodname VARCHAR2,
 63                              methodsig  VARCHAR2,
 64                              permanentp NUMBER default 0) return NUMBER;
 65  
 66    --
 67    -- Dump the native code (if available) for the specified method to trace.
 68    --
 69    PROCEDURE dump_native_machine_code(classname  VARCHAR2,
 70                                       methodname VARCHAR2,
 71                                       methodsig  VARCHAR2);
 72  
 73    FUNCTION native_compiler_options return compiler_option_type_table pipelined;
 74  
 75    -- sets a native-compiler option to the specified value for the
 76    -- current schema
 77    PROCEDURE set_native_compiler_option(optionName VARCHAR2,
 78                                         value      VARCHAR2);
 79  
 80    -- decode, into a user-readable format, a persisted native-compiler
 81    -- option.  This function is not intended to be used by users
 82    -- directly
 83    FUNCTION decode_native_compiler_option(optionName VARCHAR2,
 84                                           value      VARCHAR2) RETURN VARCHAR2;
 85  
 86    -- unsets a native-compiler option given by the tuple
 87    --   [optionName, value].
 88    --
 89    -- if the option given by optionName is not allowed to have
 90    -- duplicate values, then the value is ignored.
 91    PROCEDURE unset_native_compiler_option(optionName VARCHAR2,
 92                                           value      VARCHAR2);
 93  
 94    FUNCTION init_btl(files_prefix VARCHAR2, type NUMBER,
 95                      sample_limit NUMBER, exclude_java NUMBER) return NUMBER;
 96    pragma restrict_references(init_btl, wnds, wnps);
 97  
 98    FUNCTION longname (shortname VARCHAR2) return VARCHAR2;
 99    pragma restrict_references(longname, wnds, wnps);
100  
101    FUNCTION shortname (longname VARCHAR2) RETURN VARCHAR2;
102    pragma restrict_references(shortname, wnds, wnps);
103  
104    -- functions and procedures to manipulate the compiler option table
105    -- what refers to a source name, package or class depending
106  
107    -- determine the option value for option optionName applied to
108    -- what
109    FUNCTION get_compiler_option(what VARCHAR2, optionName VARCHAR2)
110      return varchar2 ;
111    pragma restrict_references (get_compiler_option, wnds, wnps);
112  
113    -- set the option value to value for option optionName applied to
114    -- what.  And depending upon the characteristics of optionName
115    -- it may apply to "descendants" of what as well.
116    PROCEDURE set_compiler_option(what VARCHAR2, optionName VARCHAR2, value VARCHAR2);
117  
118    -- reset the option value. That is, undo an action performed by
119    -- set_compiler_option
120    PROCEDURE reset_compiler_option(what VARCHAR2, optionName VARCHAR2);
121  
122  
123    FUNCTION initGetSourceChunks (name VARCHAR2, owner VARCHAR2, type VARCHAR2)
124      RETURN NUMBER;
125    pragma restrict_references(initGetSourceChunks, wnds);
126  
127    FUNCTION getSourceChunk RETURN VARCHAR2;
128    pragma restrict_references(getSourceChunk, wnds);
129  
130    FUNCTION resolver (name VARCHAR2, owner VARCHAR2, type VARCHAR2)
131       RETURN VARCHAR2;
132    pragma restrict_references(resolver, wnds);
133  
134    FUNCTION derivedFrom (name VARCHAR2, owner VARCHAR2, type VARCHAR2)
135       RETURN VARCHAR2;
136    pragma restrict_references(derivedFrom, wnds);
137  
138    FUNCTION fixed_in_instance (name VARCHAR2, owner VARCHAR2, type VARCHAR2)
139       RETURN NUMBER;
140    pragma restrict_references(fixed_in_instance, wnds);
141  
142    PROCEDURE set_fixed_in_instance (name VARCHAR2, owner VARCHAR2,
143                                     type VARCHAR2, value NUMBER);
144  
145    FUNCTION sharedPrivateClassName (name VARCHAR2)
146       RETURN VARCHAR2;
147    pragma restrict_references(sharedPrivateClassName, wnds);
148  
149    -- RUNJAVA interface.  RUNJAVA is a facility for running
150    -- java in the OJVM server resident VM using a command line
151    -- interface that emulates the JDK java shell command.  In
152    -- particular, this interface allows the use of -classpath
153    -- to run classes loaded directly from the file system without
154    -- the intervening step of loading these classes into the database
155    -- via loadjava or the equivalent.  It also supports use of -D
156    -- arguments to set System property values.  There is an
157    -- auxiliary facility for establishing System property values
158    -- used by default (without requiring -D, in a manner intended
159    -- to be analogous to the use of environment variable by the
160    -- JDK in setting certain System properties).
161  
162    -- runjava:  This function takes a java command line as its
163    -- only argument and executes that command in the OJVM.  The
164    -- return value is null on successful completion, otherwise
165    -- an error message.  The format of the command line is the
166    -- same as that taken by the JDK java shell command, ie
167    -- [option switches] name_of_class_to_execute [arg1 arg2 ... argn]
168    -- The option switches -classpath and -D are supported.  Others
169    -- may be supported if they make sense in the OJVM environment.
170    -- This function differs from runjava_in_current_session in
171    -- that it clears any java state remaining from previous use of
172    -- java in the session prior to running the current command.
173    -- This is necessary in particular to guarantee that static
174    -- variable values derived at class initialization time from
175    -- -classpath and -D arguments are reflect the values of those
176    -- switches in the current command line.
177    FUNCTION runjava(cmdline VARCHAR2) RETURN VARCHAR2;
178  
179    -- runjava_in_current_session:  This function is the same as the
180    -- runjava function except that it does not clear java state
181    -- remaining from previous use of java in the session prior to
182    -- executing the current command line.  See the description
183    -- of runjava for other details.
184    FUNCTION runjava_in_current_session(cmdline VARCHAR2) RETURN VARCHAR2;
185  
186    -- endsession:  This function clears any java session state remaining
187    -- from previous execution of java in the current RDBMS session.
188    -- The return value is a message indicating the action taken.
189    FUNCTION endsession RETURN VARCHAR2;
190  
191    -- endsession_and_related_state:  This function clears any java
192    -- session state remaining from previous execution of java in the
193    -- current RDBMS session and all supporting data related to running
194    -- java, such as property settings and output specifications.
195    -- The return value is a message indicating the action taken.
196    FUNCTION endsession_and_related_state RETURN VARCHAR2;
197  
198    -- set_property:  This function provides for establishing
199    -- a value for a System property which will be used thereafter for the
200    -- duration of the current RDBMS session whenever a java session is
201    -- initialized.  The first argument is the name of the property
202    -- and the second is the value to be established for it.  The return value
203    -- from set_property is null unless some error occurred, such as an
204    -- attempt to set a value for a prescribed property, in which case
205    -- an error message is returned.
206    FUNCTION set_property(name VARCHAR2, value VARCHAR2) RETURN VARCHAR2;
207  
208    -- get_property:  This function returns any value previously established
209    -- by set_property, or null if there is no such value.
210    FUNCTION get_property(name VARCHAR2) RETURN VARCHAR2;
211  
212    -- remove_property:  This function removes any value previously established
213    -- by set_property.  The return value is null unless an error occurred,
214    -- in which case an error message is returned.
215    FUNCTION remove_property(name VARCHAR2) RETURN VARCHAR2;
216  
217    -- show_property.  This function prints a message of the form
218    --   name = value for the input name, or for all established property
219    -- bindings if name is null.  The return value is null on successful
220    -- completion, otherwise it is an error message.  The output is
221    -- printed to wherever java output is current directed.
222    FUNCTION show_property(name VARCHAR2) RETURN VARCHAR2;
223  
224    -- Methods for controlling destination of java output
225    PROCEDURE set_output (buffersize NUMBER);
226  
227    -- set_output_to_sql defines a named output specification which
228    -- constitutes a prescription for executing a sql statement whenever
229    -- output to the default System.out and System.err streams occurs.
230    -- The specification is defined for the duration of the current
231    -- session, or until remove_output_to_sql is called with its id.
232    -- The sql actions the specification prescribes will occur whenever
233    -- there is java output unless disable_output_to_sql has been called,
234    -- in which case the actions will not occur again until
235    -- enable_output_to_sql is called.
236    --
237    -- Arguments are
238    --   id       The name of the specification.  Multiple specifications
239    --            may exist in the same session, but each must have a distinct
240    --            id.  The id is used to identify the specification in the
241    --            functions remove, enable, disable and query_output_to_sql.
242    --   stmt     The default sql statement to execute when java output occurs.
243    --   bindings A string containing tokens from the set
244    --            ID, TEXT, LENGTH, LINENO, SEGNO, NL and ERROUT.  This string
245    --            defines how the sql statement stmt will be bound.  The
246    --            position in the bindings string of a token corresponds to
247    --            the bind position in the sql statement.  The meanings of the
248    --            tokens are
249    --            ID  the id of the specification, bound as a VARCHAR2
250    --            TEXT  the text being output, bound as a VARCHAR2
251    --            LENGTH the length of the text, bound as a NUMBER
252    --            LINENO the line number (since the beginning of session output),
253    --                   bound as a NUMBER
254    --            SEGNO the segment number within a line that is being output
255    --                   in more than one piece, bound as a NUMBER
256    --            NL a boolean indicating whether the text is to be regarded
257    --               as newline terminated, bound as a NUMBER.  The newline
258    --               may or may not actually be included in the text, depending
259    --               on the value of the include_newlines argument discussed
260    --               below.
261    --            ERROUT a boolean indicating whether the output came from
262    --               System.out or System.err, bound as a NUMBER.  The value
263    --               is 0 iff the output came from System.out.
264    --   no_newline_stmt   An optional alternate sql statement to execute
265    --                     when the output is not newline terminated.
266    --   no_newline_bindings  A string with the same syntax as for the bindings
267    --                        argument discussed above, describing how the
268    --                        no_newline_stmt is bound.
269    --   newline_only_stmt   An optional alternate sql statement to execute
270    --                       when the output is a single newline.
271    --   newline_only_bindings  A string with the same syntax as for the bindings
272    --                          argument discussed above, describing how the
273    --                          newline_only_stmt is bound.
274    --   maximum_line_segment_length  The maximum number of characters that
275    --                                will be bound in a given execution of
276    --                                the sql statement.  Longer output
277    --                                sequences will be broken up into
278    --                                separate calls with distinct SEGNO
279    --                                values.  A value of 0 means no maximum.
280    --   allow_replace  Controls behavior when a previously defined specification
281    --                  with the same id exists.  A value of 1 means replace the
282    --                  old specification.  0 means return an error message
283    --                  without modifying the old specification.
284    --   from_stdout  Controls whether output from System.out causes execution
285    --                of the sql statement prescribed by the specification.  A
286    --                value of 0 means that if the output came from System.out
287    --                the statement is not executed even if the specification is
288    --                otherwise enabled.
289    --   from_stderr  Controls whether output from System.err causes execution
290    --                of the sql statement prescribed by the specification.  A
291    --                value of 0 means that if the output came from System.err
292    --                the statement is not executed even if the specification is
293    --                otherwise enabled.
294    --   include_newlines  Controls whether newline characters are left in the
295    --                     output when it is bound to text.  A value of 0 means
296    --                     newlines are not included (but the presence of the
297    --                     newline is still indicated by the NL binding and
298    --                     by whether the no_newline_stmt is used).
299    --   eager  Controls whether output not terminated by a newline causes
300    --          execution of the sql statement every time it is received vs
301    --          accumulating such output until a newline is received.  A value
302    --          of 0 means that unterminated output is accumulated.
303    --
304    -- Return value is null on success otherwise an error message.
305    FUNCTION set_output_to_sql (id VARCHAR2,
306                                stmt VARCHAR2,
307                                bindings VARCHAR2,
308                                no_newline_stmt VARCHAR2 default null,
309                                no_newline_bindings VARCHAR2 default null,
310                                newline_only_stmt VARCHAR2 default null,
311                                newline_only_bindings VARCHAR2 default null,
312                                maximum_line_segment_length NUMBER default 0,
313                                allow_replace NUMBER default 1,
314                                from_stdout NUMBER default 1,
315                                from_stderr NUMBER default 1,
316                                include_newlines NUMBER default 0,
317                                eager NUMBER default 0) return VARCHAR2;
318  
319    -- remove_output_to_sql deletes a specification created by
320    -- set_output_to_sql.  If no such specification exists, an error message
321    -- is returned
322    FUNCTION remove_output_to_sql (id VARCHAR2) return VARCHAR2;
323  
324    -- enable_output_to_sql (re)enables a specification created by
325    -- set_output_to_sql and subsequently disabled by disable_output_to_sql.
326    -- If no such specification exists, an error message is returned.  If
327    -- the specification is not currently disabled, there is no change.
328    FUNCTION enable_output_to_sql (id VARCHAR2) return VARCHAR2;
329  
330    -- disable_output_to_sql disables a specification created by
331    -- set_output_to_sql.  The specification may be re-enabled by
332    -- enable_output_to_sql.  While disabled, the sql statement prescribed
333    -- by the specification is not executed.
334    -- If no such specification exists, an error message is returned.  If
335    -- the specification is already disabled, there is no change.
336    FUNCTION disable_output_to_sql (id VARCHAR2) return VARCHAR2;
337  
338    -- query_output_to_sql returns a message describing a specification
339    -- created by set_output_to_sql.
340    -- If no such specification exists, an error message is returned.
341    FUNCTION query_output_to_sql (id VARCHAR2) return VARCHAR2;
342  
343    -- set_output_to_java defines a named output specification which
344    -- constitutes a prescription for executing a java method whenever
345    -- output to the default System.out and System.err streams occurs.
346    -- See the comments for set_output_to_sql for discussion of the
347    -- common arguments and the duration of the specifications.  The
348    -- java method prescribed by the specification is executed in a
349    -- separate VM context with separate java session state from the
350    -- rest of the session.
351    -- Arguments specific to this type of specification are
352    --   class_name  The name of the class defining the method(s)
353    --   class_schema  The schema in which the class is defined.  A null
354    --                 value means the class is defined in the current schema,
355    --                 or PUBLIC.
356    --   method  The name of the method.
357    --   bindings  A string that defines how arguments to the method are bound.
358    --             This is a string of tokens with the same syntax as discussed
359    --             under set_output_to_sql above.  The position of a token in
360    --             the string determines the position of the argument it
361    --             describes.  All arguments must be of type int, except for
362    --             those corresponding to the tokens ID or TEXT, which must be
363    --             of type java.lang.String.
364    --   no_newline_method   An optional alternate method to execute
365    --                       when the output is not newline terminated.
366    --   newline_only_method   An optional alternate method to execute
367    --                         when the output is a single newline.
368    --   initialization_statement  An optional sql statement that is executed
369    --                             once per java session prior to the first
370    --                             time the methods that receive output are
371    --                             executed.  This statement is executed in
372    --                             same java VM context as the output methods
373    --                             will be.  Typically such a statement is
374    --                             used to run a java stored procedure that
375    --                             initializes conditions in the separate VM
376    --                             context so that the methods that receive
377    --                             output can function as intended.  For
378    --                             example such a procedure might open a
379    --                             stream which the output methods write to.
380    --   finalization_statement  An optional sql statement that is executed
381    --                           once when the output specification is
382    --                           about to be removed or the session is ending.
383    --                           Like the initialization_statement this runs
384    --                           in the same java VM context as the methods
385    --                           that receive output.  It runs only if the
386    --                           initialization method has run, or if there is
387    --                           no initialization method.
388    FUNCTION set_output_to_java (id VARCHAR2,
389                                 class_name VARCHAR2,
390                                 class_schema VARCHAR2,
391                                 method VARCHAR2,
392                                 bindings VARCHAR2,
393                                 no_newline_method VARCHAR2 default null,
394                                 no_newline_bindings VARCHAR2 default null,
395                                 newline_only_method VARCHAR2 default null,
396                                 newline_only_bindings VARCHAR2 default null,
397                                 maximum_line_segment_length NUMBER default 0,
398                                 allow_replace NUMBER default 1,
399                                 from_stdout NUMBER default 1,
400                                 from_stderr NUMBER default 1,
401                                 include_newlines NUMBER default 0,
402                                 eager NUMBER default 0,
403                                 initialization_statement VARCHAR2 default null,
404                                 finalization_statement VARCHAR2 default null)
405           return VARCHAR2;
406  
407    -- remove_output_to_java deletes a specification created by
408    -- set_output_to_java.  If no such specification exists, an error message
409    -- is returned
410    FUNCTION remove_output_to_java (id VARCHAR2) return VARCHAR2;
411  
412    -- enable_output_to_java (re)enables a specification created by
413    -- set_output_to_java and subsequently disabled by disable_output_to_java.
414    -- If no such specification exists, an error message is returned.  If
415    -- the specification is not currently disabled, there is no change.
416    FUNCTION enable_output_to_java (id VARCHAR2) return VARCHAR2;
417  
418    -- disable_output_to_java disables a specification created by
419    -- set_output_to_java.  The specification may be re-enabled by
420    -- enable_output_to_java.  While disabled, the sql statement prescribed
421    -- by the specification is not executed.
422    -- If no such specification exists, an error message is returned.  If
423    -- the specification is already disabled, there is no change.
424    FUNCTION disable_output_to_java (id VARCHAR2) return VARCHAR2;
425  
426    -- query_output_to_java returns a message describing a specification
427    -- created by set_output_to_java.
428    -- If no such specification exists, an error message is returned.
429    FUNCTION query_output_to_java (id VARCHAR2) return VARCHAR2;
430  
431    -- set_output_to_file defines a named output specification which
432    -- constitutes a prescription to capture any output sent to the
433    -- default System.out and System.err streams and append it to
434    -- a specified file.  This is implemented using a special case
435    -- of set_output_to_java.  Arguments are
436    --   file_path  The path to the file to which to append the output
437    --   allow_replace, from_stdout and from_stderr all analogous to
438    --      those of the same name in set_output_to_java
439    FUNCTION set_output_to_file (id VARCHAR2,
440                                 file_path VARCHAR2,
441                                 allow_replace NUMBER default 1,
442                                 from_stdout NUMBER default 1,
443                                 from_stderr NUMBER default 1)
444           return VARCHAR2;
445  
446    -- The following four functions are analogous to their output_to_java
447    -- counterparts
448    FUNCTION remove_output_to_file (id VARCHAR2) return VARCHAR2;
449  
450    FUNCTION enable_output_to_file (id VARCHAR2) return VARCHAR2;
451  
452    FUNCTION disable_output_to_file (id VARCHAR2) return VARCHAR2;
453  
454    FUNCTION query_output_to_file (id VARCHAR2) return VARCHAR2;
455  
456    -- The following two procedures are for internal use in the
457    -- implementation of set_output_to_file
458    PROCEDURE initialize_output_to_file (id VARCHAR2, path VARCHAR2);
459  
460    PROCEDURE finalize_output_to_file (id VARCHAR2);
461  
462    -- The following two procedures and one function control
463    -- whether java output is sent to the .trc file (this is the
464    -- case by default)
465    PROCEDURE enable_output_to_trc;
466  
467    PROCEDURE disable_output_to_trc;
468  
469    FUNCTION query_output_to_trc return VARCHAR2;
470  
471    -- support for calling runjava from ojvmjava
472  
473    -- rjbc_init: setup back channel, return id that identifies it.  Called
474    -- prior to runjava in the same session as runjava will run in.
475    -- flags non zero means dont use back channel for file content
476    -- this corresponds to the ojvmjava runjava mode server_file_system
477    function rjbc_init(flags NUMBER) return VARCHAR2;
478  
479    -- rjbc_request: called from runjava to ask for contents or directoriness
480    -- of file identified by pathname on the client filesystem.  Puts pathname
481    -- in the java$jvm$rjbc row then waits for client response.  rtype 0 means
482    -- get content, 1 means ask if directory
483    -- status returned is 0 if content returned or is directory, !0 otherwise
484    -- lob returned if pathname found
485    function rjbc_request(pathname VARCHAR2, rtype NUMBER, lob out BLOB)
486      return NUMBER;
487  
488    -- rjbc_normalize: called from runjava to ask for the normalized, absolute
489    -- pathname on the client filesystem of the file identified by the input
490    -- argument pathname.  Puts pathname in the java$jvm$rjbc row then waits
491    ---for client response.
492    -- rtype is not used.
493    -- status returned is 0 if the file is a directory, non-zero otherwise.
494    -- This value is also not used.
495    -- normalized_pathname is returned containing the normalized path.
496    function rjbc_normalize(pathname VARCHAR2, rtype NUMBER,
497                            normalized_pathname out VARCHAR2)
498      return NUMBER;
499  
500    -- rjbc_output: set_output_to_sql entrypoint used by runjava to pass
501    -- output back to the client.
502    -- Puts text in the java$jvm$rjbc row then waits for client response.
503    procedure rjbc_output(text VARCHAR2, nl NUMBER);
504  
505    -- rjbc_done: called from client to shutdown back channel
506    procedure rjbc_done(id VARCHAR2 := null);
507  
508    -- back channel entrypoint
509    -- rjbc_respond. Called in loop by back channel client thread to respond
510    -- to requests queued by rjbc_request, rjbc_normalize and rjbc_output.
511    -- status argument indicates result of processing the previous request.
512    -- status values are: -1 = initial call (there was no previous request)
513    --                     0 = file content found and returned
514    --                     1 = file not found
515    -- p in argument receives the normalized path for an rjbc_normalize request
516    -- l in argument receives the lob containing the file content for an
517    -- rjbc_request request.
518    -- return values indicate the kind of the new request.  These values are:
519    --   -1 = no request (ie, time to exit)
520    --    0 = file content (rjbc_request)
521    --    1 = normalize path (rjbc_normalize)
522    --    2 = newline terminated output (rjbc_output)
523    --    3 = nonnewline terminated output (rjbc_output)
524    -- For return values 0 and 1, the p out argument contains the name of the
525    -- file to be processed.  For return values 2 and 3 p contains the text
526    -- to be output.
527    function rjbc_respond(sid VARCHAR2, status NUMBER, p in out VARCHAR2, l BLOB)
528      return NUMBER;
529  
530  
531    -- import/export interface --
532    function start_export(short_name in varchar2,
533                          schema in varchar2,
534                          flags in number,
535                          type in number,
536                          properties out number,
537                          raw_chunk_count out number,
538                          total_raw_byte_count out number,
539                          text_chunk_count out number,
540                          total_text_byte_count out number)
541           return number;
542    pragma restrict_references(start_export, wnds);
543  
544    function export_raw_chunk(chunk out raw, length out number)
545             return number;
546    pragma restrict_references(export_raw_chunk, wnds);
547  
548    function export_text_chunk(chunk out varchar2, length out number)
549             return number;
550    pragma restrict_references(export_text_chunk, wnds);
551  
552  
553    function end_export return number;
554    pragma restrict_references(end_export, wnds);
555  
556  
557    function start_import(long_name in varchar2,
558                          flags in number,
559                          type in number,
560                          properties in number,
561                          raw_chunk_count in number,
562                          total_raw_byte_count in number,
563                          text_chunk_count in number)
564           return number;
565    pragma restrict_references(start_import, wnds);
566  
567  
568    function import_raw_chunk(chunk in raw, length in number)
569             return number;
570    pragma restrict_references(import_raw_chunk, wnds);
571  
572  
573    function import_text_chunk(chunk in varchar2, length in number)
574             return number;
575    pragma restrict_references(import_text_chunk, wnds);
576  
577  
578    function end_import return number;
579    pragma restrict_references(end_import, wnds);
580  
581  
582    -- grant or revoke execute via Handle methods.  Needed with system class
583    -- loading since SQL grant/revoke can't manipulate permanently kept objects
584    procedure set_execute_privilege(object_name   varchar2,
585                                    object_schema varchar2,
586                                    object_type   varchar2,
587                                    grantee_name  varchar2,
588                                    grant_if_nonzero number)
589    as language java name
590    'oracle.aurora.rdbms.DbmsJava.setExecutePrivilege(java.lang.String,
591                                                      oracle.sql.CHAR,
592                                                      java.lang.String,
593                                                      oracle.sql.CHAR,
594                                                      boolean)';
595  
596    -- convenience functions to support development environments --
597    -- There procedures allow PL/SQL to get at Java Schem Objects.
598    -- There are a lot of them, but they can be understood from the
599    -- grammar
600    --     export_<what>(name, [schema,] lob)
601    --
602    -- <what> is either source, class or resource
603    -- name a varchar argument that is the name of the java schema object
604    -- schema is an optional argument, if it is present it is a varchar that
605    --   names a schema, if it ommitted the current schema is used
606    -- lob is either a BLOB or CLOB.  The contents of the object are placed
607    --   into it. CLOB's are allowed only for source and resource (i.e. not
608    --   for class). Note that the internal representation of source uses
609    --   UTF8 and that is what is stored into the BLOB
610    --
611    -- If the java schema object does not exist an ORA-29532 (Uncaught Java
612    -- exception) will occur.
613  
614  
615    procedure export_source(name varchar2, schema varchar2, src BLOB)
616    as language java name
617    'oracle.aurora.rdbms.ExportSchemaObjects.exportSource(java.lang.String, java.lang.String, oracle.sql.BLOB)';
618  
619    procedure export_source(name varchar2, src BLOB)
620    as language java name
621    'oracle.aurora.rdbms.ExportSchemaObjects.exportSource(java.lang.String, oracle.sql.BLOB)';
622  
623    procedure export_source(name varchar2, schema varchar2, src CLOB)
624    as language java name
625    'oracle.aurora.rdbms.ExportSchemaObjects.exportSource(java.lang.String, java.lang.String, oracle.sql.CLOB)';
626  
627    procedure export_source(name varchar2, src CLOB)
628    as language java name
629    'oracle.aurora.rdbms.ExportSchemaObjects.exportSource(java.lang.String, oracle.sql.CLOB)';
630  
631    procedure export_class(name varchar2, schema varchar2, clz BLOB)
632    as language java name
633    'oracle.aurora.rdbms.ExportSchemaObjects.exportClass(java.lang.String, java.lang.String, oracle.sql.BLOB)';
634  
635    procedure export_class(name varchar2, clz BLOB)
636    as language java name
637    'oracle.aurora.rdbms.ExportSchemaObjects.exportClass(java.lang.String, oracle.sql.BLOB)';
638  
639    procedure export_resource(name varchar2, schema varchar2, res BLOB)
640    as language java name
641    'oracle.aurora.rdbms.ExportSchemaObjects.exportResource(java.lang.String, java.lang.String, oracle.sql.BLOB)';
642  
643    procedure export_resource(name varchar2, res BLOB)
644    as language java name
645    'oracle.aurora.rdbms.ExportSchemaObjects.exportResource(java.lang.String, oracle.sql.BLOB)';
646  
647    procedure export_resource(name varchar2, schema varchar2, res CLOB)
648    as language java name
649    'oracle.aurora.rdbms.ExportSchemaObjects.exportResource(java.lang.String, java.lang.String, oracle.sql.CLOB)';
650  
651    procedure export_resource(name varchar2, res CLOB)
652    as language java name
653    'oracle.aurora.rdbms.ExportSchemaObjects.exportResource(java.lang.String, oracle.sql.CLOB)';
654  
655    procedure loadjava(options varchar2)
656    as language java name
657    'oracle.aurora.server.tools.loadjava.LoadJavaMain.serverMain(java.lang.String)';
658  
659    procedure loadjava(options varchar2, resolver varchar2)
660    as language java name
661    'oracle.aurora.server.tools.loadjava.LoadJavaMain.serverMain(java.lang.String, java.lang.String)';
662  
663    procedure loadjava(options varchar2, resolver varchar2, status OUT number)
664    as language java name
665    'oracle.aurora.server.tools.loadjava.LoadJavaMain.serverMain(java.lang.String, java.lang.String, int[])';
666  
667    procedure dropjava(options varchar2)
668    as language java name
669    'oracle.aurora.server.tools.loadjava.DropJavaMain.serverMain(java.lang.String)';
670  
671    -- handleMd5 accesses information about schema objects that
672    -- is needed by loadjava
673    function handleMd5(s varchar2, name varchar2, type number) return raw
674    as language java name
675    'oracle.aurora.server.tools.loadjava.HandleMd5.get
676       (java.lang.String,java.lang.String,int) return oracle.sql.RAW';
677  
678    -- variant that looks in current schema
679    function handleMd5(name varchar2, type number) return raw
680    as language java name
681    'oracle.aurora.server.tools.loadjava.HandleMd5.get
682       (java.lang.String,int) return oracle.sql.RAW';
683  
684  
685    -- jar loading
686    function start_loading_jar(name    varchar2,
687                               schema  varchar2,
688                               path    varchar2,
689                               flags   number,
690                               content blob,
691                               msg out varchar2) return number
692    as language java name
693    'oracle.aurora.rdbms.DbmsJava.startLoadingJar
694       (java.lang.String,
695        java.lang.String,
696        java.lang.String,
697        int,
698        oracle.sql.BLOB,
699        java.lang.String[])
700     return int';
701  
702    function finish_loading_jar(flags   number,
703                                msg out varchar2) return number
704    as language java name
705    'oracle.aurora.rdbms.DbmsJava.finishLoadingJar
706       (int,
707        java.lang.String[])
708     return int';
709  
710    function jar_status(name    varchar2,
711                        schema  varchar2,
712                        msg out varchar2) return number
713    as language java name
714    'oracle.aurora.rdbms.DbmsJava.jarStatus
715       (java.lang.String,
716        java.lang.String,
717        java.lang.String[])
718     return int';
719  
720    function drop_jar(name    varchar2,
721                      schema  varchar2,
722                      msg out varchar2) return number
723    as language java name
724    'oracle.aurora.rdbms.DbmsJava.dropJar
725       (java.lang.String,
726        java.lang.String,
727        java.lang.String[])
728     return int';
729  
730  
731    -- interface to manage Security Policy Table
732  
733    -- create an active row in the policy table granting the Permission
734    -- as specified to grantee.  If a row already exists granting the
735    -- exact Permission specified then the table is unmodifed.
736    -- If a row exists but is disabled then it is enabled.
737    -- Finally if no row exists one is inserted.
738    --
739    -- the table
740    -- grantee is the name of a schema
741    -- permission_type is the fully qualified name of a class that
742    --    extends java.lang.security.Permission.  If the class does
743    --    not have a public synonymn then the name should be prefixed
744    --    by <schema>:.  For example 'myschema:scott.MyPermission'.
745    -- permission_name is the name of the permission
746    -- permission_action is the action of the permission
747    -- key is set to the key of the created row or to -1 if an
748    --    error occurs.
749    --
750    -- See ... for more details of the Security Policy Table
751  
752    procedure grant_permission(
753          grantee varchar2, permission_type varchar2,
754          permission_name varchar2, permission_action varchar2,
755          key OUT number)
756    as language java name
757    'oracle.aurora.rdbms.security.PolicyTableManager.grant(
758         java.lang.String, java.lang.String, java.lang.String,
759         java.lang.String, long[])';
760  
761    -- similar to grant except create a restrict row.
762    procedure restrict_permission(
763          grantee varchar2, permission_type varchar2,
764          permission_name varchar2, permission_action varchar2,
765          key OUT number)
766    as language java name
767    'oracle.aurora.rdbms.security.PolicyTableManager.restrict(
768         java.lang.String, java.lang.String, java.lang.String,
769         java.lang.String, long[])';
770  
771  
772  
773    -- special case for granting PolicyTablePermission's.  The name of
774    -- a PolicyTablePermission allows updates of rows relating to
775    -- a particular type (i.e. class that extends Permission) to
776    -- specify the class you must specify the schema containing the
777    -- class. In the table that is stored as the user number, but this
778    -- procedure lets it be specified via a name.
779    procedure grant_policy_permission(
780          grantee varchar2,
781          permisssion_schema varchar2, permission_type varchar2,
782          permission_name varchar2,
783          key OUT number)
784    as language java name
785    'oracle.aurora.rdbms.security.PolicyTableManager.grantPolicyPermission(
786         java.lang.String, java.lang.String, java.lang.String,
787         java.lang.String, long[])';
788  
789    -- The follwing versions of grant_permission, restrict_permission
790    -- and grant_policy permission are identical to the previous
791    -- versions except that they do not have the key OUT parameter.
792  
793    procedure grant_permission(
794          grantee varchar2, permission_type varchar2,
795          permission_name varchar2, permission_action varchar2)
796    as language java name
797    'oracle.aurora.rdbms.security.PolicyTableManager.grant(
798         java.lang.String, java.lang.String, java.lang.String,
799         java.lang.String)';
800  
801    procedure restrict_permission(
802          grantee varchar2, permission_type varchar2,
803          permission_name varchar2, permission_action varchar2)
804    as language java name
805    'oracle.aurora.rdbms.security.PolicyTableManager.restrict(
806         java.lang.String, java.lang.String, java.lang.String,
807         java.lang.String)';
808  
809    procedure grant_policy_permission(
810          grantee varchar2,
811          permisssion_schema varchar2, permission_type varchar2,
812          permission_name varchar2)
813    as language java name
814    'oracle.aurora.rdbms.security.PolicyTableManager.grantPolicyPermission(
815         java.lang.String, java.lang.String, java.lang.String,
816         java.lang.String)';
817  
818    -- revoke disables any permissions that might have been granted
819    procedure revoke_permission(
820          grantee varchar2, permission_type varchar2,
821          permission_name varchar2, permission_action varchar2)
822    as language java name
823    'oracle.aurora.rdbms.security.PolicyTableManager.revoke(
824         java.lang.String, java.lang.String, java.lang.String,
825         java.lang.String)';
826  
827    -- enable the existing row with specified key
828    procedure enable_permission(key number)
829    as language java name
830    'oracle.aurora.rdbms.security.PolicyTableManager.enable(long)';
831  
832    -- disable the existing row with specified key
833    procedure disable_permission(key number)
834    as language java name
835    'oracle.aurora.rdbms.security.PolicyTableManager.disable(long)';
836  
837    -- delete the existing row with specified key
838    -- the row must be diabled, if it is still active then this
839    -- procedure does nothing.
840    procedure delete_permission(key number)
841    as language java name
842    'oracle.aurora.rdbms.security.PolicyTableManager.delete(long)';
843  
844    -- set debugging level
845    procedure set_permission_debug(level number)
846    as language java name
847    'oracle.aurora.rdbms.security.PolicyTableManager.setDebugLevel(int)';
848  
849    -- turn byte code verifier on or off for current session
850    -- 0 is off, 1 is on
851    -- you need JServerPermission("Verifier") to do this operation
852    procedure set_verifier(flag number)
853    as language java name
854    'oracle.aurora.rdbms.Compiler.sessionOptionController(int)';
855  
856    function option_controller(opt number, action number) return number
857    as language java name
858    'oracle.aurora.rdbms.Compiler.optionController(int, int) return boolean';
859  
860    -- turn system class loading on or off for current session
861    -- 0 is off, 1 is on
862    -- you need to be running as SYS to do this operation
863    procedure set_system_class_loading(flag number);
864  
865    -- The following functions are used by loadjava
866  
867    -- starts the actions of copying a file to the server.
868    -- b is used repeatedly to copy chuncks.
869    procedure deploy_open(filename varchar, b out BLOB)
870    as language java name
871    'oracle.aurora.server.tools.loadjava.Deploy.open(java.lang.String, oracle.sql.BLOB[])' ;
872  
873    -- copys a chunk out of the BLOB
874    procedure deploy_copy(b BLOB)
875    as language java name 'oracle.aurora.server.tools.loadjava.Deploy.copy(oracle.sql.BLOB)';
876  
877    -- invokes the a deployed class
878    function deploy_invoke(schema varchar, classname varchar) return varchar
879    as language java name 'oracle.aurora.server.tools.loadjava.Deploy.invoke(java.lang.String, java.lang.String) return java.lang.String' ;
880  
881    -- start_jmx_agent: Start an agent activating OJVM JMX server and remote listener.
882    -- The JMX server starts as a collection of daemon threads in the current session.
883    -- The session is expected to run with JMXSERVER role or a superset, otherwise
884    -- JMX-related security exceptions will be raised.
885    -- Arguments:
886    -- port   the port for the JMX listener,
887    --        the value for the property com.sun.management.jmxremote.port
888    -- ssl    the value for the property com.sun.management.jmxremote.ssl
889    -- auth   the value for the property com.sun.management.jmxremote.authenticate
890    -- Each argument can be null or omitted, with null as default.
891    -- When an argument is null, the corresponding property is not altered,
892    -- holding the value, if any, previously present in the session.
893    -- These three and other JMX-related properties can be configured in a session prior
894    -- to a call to start_jmx_agent by means of dbms_java.set_property.
895    -- Examples:
896    --   start_jmx_agent('9999', 'false', 'false')
897    --      start JMX server and listener on port 9999 with no SSL and no authentication
898    --   start_jmx_agent('9999')
899    --      start JMX server and listener on port 9999 with the other JMX settings
900    --      having the default values or the values set using dbms_java.set_property
901    --      earlier in the same session
902    --   start_jmx_agent
903    --      start JMX server and listener with the JMX settings
904    --      having the default values or the values set using dbms_java.set_property
905    --      earlier in the same session
906    procedure start_jmx_agent(port VARCHAR2 default NULL,
907                              ssl  VARCHAR2 default NULL,
908                              auth VARCHAR2 default NULL);
909  
910    -- Send command chunks to shell
911    procedure send_command (chunk long raw);
912  
913    -- Get reply chunks  from shell
914    function get_reply return long raw;
915  
916    -- add a preference to the database
917    -- user     user schema name
918    -- type     U for user or S for system
919    -- abspath  absolute path of the preference
920    -- key      key for value lookup
921    -- value    value to be stored (string)
922    procedure set_preference(user varchar2,type varchar2, abspath varchar2,
923                             key varchar2, value varchar2);
924  
925    function ncomp_status_msg return VARCHAR2 as language java name
926    'oracle.aurora.rdbms.DbmsJava.ncompEnabledMsg() return java.lang.String';
927  
928    function full_ncomp_enabled return VARCHAR2;
929  
930    function get_ojvm_property(propstring VARCHAR2) return VARCHAR2 as language
931    java name 'java.lang.System.getProperty(java.lang.String)
932    return java.lang.String';
933  
934    function getVersion return VARCHAR2;
935  
936    procedure dbms_feature_ojvm(ojvm_boolean    OUT NUMBER,
937                                aux_count       OUT NUMBER,
938                                ojvm_info       OUT CLOB);
939  
940    procedure dbms_feature_system_ojvm(ojvm_boolean    OUT NUMBER,
941                                       aux_count       OUT NUMBER,
942                                       ojvm_info       OUT CLOB);
943  
944    procedure set_runtime_exec_credentials(dbuser varchar2,
945                                           osuser varchar2,
946                                           ospass varchar2);
947  end;
948  /

Package created.

SQL> 
SQL> 
SQL> --
SQL> -- definers-rights functions and procedures should live here
SQL> --
SQL> create or replace package dbms_java_definers authid definer as
  2  
  3    FUNCTION get_nth_native_compiler_option(n number) return VARCHAR2;
  4  
  5  
  6    -- sets a native-compiler option to the specified value for the
  7    -- given schema
  8    PROCEDURE set_native_compiler_option_(optionName VARCHAR2,
  9                                          value VARCHAR2,
 10                                          owner NUMBER);
 11  
 12    -- decode, into a user-readable format, a persisted native-compiler
 13    -- option.  This function is not intended to be used by users
 14    -- directly
 15    FUNCTION decode_native_compiler_option_(optionName VARCHAR2,
 16                                            value      VARCHAR2) RETURN VARCHAR2;
 17  
 18    -- unsets a native-compiler option given by the tuple
 19    --   [optionName, value] for the given schema
 20    --
 21    -- if the option given by optionName is not allowed to have
 22    -- duplicate values, then the value is ignored.
 23    PROCEDURE unset_native_compiler_option_(optionName VARCHAR2,
 24                                            value      VARCHAR2,
 25                                            owner      NUMBER);
 26  
 27    -- compile all methods defined by the class identified by
 28    -- classname in the supplied schema.
 29    -- return the number of methods successfully compiled
 30    --
 31    -- If the class does not exist in the schema, or the schema does not
 32    -- exist, an ORA-29532 (Uncaught Java exception) will occur.
 33    FUNCTION compile_class_(schema    VARCHAR2,
 34                            classname VARCHAR2) return NUMBER;
 35  
 36    -- compile the method specified by name and Java type signature
 37    -- defined by the class identified by classname in the supplied
 38    -- schema.
 39    -- return the number of methods successfully compiled
 40    --
 41    -- If the class does not exist in the schema, or the schema does not
 42    -- exist, an ORA-29532 (Uncaught Java exception) will occur.
 43    FUNCTION compile_method_(schema     VARCHAR2,
 44                             classname  VARCHAR2,
 45                             methodname VARCHAR2,
 46                             methodsig  VARCHAR2) return NUMBER;
 47  
 48    -- uncompile all methods defined by the class identified by
 49    -- classname in the supplied schema.
 50    --
 51    -- return the number of methods successfully uncompiled.
 52    --
 53    -- If permanentp, then mark these methods as permanently dynamicaly
 54    -- un-compilable, otherwise, they are eligible for future dynamic
 55    -- recompilation.
 56    --
 57    -- If the class does not exist in the schema, or the schema does not
 58    -- exist an ORA-29532 (Uncaught Java exception) will occur.
 59    FUNCTION uncompile_class_(schema    VARCHAR2,
 60                              classname VARCHAR2,
 61                              permanentp NUMBER) return NUMBER;
 62  
 63    -- uncompile the method specified by the name and Java type
 64    -- signature defined by the class identified by classname in the
 65    -- supplied schema.
 66    --
 67    -- return the number of methods successfully uncompiled.
 68    --
 69    -- If permanentp, then mark the method as permanently dynamicaly
 70    -- un-compilable, otherwise, it is eligible for future dynamic
 71    -- recompilation.
 72    --
 73    -- If the class does not exist in the schema, or the schema does not
 74    -- exist an ORA-29532 (Uncaught Java exception) will occur.
 75    FUNCTION uncompile_method_(schema     VARCHAR2,
 76                               classname  VARCHAR2,
 77                               methodname VARCHAR2,
 78                               methodsig  VARCHAR2,
 79                               permanentp NUMBER) return NUMBER;
 80  end;
 81  /

Package created.

SQL> 
SQL> 
SQL> -- package defining api to java$jvm$rjbc
SQL> create or replace package jvmrjbc as
  2  function init return VARCHAR2;
  3  procedure putpath(sessid VARCHAR2, pathname VARCHAR2);
  4  function getlob(sessid VARCHAR2) return BLOB;
  5  function getpath(sessid VARCHAR2) return VARCHAR2;
  6  procedure putlob(sessid VARCHAR2, l BLOB);
  7  procedure done(sessid VARCHAR2);
  8  end;
  9  /

Package created.

SQL> 
SQL> create or replace package body dbms_java as
  2  
  3    -- runjava back channel state
  4    rjbc_sessid VARCHAR2(100);
  5    rjbc_toclient VARCHAR2(120);
  6    rjbc_fromclient VARCHAR2(120);
  7    rjbc_client_started BOOLEAN;
  8    rjbc_action NUMBER;
  9    rjbc_flags NUMBER;
 10  
 11    PROCEDURE start_btl as language java name
 12      'oracle.aurora.perf.OracleBTL.startBTL()';
 13  
 14    PROCEDURE stop_btl as language java name
 15      'oracle.aurora.perf.OracleBTL.stopBTL()';
 16  
 17    PROCEDURE terminate_btl as language java name
 18      'oracle.aurora.perf.OracleBTL.terminateBTL()';
 19  
 20    FUNCTION init_btl(files_prefix VARCHAR2, type NUMBER,
 21                      sample_limit NUMBER, exclude_java NUMBER) return NUMBER as language java name
 22    'oracle.aurora.perf.OracleBTL.initBTL(java.lang.String, int, long, boolean)
 23            return boolean';
 24  
 25    FUNCTION compile_class(classname VARCHAR2) return NUMBER as
 26      begin
 27        return dbms_java_definers.compile_class_(sys_context('userenv', 'current_schema'),
 28                                                 classname);
 29      end;
 30  
 31    FUNCTION compile_method(classname  VARCHAR2,
 32                            methodname VARCHAR2,
 33                            methodsig  VARCHAR2) return NUMBER as
 34      begin
 35        return dbms_java_definers.compile_method_(sys_context('userenv', 'current_schema'),
 36                                                  classname, methodname,
 37                                                  methodsig);
 38      end;
 39  
 40    FUNCTION uncompile_class(classname VARCHAR2,
 41                             permanentp NUMBER default 0) return NUMBER as
 42      begin
 43        -- call-specs can't have default params
 44        return dbms_java_definers.uncompile_class_(sys_context('userenv', 'current_schema'),
 45                                                   classname, permanentp);
 46      end;
 47  
 48    FUNCTION uncompile_class(schema    VARCHAR2,
 49                             classname VARCHAR2,
 50                             permanentp NUMBER default 0) return NUMBER as
 51      begin
 52        -- call-specs can't have default params
 53        return dbms_java_definers.uncompile_class_(schema, classname, permanentp);
 54      end;
 55  
 56  
 57    FUNCTION uncompile_method(classname  VARCHAR2,
 58                              methodname VARCHAR2,
 59                              methodsig  VARCHAR2,
 60                              permanentp NUMBER default 0) return NUMBER as
 61      begin
 62        -- call-specs can't have default params
 63        return dbms_java_definers.uncompile_method_(sys_context('userenv', 'current_schema'),
 64                                                    classname, methodname,
 65                                                    methodsig, permanentp);
 66      end;
 67  
 68    FUNCTION uncompile_method(schema     VARCHAR2,
 69                              classname  VARCHAR2,
 70                              methodname VARCHAR2,
 71                              methodsig  VARCHAR2,
 72                              permanentp NUMBER default 0) return NUMBER as
 73      begin
 74        -- call-specs can't have default params
 75        return dbms_java_definers.uncompile_method_(schema, classname,
 76                                                    methodname, methodsig,
 77                                                    permanentp);
 78      end;
 79  
 80    PROCEDURE dump_native_machine_code(classname  VARCHAR2,
 81                                       methodname VARCHAR2,
 82                                       methodsig  VARCHAR2) as language java name
 83      'oracle.aurora.vm.OracleRuntime.dumpNativeMachineCode(java.lang.String,
 84                                                            java.lang.String,
 85                                                            java.lang.String)';
 86  
 87    FUNCTION native_compiler_options return compiler_option_type_table pipelined as
 88      opstr  varchar2(4000);
 89      token  varchar2(4000);
 90      newline constant varchar2(2) := chr(10);
 91      opidx  number;
 92      lastidx   number;
 93      idx    number;
 94      n      number;
 95      line   compiler_option_type;
 96    begin
 97      opidx := 0;
 98      opstr := dbms_java_definers.get_nth_native_compiler_option(opidx);
 99      while opstr is not null loop
100        idx := instr(opstr, newline);
101        lastidx := 0;
102        while idx <> 0 loop
103          token := substr(opstr, lastidx + length(newline), idx - lastidx - length(newline));
104          lastidx := idx;
105          line.option_line := token;
106          PIPE ROW(line);
107          idx := instr(opstr, newline, idx + length(newline));
108        end loop;
109  
110        opidx := opidx + 1;
111        opstr := dbms_java_definers.get_nth_native_compiler_option(opidx);
112      end loop;
113    end;
114  
115    PROCEDURE set_native_compiler_option(optionName VARCHAR2,
116                                         value VARCHAR2) as
117      begin
118        dbms_java_definers.set_native_compiler_option_(optionName,
119                                                       value,
120                                                       sys_context('userenv','current_schemaid'));
121      end;
122  
123  
124    PROCEDURE unset_native_compiler_option(optionName VARCHAR2,
125                                           value      VARCHAR2) as
126      begin
127        dbms_java_definers.unset_native_compiler_option_(optionName,
128                                                         value,
129                                                         sys_context('userenv','current_schemaid'));
130      end;
131  
132    FUNCTION decode_native_compiler_option(optionName VARCHAR2,
133                                           value      VARCHAR2) RETURN VARCHAR2 as
134      begin
135        return dbms_java_definers.decode_native_compiler_option_(optionName, value);
136      end;
137  
138  
139    FUNCTION longname (shortname VARCHAR2) RETURN VARCHAR2 as language java name
140      'oracle.aurora.rdbms.DbmsJava.longNameForSQL(java.lang.String)
141            return java.lang.String';
142  
143    FUNCTION shortname (longname VARCHAR2) RETURN VARCHAR2 as language java name
144       'oracle.aurora.rdbms.DbmsJava.shortName(java.lang.String)
145             return java.lang.String';
146  
147    FUNCTION get_compiler_option(what VARCHAR2, optionName VARCHAR2)
148      RETURN varchar2
149      as language java name
150      'oracle.aurora.jdkcompiler.CompilerOptions.get(java.lang.String, java.lang.String) return java.lang.String' ;
151  
152    PROCEDURE set_compiler_option(what VARCHAR2, optionName VARCHAR2, value VARCHAR2)
153    as language java name
154    'oracle.aurora.jdkcompiler.CompilerOptions.set(java.lang.String, java.lang.String, java.lang.String)' ;
155  
156  
157    PROCEDURE reset_compiler_option(what VARCHAR2, optionName VARCHAR2)
158    as language java name
159    'oracle.aurora.jdkcompiler.CompilerOptions.reset(java.lang.String, java.lang.String)' ;
160  
161  
162    FUNCTION initGetSourceChunks (name VARCHAR2, owner VARCHAR2, type VARCHAR2)
163      RETURN NUMBER as language java name
164       'oracle.aurora.rdbms.DbmsJava.initGetSourceChunks(java.lang.String,
165                                                         oracle.sql.CHAR,
166                                                         java.lang.String)
167             return int';
168  
169    FUNCTION getSourceChunk RETURN VARCHAR2 as language java name
170       'oracle.aurora.rdbms.DbmsJava.getSourceChunk() return oracle.sql.CHAR';
171  
172    FUNCTION resolver (name VARCHAR2, owner VARCHAR2, type VARCHAR2)
173       RETURN VARCHAR2 as language java name
174       'oracle.aurora.rdbms.DbmsJava.resolver(java.lang.String,
175                                              oracle.sql.CHAR,
176                                              java.lang.String)
177               return oracle.sql.CHAR';
178  
179    FUNCTION derivedFrom (name VARCHAR2, owner VARCHAR2, type VARCHAR2)
180       RETURN VARCHAR2 as language java name
181       'oracle.aurora.rdbms.DbmsJava.derivedFrom(java.lang.String,
182                                                 oracle.sql.CHAR,
183                                                 java.lang.String)
184               return java.lang.String';
185  
186    FUNCTION sharedPrivateClassName (name VARCHAR2)
187       RETURN VARCHAR2 as language java name
188       'oracle.aurora.rdbms.DbmsJava.sharedPrivateClassName(java.lang.String)
189               return java.lang.String';
190  
191    FUNCTION fixed_in_instance (name VARCHAR2, owner VARCHAR2, type VARCHAR2)
192       RETURN NUMBER as language java name
193       'oracle.aurora.rdbms.DbmsJava.fixedInInstance(java.lang.String,
194                                                     oracle.sql.CHAR,
195                                                     java.lang.String)
196               return boolean';
197  
198    PROCEDURE set_fixed_in_instance (name VARCHAR2, owner VARCHAR2,
199                                     type VARCHAR2, value NUMBER)
200       as language java name
201       'oracle.aurora.rdbms.DbmsJava.setFixedInInstance(java.lang.String,
202                                                        oracle.sql.CHAR,
203                                                        java.lang.String,
204                                                        boolean)';
205  
206    -- RUNJAVA interface
207    FUNCTION runjava(cmdline VARCHAR2) RETURN VARCHAR2 as
208      begin
209        return dbms_java_test.funcall('-runjava', ' ', cmdline,
210                                      rjbc_sessid, rjbc_flags);
211      end;
212  
213    FUNCTION runjava_in_current_session(cmdline VARCHAR2) RETURN VARCHAR2 as
214      begin
215        return dbms_java_test.funcall('-runjava', ' ', cmdline,
216                                      rjbc_sessid, rjbc_flags, 'x');
217      end;
218  
219    FUNCTION endsession RETURN VARCHAR2 as
220      begin
221        return dbms_java_test.funcall('-endsession', ' ');
222      end;
223  
224    FUNCTION endsession_and_related_state RETURN VARCHAR2 as
225      begin
226        return dbms_java_test.funcall('-endsession', ' ', 'x');
227      end;
228  
229    FUNCTION set_property(name VARCHAR2, value VARCHAR2) RETURN VARCHAR2 as
230      begin
231        return dbms_java_test.funcall('-setprop', ' ', name, value);
232      end;
233  
234    FUNCTION get_property(name VARCHAR2) RETURN VARCHAR2 as
235      begin
236        return dbms_java_test.funcall('-getprop', ' ', name);
237      end;
238  
239    FUNCTION remove_property(name VARCHAR2) RETURN VARCHAR2 as
240      begin
241        return dbms_java_test.funcall('-setprop', ' ', name, '', 'x');
242      end;
243  
244    FUNCTION show_property(name VARCHAR2) RETURN VARCHAR2 as
245      begin
246        return dbms_java_test.funcall('-showprop', ' ', name);
247      end;
248  
249    -- Methods for controlling destination of java output
250    PROCEDURE set_output (buffersize NUMBER) as
251       junk varchar2(20);
252       sz number := buffersize;
253       begin
254         if sz <= 0 then sz := 20000; end if;
255         if sz > 1000000 then sz := 1000000; end if;
256         dbms_output.enable(sz);
257         junk := set_output_to_sql('dbout',
258                                   'begin dbms_output.put_line(:1);end;',
259                                   'TEXT',
260                                   'begin dbms_output.put(:1);end;',
261                                   'TEXT',
262                                   'begin dbms_output.new_line;end;',
263                                   ' ',
264                                   255,
265                                   eager => 1);
266       end;
267  
268    FUNCTION set_output_to_sql (id VARCHAR2,
269                                stmt VARCHAR2,
270                                bindings VARCHAR2,
271                                no_newline_stmt VARCHAR2 default null,
272                                no_newline_bindings VARCHAR2 default null,
273                                newline_only_stmt VARCHAR2 default null,
274                                newline_only_bindings VARCHAR2 default null,
275                                maximum_line_segment_length NUMBER default 0,
276                                allow_replace NUMBER default 1,
277                                from_stdout NUMBER default 1,
278                                from_stderr NUMBER default 1,
279                                include_newlines NUMBER default 0,
280                                eager NUMBER default 0) return VARCHAR2 as
281      flags number := 0;
282      replace number := allow_replace;
283      maxlen number := maximum_line_segment_length;
284    begin
285      if id is null then return 'ID must not be null'; end if;
286      if length(id) > 30 then
287        return 'ID length must not be greater than 30'; end if;
288      if stmt is null then return 'STMT must not be null'; end if;
289      if bindings is null then return 'BINDINGS must not be null'; end if;
290      if allow_replace !=0 then replace := 1; end if;
291      if from_stdout != 0 then flags := flags + 1; end if;
292      if from_stderr != 0 then flags := flags + 2; end if;
293      if flags = 0 then
294        return 'one of FROM_STDOUT or FROM_STDERR must be true (non zero)';
295      end if;
296      if eager != 0 then flags := flags + 4; end if;
297      if include_newlines != 0 then flags := flags + 8; end if;
298      if maxlen is null then maxlen := 0; end if;
299      if maxlen < 0 or maxlen != floor(maxlen) then
300        return 'MAXIMUM_LINE_SEGMENT_LENGTH must be a non zero integer'; end if;
301  
302      return dbms_java_test.funcall('-set_output_to_sql', ' ',
303                                    id,
304                                    replace,
305                                    stmt,
306                                    bindings,
307                                    no_newline_stmt,
308                                    no_newline_bindings,
309                                    newline_only_stmt,
310                                    newline_only_bindings,
311                                    maximum_line_segment_length,
312                                    flags);
313    end;
314  
315    FUNCTION remove_output_to_sql (id VARCHAR2) return VARCHAR2 as
316    begin
317      return dbms_java_test.funcall('-remove_output_to_sql', ' ', id);
318    end;
319  
320    FUNCTION enable_output_to_sql (id VARCHAR2) return VARCHAR2 as
321    begin
322      return dbms_java_test.funcall('-enable_output_to_sql', ' ', id);
323    end;
324  
325    FUNCTION disable_output_to_sql (id VARCHAR2) return VARCHAR2 as
326    begin
327      return dbms_java_test.funcall('-disable_output_to_sql', ' ', id);
328    end;
329  
330    FUNCTION query_output_to_sql (id VARCHAR2) return VARCHAR2 as
331    begin
332      return dbms_java_test.funcall('-query_output_to_sql', ' ', id);
333    end;
334  
335    FUNCTION set_output_to_java_ (id VARCHAR2,
336                                 class_name VARCHAR2,
337                                 class_schema VARCHAR2,
338                                 method VARCHAR2,
339                                 bindings VARCHAR2,
340                                 no_newline_method VARCHAR2 default null,
341                                 no_newline_bindings VARCHAR2 default null,
342                                 newline_only_method VARCHAR2 default null,
343                                 newline_only_bindings VARCHAR2 default null,
344                                 maximum_line_segment_length NUMBER default 0,
345                                 allow_replace NUMBER default 1,
346                                 from_stdout NUMBER default 1,
347                                 from_stderr NUMBER default 1,
348                                 include_newlines NUMBER default 0,
349                                 eager NUMBER default 0,
350                                 initialization_statement VARCHAR2 default null,
351                                 finalization_statement VARCHAR2 default null,
352                                 call_type NUMBER)
353           return VARCHAR2 as
354      flags number := 0;
355      replace number := allow_replace;
356      maxlen number := maximum_line_segment_length;
357    begin
358      if id is null then return 'ID must not be null'; end if;
359      if call_type != 1 and substr(ID, 1, 4) = '_tf_' then
360        return 'ID must not begin with ''_tf_'''; end if;
361      if length(id) > 30 then
362        return 'ID length must not be greater than 30'; end if;
363      if class_name is null then return 'CLASS_NAME must not be null'; end if;
364      if method is null then return 'METHOD must not be null'; end if;
365      if bindings is null then return 'BINDINGS must not be null'; end if;
366      if allow_replace !=0 then replace := 1; end if;
367      if from_stdout != 0 then flags := flags + 1; end if;
368      if from_stderr != 0 then flags := flags + 2; end if;
369      if flags = 0 then
370        return 'one of FROM_STDOUT or FROM_STDERR must be true (non zero)';
371      end if;
372      if eager != 0 then flags := flags + 4; end if;
373      if include_newlines != 0 then flags := flags + 8; end if;
374      if maxlen is null then maxlen := 0; end if;
375      if maxlen < 0 or maxlen != floor(maxlen) then
376        return 'MAXIMUM_LINE_SEGMENT_LENGTH must be a non zero integer'; end if;
377  
378      return dbms_java_test.funcall('-set_output_to_java', ' ',
379                                    id,
380                                    replace,
381                                    class_name,
382                                    class_schema,
383                                    method,
384                                    bindings,
385                                    no_newline_method,
386                                    no_newline_bindings,
387                                    newline_only_method,
388                                    newline_only_bindings,
389                                    maximum_line_segment_length,
390                                    flags,
391                                    initialization_statement,
392                                    finalization_statement);
393    end;
394  
395    FUNCTION set_output_to_java (id VARCHAR2,
396                                 class_name VARCHAR2,
397                                 class_schema VARCHAR2,
398                                 method VARCHAR2,
399                                 bindings VARCHAR2,
400                                 no_newline_method VARCHAR2 default null,
401                                 no_newline_bindings VARCHAR2 default null,
402                                 newline_only_method VARCHAR2 default null,
403                                 newline_only_bindings VARCHAR2 default null,
404                                 maximum_line_segment_length NUMBER default 0,
405                                 allow_replace NUMBER default 1,
406                                 from_stdout NUMBER default 1,
407                                 from_stderr NUMBER default 1,
408                                 include_newlines NUMBER default 0,
409                                 eager NUMBER default 0,
410                                 initialization_statement VARCHAR2 default null,
411                                 finalization_statement VARCHAR2 default null)
412           return VARCHAR2 as
413    begin
414      return set_output_to_java_ (id,
415                                 class_name,
416                                 class_schema,
417                                 method,
418                                 bindings,
419                                 no_newline_method,
420                                 no_newline_bindings,
421                                 newline_only_method,
422                                 newline_only_bindings,
423                                 maximum_line_segment_length,
424                                 allow_replace,
425                                 from_stdout,
426                                 from_stderr,
427                                 include_newlines,
428                                 eager,
429                                 initialization_statement,
430                                 finalization_statement,
431                                 0);
432    end;
433  
434    FUNCTION enable_output_to_java (id VARCHAR2) return VARCHAR2 as
435    begin
436      return dbms_java_test.funcall('-enable_output_to_java', ' ', id);
437    end;
438  
439    FUNCTION disable_output_to_java (id VARCHAR2) return VARCHAR2 as
440    begin
441      return dbms_java_test.funcall('-disable_output_to_java', ' ', id);
442    end;
443  
444    FUNCTION remove_output_to_java (id VARCHAR2) return VARCHAR2 as
445    begin
446      return dbms_java_test.funcall('-remove_output_to_java', ' ', id);
447    end;
448  
449    FUNCTION query_output_to_java (id VARCHAR2) return VARCHAR2 as
450    begin
451      return dbms_java_test.funcall('-query_output_to_java', ' ', id);
452    end;
453  
454    FUNCTION set_output_to_file (id VARCHAR2,
455                                 file_path VARCHAR2,
456                                 allow_replace NUMBER default 1,
457                                 from_stdout NUMBER default 1,
458                                 from_stderr NUMBER default 1)
459           return VARCHAR2 as
460      full_id varchar2(30);
461    begin
462      if id is null then return 'ID must not be null'; end if;
463      if file_path is null then return 'FILE_PATH must not be null'; end if;
464      if length(id) > 26 then
465        return 'ID length must not be greater than 26'; end if;
466      full_id := '_tf_'||id;
467      return set_output_to_java_(full_id,
468                                 'oracle/aurora/rdbms/DbmsJava',
469                                 null,
470                                 'writeOutputToFile',
471                                 'ID TEXT',
472                                 null,
473                                 null,
474                                 null,
475                                 null,
476                                 0,
477                                 allow_replace,
478                                 from_stdout,
479                                 from_stderr,
480                                 1,
481                                 0,
482                                 'call dbms_java.initialize_output_to_file('||
483                                    sys.dbms_assert.enquote_literal(full_id) ||','||
484                                    sys.dbms_assert.enquote_literal(file_path) ||')',
485                                 'call dbms_java.finalize_output_to_file('||
486                                    sys.dbms_assert.enquote_literal(full_id) ||')',
487                                 1);
488    end;
489  
490    FUNCTION remove_output_to_file (id VARCHAR2) return VARCHAR2 as
491    begin
492      return remove_output_to_java('_tf_'||id);
493    end;
494  
495    FUNCTION enable_output_to_file (id VARCHAR2) return VARCHAR2 as
496    begin
497      return enable_output_to_java('_tf_'||id);
498    end;
499  
500    FUNCTION disable_output_to_file (id VARCHAR2) return VARCHAR2 as
501    begin
502      return disable_output_to_java('_tf_'||id);
503    end;
504  
505    FUNCTION query_output_to_file (id VARCHAR2) return VARCHAR2 as
506    begin
507      return query_output_to_java('_tf_'||id);
508    end;
509  
510    PROCEDURE initialize_output_to_file (id VARCHAR2, path VARCHAR2) as
511      language java name
512      'oracle.aurora.rdbms.DbmsJava.initializeOutputToFile(java.lang.String,
513                                                           java.lang.String)';
514  
515    PROCEDURE finalize_output_to_file (id VARCHAR2) as
516      language java name
517      'oracle.aurora.rdbms.DbmsJava.finalizeOutputToFile(java.lang.String)';
518  
519  
520    PROCEDURE enable_output_to_trc as
521      trash varchar2(100) :=
522        dbms_java_test.funcall('-output_to_trc', ' ', 'ENABLE');
523    begin
524      null;
525    end;
526  
527    PROCEDURE disable_output_to_trc as
528      trash varchar2(100) :=
529        dbms_java_test.funcall('-output_to_trc', ' ', 'DISABLE');
530    begin
531      null;
532    end;
533  
534    FUNCTION query_output_to_trc return VARCHAR2 as
535    begin
536      return dbms_java_test.funcall('-output_to_trc', ' ', 'QUERY');
537    end;
538  
539    -- support for calling runjava from ojvmjava
540  
541    -- private subroutines
542    procedure rjbc_send(pipename VARCHAR2) as
543      s integer := dbms_pipe.send_message(pipename);
544      begin
545        if s <> 0 then
546           raise_application_error(-20000,
547                                   'rjbc_send pipe error:' || to_char(s));
548        end if;
549      end;
550  
551    procedure rjbc_receive(pipename VARCHAR2) as
552      s integer := dbms_pipe.receive_message(pipename);
553      begin
554        if s <> 0 then
555           raise_application_error(-20000,
556                                   'rjbc_receive pipe error:' || to_char(s));
557        end if;
558      end;
559  
560    -- rjbc_ack: acknowledge client's startup message if not previously done
561    procedure rjbc_ack as
562      begin
563        if not rjbc_client_started then
564          rjbc_receive(rjbc_fromclient);
565          dbms_pipe.reset_buffer;
566          rjbc_client_started := true;
567        end if;
568      end;
569  
570    procedure rjbc_set_pipe_names as
571    begin
572        rjbc_toclient := rjbc_sessid||'_TO_CLIENT';
573        rjbc_fromclient := rjbc_sessid||'_FROM_CLIENT';
574    end;
575  
576    -- entrypoints for runjava session
577  
578    -- rjbc_init: setup back channel, return id that identifies it.  Called
579    -- prior to runjava in the same session as runjava will run in.
580    -- flags non zero means dont use back channel for file content
581    -- this corresponds to the ojvmjava runjava mode server_file_system
582    function rjbc_init(flags NUMBER) return VARCHAR2 as
583      trash VARCHAR2(100);
584    begin
585      loop
586        rjbc_sessid := jvmrjbc.init;
587        rjbc_set_pipe_names;
588        begin
589          trash := dbms_pipe.remove_pipe(rjbc_toclient);
590          trash := dbms_pipe.remove_pipe(rjbc_fromclient);
591          trash := dbms_pipe.create_pipe(rjbc_toclient, private => true);
592          trash := dbms_pipe.create_pipe(rjbc_fromclient, private => true);
593          exit;
594        exception when others then
595          if sqlcode not in (-23322) then raise; end if;
596          begin
597            trash := dbms_pipe.remove_pipe(rjbc_toclient);
598          exception when others then
599            null;
600          end;
601          begin
602            trash := dbms_pipe.remove_pipe(rjbc_fromclient);
603          exception when others then
604            null;
605          end;
606          jvmrjbc.done(rjbc_sessid);
607        end;
608      end loop;
609      rjbc_flags := flags;
610      rjbc_client_started := false;
611  
612      dbms_pipe.purge(rjbc_toclient);
613      dbms_pipe.purge(rjbc_fromclient);
614      trash :=
615      remove_output_to_sql('___rjbc');
616      trash :=
617      set_output_to_sql('___rjbc',
618                        'begin dbms_java.rjbc_output(:1,:2);end;',
619                        'TEXT NL');
620      return rjbc_sessid;
621    end;
622  
623    -- rjbc_request: called from runjava to ask for the contents of
624    -- the file identified by pathname on the client filesystem.  Puts pathname
625    -- in the java$jvm$rjbc row then waits for client response.
626    -- rtype is not used.
627    -- status returned is 0 if the file was found, non-zero otherwise.
628    -- lob is returned containing the file content.
629    function rjbc_request(pathname VARCHAR2, rtype NUMBER, lob out BLOB)
630      return NUMBER as
631      status NUMBER;
632    begin
633      rjbc_ack;
634      jvmrjbc.putpath(rjbc_sessid, pathname);
635      dbms_pipe.pack_message(rtype);
636      rjbc_send(rjbc_toclient);
637      rjbc_receive(rjbc_fromclient);
638      dbms_pipe.unpack_message(status);
639      if status = 0 and rtype = 0 then
640        lob := jvmrjbc.getlob(rjbc_sessid);
641      end if;
642      return status;
643    end;
644  
645    -- rjbc_normalize: called from runjava to ask for the normalized, absolute
646    -- pathname on the client filesystem of the file identified by the input
647    -- argument pathname.  Puts pathname in the java$jvm$rjbc row then waits
648    ---for client response.
649    -- rtype is not used.
650    -- status returned is 0 if the file is a directory, non-zero otherwise.
651    -- This value is also not used.
652    -- normalized_pathname is returned containing the normalized path.
653    function rjbc_normalize(pathname VARCHAR2, rtype NUMBER,
654                            normalized_pathname out VARCHAR2)
655      return NUMBER as
656      status NUMBER;
657    begin
658      rjbc_ack;
659      jvmrjbc.putpath(rjbc_sessid, pathname);
660      dbms_pipe.pack_message(rtype);
661      rjbc_send(rjbc_toclient);
662      rjbc_receive(rjbc_fromclient);
663      dbms_pipe.unpack_message(status);
664      normalized_pathname := jvmrjbc.getpath(rjbc_sessid);
665      return status;
666    end;
667  
668    -- rjbc_output: set_output_to_sql entrypoint used by runjava to pass
669    -- output back to the client.
670    -- Puts text in the java$jvm$rjbc row then waits for client response.
671    procedure rjbc_output(text VARCHAR2, nl NUMBER) as
672      trash number;
673    begin
674      rjbc_ack;
675      jvmrjbc.putpath(rjbc_sessid, text);
676      if nl = 0 then
677        dbms_pipe.pack_message(3);
678      else
679        dbms_pipe.pack_message(2);
680      end if;
681      rjbc_send(rjbc_toclient);
682      rjbc_receive(rjbc_fromclient);
683      dbms_pipe.unpack_message(trash);
684    end;
685  
686    -- rjbc_done: called from client to shutdown back channel
687    procedure rjbc_done(id VARCHAR2 := null) as
688      trash VARCHAR2(100);
689    begin
690      if id is not null then
691        rjbc_sessid := id;
692        rjbc_set_pipe_names;
693        rjbc_client_started := true;
694      end if;
695      rjbc_ack;
696      dbms_pipe.pack_message(-1);
697      rjbc_send(rjbc_toclient);
698      trash := dbms_pipe.remove_pipe(rjbc_toclient);
699      trash := dbms_pipe.remove_pipe(rjbc_fromclient);
700      jvmrjbc.done(rjbc_sessid);
701      trash :=
702      remove_output_to_sql('___rjbc');
703      rjbc_sessid := null;
704    end;
705  
706    -- back channel entrypoint
707    -- rjbc_respond. Called in loop by back channel client thread to respond
708    -- to requests queued by rjbc_request, rjbc_normalize and rjbc_output.
709    -- status argument indicates result of processing the previous request.
710    -- status values are: -1 = initial call (there was no previous request)
711    --                     0 = file content found and returned
712    --                     1 = file not found
713    -- p in argument receives the normalized path for an rjbc_normalize request
714    -- l in argument receives the lob containing the file content for an
715    -- rjbc_request request.
716    -- return values indicate the kind of the new request.  These values are:
717    --   -1 = no request (ie, time to exit)
718    --    0 = file content (rjbc_request)
719    --    1 = normalize path (rjbc_normalize)
720    --    2 = newline terminated output (rjbc_output)
721    --    3 = nonnewline terminated output (rjbc_output)
722    -- For return values 0 and 1, the p out argument contains the name of the
723    -- file to be processed.  For return values 2 and 3 p contains the text
724    -- to be output.
725    function rjbc_respond(sid VARCHAR2, status NUMBER, p in out VARCHAR2, l BLOB)
726      return NUMBER as
727    begin
728      if status = -1 or rjbc_sessid is null then
729        rjbc_sessid := sid;
730        rjbc_set_pipe_names;
731      end if;
732      if status = 0 and rjbc_action = 0 then
733        jvmrjbc.putlob(rjbc_sessid, l);
734      end if;
735      if rjbc_action = 1 then
736        jvmrjbc.putpath(rjbc_sessid, p);
737      end if;
738      dbms_pipe.pack_message(status);
739      rjbc_send(rjbc_fromclient);
740      rjbc_receive(rjbc_toclient);
741      dbms_pipe.unpack_message(rjbc_action);
742      if rjbc_action <> -1 then
743        p := jvmrjbc.getpath(rjbc_sessid);
744      end if;
745      return rjbc_action;
746    end;
747  
748    -- import/export interface --
749    function start_export(short_name in varchar2,
750                          schema in varchar2,
751                          flags in number,
752                          type in number,
753                          properties out number,
754                          raw_chunk_count out number,
755                          total_raw_byte_count out number,
756                          text_chunk_count out number,
757                          total_text_byte_count out number)
758           return number
759    as language java name 'oracle.aurora.rdbms.DbmsJava.
760                           startExport(oracle.sql.CHAR, oracle.sql.CHAR,
761                                       int, int, int[], int[], int[], int[],
762                                       int[])
763                                    return int';
764  
765    function export_raw_chunk(chunk out raw, length out number)
766             return number
767    as language java name 'oracle.aurora.rdbms.DbmsJava.
768                           exportRawChunk(byte[][], int[]) return int';
769  
770    function export_text_chunk(chunk out varchar2, length out number)
771             return number
772    as language java name 'oracle.aurora.rdbms.DbmsJava.
773                           exportTextChunk(oracle.sql.CHAR[], int[]) return int';
774  
775    function end_export return number
776    as language java name 'oracle.aurora.rdbms.DbmsJava.endExport() return int';
777  
778    function start_import(long_name in varchar2,
779                          flags in number,
780                          type in number,
781                          properties in number,
782                          raw_chunk_count in number,
783                          total_raw_byte_count in number,
784                          text_chunk_count in number)
785           return number
786    as language java name 'oracle.aurora.rdbms.DbmsJava.
787                           startImport(oracle.sql.CHAR,
788                                       int, int, int, int, int, int)
789                                      return int';
790    function import_raw_chunk(chunk in raw, length in number)
791             return number
792    as language java name 'oracle.aurora.rdbms.DbmsJava.
793                           importRawChunk(byte[], int) return int';
794  
795    function import_text_chunk(chunk in varchar2, length in number)
796             return number
797    as language java name 'oracle.aurora.rdbms.DbmsJava.
798                           importTextChunk(oracle.sql.CHAR, int) return int';
799  
800    function end_import return number
801    as language java name 'oracle.aurora.rdbms.DbmsJava.endImport() return int';
802  
803  
804    -- call-specs can't have default params
805    procedure start_jmx_agent_(port VARCHAR2, ssl VARCHAR2, auth VARCHAR2)
806    as language java name
807    'oracle.aurora.rdbms.JMXAgent.startOJVMAgent(java.lang.String, java.lang.String, java.lang.String)';
808  
809    procedure start_jmx_agent(port VARCHAR2 default NULL,
810                              ssl  VARCHAR2 default NULL,
811                              auth VARCHAR2 default NULL) as
812      begin
813        -- call-specs can't have default params
814        start_jmx_agent_(port, ssl, auth);
815      end;
816  
817    -- Send command chunks to shell
818    procedure send_command (chunk long raw)
819    as language java name
820    'oracle.aurora.server.tools.shell.ShellStoredProc.receive_command (byte[])';
821  
822    -- Get reply chunks from shell
823    function get_reply return long raw
824    as language java name
825    'oracle.aurora.server.tools.shell.ShellStoredProc.get_reply () return byte[]';
826  
827    -- set a preference for the database
828    procedure set_preference(user varchar2,type varchar2, abspath varchar2,
829                             key varchar2, value varchar2)
830    as language java name
831    'java.util.prefs.OraclePreferences.DbmsSetPreference(
832          java.lang.String, java.lang.String, java.lang.String,
833          java.lang.String, java.lang.String)';
834  
835    -- turn system class loading on or off for current session
836    -- 0 is off, 1 is on
837    -- you need to be running as SYS to do this operation
838    procedure set_system_class_loading(flag number)
839    as
840    x number := 3;
841    begin
842      if flag = 1 then x := 2; end if;
843      x := option_controller(4, x);
844    exception
845    when others then
846      if sqlcode not in (-29549) then raise; end if;
847    end;
848  
849    function full_ncomp_enabled return VARCHAR2
850    as
851    -- RHLEE: 9/7/2006 disable this for now
852    -- foo exception;
853    -- x varchar2(100) := ncomp_status_msg;
854    -- pragma exception_init(foo,-29558);
855    begin
856      -- if x = 'NComp status: DISABLED' then raise foo; end if;
857      return 'OK';
858    end;
859  
860    function getVersion return VARCHAR2 as
861    begin
862          return get_ojvm_property('oracle.jserver.version');
863    end;
864  
865    procedure set_runtime_exec_credentials(dbuser varchar2,
866                                           osuser varchar2,
867                                           ospass varchar2)
868    as
869      msg varchar2(100);
870    begin
871      msg := dbms_java_test.funcall('-setrtexeccreds', ' ',
872                                    UPPER(dbuser),
873                                    osuser,
874                                    ospass);
875    end;
876  
877   -- OJVM version of user feature tracking procedure
878    procedure dbms_feature_ojvm(ojvm_boolean    OUT NUMBER,
879                                aux_count       OUT NUMBER,
880                                ojvm_info       OUT CLOB) as
881  
882      TYPE data_arr is  varray(3) of INTEGER;
883      TYPE user_data is table of data_arr index by varchar(30);
884      ud user_data;
885      owner     varchar2(30);
886      otype     varchar2(30);
887      tmp_info  varchar2(1000);
888      cursor c1 is select owner, object_type
889                          from dba_objects where
890                          (object_type='JAVA CLASS' or
891                           object_type='JAVA RESOURCE' or
892                           object_type='JAVA SOURCE') and
893                          (owner != 'SYS' and owner != 'SYSTEM' and
894                           owner != 'EXFSYS' and owner != 'MDSYS'
895                           and owner != 'ORDSYS');
896    begin
897      aux_count := 0;
898      ojvm_boolean := 0;
899      tmp_info := NULL;
900      open c1;
901  
902      loop
903        fetch c1 into owner, otype;
904        exit when c1%NOTFOUND or c1%NOTFOUND is null;
905  
906  -- this block will initialize the assoc array the first time it
907  -- is used
908  
909        begin
910           if ud(owner).exists(1) then
911             null;
912           end if;
913        exception
914          WHEN NO_DATA_FOUND THEN
915            ud(owner) := data_arr(0,0,0);
916        end;
917  
918        case
919          when otype = 'JAVA CLASS'    then ud(owner)(1) := ud(owner)(1) + 1;
920          when otype = 'JAVA RESOURCE' then ud(owner)(2) := ud(owner)(2) + 1;
921          when otype = 'JAVA SOURCES'  then ud(owner)(3) := ud(owner)(3) + 1;
922          else null;
923        end case;
924      end loop;
925      close c1;
926  
927      owner := ud.FIRST;
928      tmp_info := 'Non-system users: ';
929      while owner is not null loop
930        aux_count := aux_count + ud(owner)(1) + ud(owner)(2) + ud(owner)(3);
931        tmp_info := tmp_info || owner || ' with ' ||
932                     ud(owner)(1) || ' classes, ' ||
933                     ud(owner)(2) || ' resources, ' ||
934                     ud(owner)(3) || ' sources. ';
935        owner := ud.NEXT(owner);
936      end loop;
937  
938       if aux_count > 0 then
939          ojvm_boolean := 1; -- we have user data;
940          ojvm_info := tmp_info;
941       end if;
942    end;
943  
944   -- OJVM version of system feature tracking procedure
945   --
946   -- This procedure is problematic in that we do not
947   -- know when someone adds classes to a product that
948   -- belongs to Oracle. This needs to be checked release to
949   -- release and != clauses will need to be added above to the
950   -- user query.
951  
952    procedure dbms_feature_system_ojvm(ojvm_boolean    OUT NUMBER,
953                                       aux_count       OUT NUMBER,
954                                       ojvm_info       OUT CLOB) as
955      TYPE data_arr is  varray(3) of INTEGER;
956      TYPE user_data is table of data_arr index by varchar(30);
957      owner     varchar2(30);
958      otype     varchar2(30);
959      tmp_info  varchar2(1000);
960      cursor c1 is select owner, object_type
961                          from dba_objects where
962                          (object_type='JAVA CLASS' or
963                           object_type='JAVA RESOURCE' or
964                           object_type='JAVA SOURCE') and
965                          (owner = 'SYS' or owner = 'SYSTEM' or
966                           owner = 'EXFSYS' or owner = 'MDSYS'
967                           or owner = 'ORDSYS');
968      ud user_data;
969    begin
970   -- this reflects the number schemas of Oracle products using java.
971   -- OJVM is always installed
972      ojvm_boolean := 1; -- always there.
973      open c1;
974      tmp_info := NULL;
975      aux_count := 0;
976      loop
977        fetch c1 into owner, otype;
978        exit when c1%NOTFOUND or c1%NOTFOUND is null;
979  -- this block will initialize the assoc array the first time it
980  -- is used
981  
982        begin
983          if ud(owner).exists(1) then
984             null;
985           end if;
986        exception
987          WHEN NO_DATA_FOUND THEN
988            ud(owner) := data_arr(0,0,0);
989        end;
990  
991        case
992        when otype = 'JAVA CLASS'    then ud(owner)(1) := ud(owner)(1) + 1;
993        when otype = 'JAVA RESOURCE' then ud(owner)(2) := ud(owner)(2) + 1;
994        when otype = 'JAVA SOURCES'  then ud(owner)(3) := ud(owner)(3) + 1;
995        else null;
996        end case;
997      end loop;
998      close c1;
999  
1000      owner := ud.FIRST;
1001      tmp_info := 'System users: ';
1002      while owner is not null loop
1003        aux_count := aux_count + ud(owner)(1) + ud(owner)(2) + ud(owner)(3);
1004        tmp_info := tmp_info || owner || ' with ' ||
1005                     ud(owner)(1) || ' classes, ' ||
1006                     ud(owner)(2) || ' resources, ' ||
1007                     ud(owner)(3) || ' sources. ';
1008        owner := ud.NEXT(owner);
1009      end loop;
1010      ojvm_info := tmp_info;
1011    end;
1012  end;
1013  /

Package body created.

SQL> 
SQL> 
SQL> CREATE PUBLIC SYNONYM dbms_java FOR dbms_java;

Synonym created.

SQL> 
SQL> GRANT EXECUTE ON dbms_java TO PUBLIC;

Grant succeeded.

SQL> 
SQL> 
SQL> 
SQL> create or replace package body dbms_java_definers as
  2  
  3    FUNCTION get_nth_native_compiler_option(n number) return VARCHAR2 as language java name
  4    'oracle.aurora.zephyr.CompilerOptions.describeOption(int) return java.lang.String';
  5  
  6    PROCEDURE set_native_compiler_option_(optionName VARCHAR2,
  7                                          value VARCHAR2,
  8                                          owner NUMBER) as language java name
  9    'oracle.aurora.zephyr.CompilerOptions.setCompilerOption(java.lang.String,java.lang.String,int)';
 10  
 11  
 12    FUNCTION decode_native_compiler_option_(optionName VARCHAR2,
 13                                            value      VARCHAR2) RETURN VARCHAR2 as language java name
 14    'oracle.aurora.zephyr.CompilerOptions.decodeCompilerOption(java.lang.String, java.lang.String) return java.lang.String';
 15  
 16    PROCEDURE unset_native_compiler_option_(optionName VARCHAR2,
 17                                            value      VARCHAR2,
 18                                            owner      NUMBER) as language java name
 19    'oracle.aurora.zephyr.CompilerOptions.unsetCompilerOption(java.lang.String,java.lang.String,int)';
 20  
 21    FUNCTION compile_class_(schema    VARCHAR2,
 22                            classname VARCHAR2) return NUMBER as language java name
 23      'oracle.aurora.zephyr.AOTDriver.compileClass(java.lang.String, java.lang.String) return int';
 24  
 25    FUNCTION compile_method_(schema     VARCHAR2,
 26                             classname  VARCHAR2,
 27                             methodname VARCHAR2,
 28                             methodsig  VARCHAR2) return NUMBER as language java name
 29      'oracle.aurora.zephyr.AOTDriver.compileMethod(java.lang.String, java.lang.String, java.lang.String, java.lang.String) return int';
 30  
 31    FUNCTION uncompile_class_(schema    VARCHAR2,
 32                              classname VARCHAR2,
 33                              permanentp NUMBER) return NUMBER as language java name
 34      'oracle.aurora.zephyr.AOTDriver.uncompileClass(java.lang.String, java.lang.String, boolean) return int';
 35  
 36  
 37    FUNCTION uncompile_method_(schema     VARCHAR2,
 38                               classname  VARCHAR2,
 39                               methodname VARCHAR2,
 40                               methodsig  VARCHAR2,
 41                               permanentp NUMBER) return NUMBER as language java name
 42      'oracle.aurora.zephyr.AOTDriver.uncompileMethod(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean) return int';
 43  
 44  end;
 45  /

Package body created.

SQL> 
SQL> 
SQL> --- The following is redundant but needed for the time being by existing
SQL> --- code, so leave it alone:
SQL> 
SQL> create or replace
  2  FUNCTION dbj_long_name (shortname VARCHAR2) RETURN VARCHAR2
  3  as language java name
  4      'oracle.aurora.rdbms.DbmsJava.longNameForSQL(java.lang.String)
  5            return java.lang.String';
  6  /

Function created.

SQL> 
SQL> create or replace function "NameFromLastDDL" (longp number) return varchar2 as
  2  language java name 'oracle.aurora.rdbms.DbmsJava.NameFromLastDDL(boolean) return oracle.sql.CHAR';
  3  /

Function created.

SQL> 
SQL> CREATE PUBLIC SYNONYM "NameFromLastDDL" FOR sys."NameFromLastDDL";

Synonym created.

SQL> 
SQL> GRANT EXECUTE ON "NameFromLastDDL" TO PUBLIC;

Grant succeeded.

SQL> 
SQL> 
SQL> create or replace FUNCTION dbj_short_name (longname VARCHAR2)
  2    return VARCHAR2 as
  3  begin
  4    return dbms_java.shortname(longname);
  5  end dbj_short_name;
  6  /

Function created.

SQL> 
SQL> CREATE PUBLIC SYNONYM dbj_short_name FOR dbj_short_name;

Synonym created.

SQL> 
SQL> GRANT EXECUTE ON dbj_short_name TO PUBLIC;

Grant succeeded.

SQL> 
SQL> create or replace package body jvmrjbc as
  2  function init return VARCHAR2 as
  3    sessid VARCHAR2(100);
  4  begin
  5    loop
  6      begin
  7        sessid := dbms_pipe.unique_session_name||dbms_crypto.randombytes(35);
  8        insert into java$jvm$rjbc values (sessid, null, empty_blob);
  9        commit;
 10        return sessid;
 11      exception when others then
 12        if sqlcode not in (-1) then raise; end if;
 13      end;
 14    end loop;
 15  end;
 16  
 17  procedure putpath(sessid VARCHAR2, pathname VARCHAR2) as
 18  begin
 19      update java$jvm$rjbc set path=pathname where id=sessid;
 20      commit;
 21  end;
 22  
 23  function getlob(sessid VARCHAR2) return BLOB as
 24        lob BLOB;
 25  begin
 26        select lob into lob from java$jvm$rjbc where id=sessid;
 27        return lob;
 28  end;
 29  
 30  function getpath(sessid VARCHAR2) return VARCHAR2 as
 31        p VARCHAR2(4000);
 32  begin
 33        select path into p from java$jvm$rjbc where id=sessid;
 34        return p;
 35  end;
 36  
 37  procedure putlob(sessid VARCHAR2, l BLOB) as
 38    tl BLOB;
 39  begin
 40      select lob into tl from java$jvm$rjbc where id=sessid for update;
 41      dbms_lob.trim(tl, 0);
 42      dbms_lob.append(tl, l);
 43      commit;
 44  end;
 45  
 46  procedure done(sessid VARCHAR2) as
 47  begin
 48      delete from java$jvm$rjbc where id=sessid;
 49      commit;
 50  end;
 51  
 52  end;
 53  /

Package body created.

SQL> 
SQL> GRANT EXECUTE ON jvmrjbc TO PUBLIC;

Grant succeeded.

SQL> 
SQL> 
SQL> 
SQL> -- Java Sanity Checks
SQL> 
SQL> -- Check for any Java classes that are invalid.
SQL> -- The following query should return 0 rows.
SQL> 
SQL> select nvl(longdbcs,name) from obj$,javasnm$
  2        where type#=29 and status != 1 and name=short(+);

no rows selected

SQL> 
SQL> -- Verify that a simple java stored procedure works, and punt if it doesn't
SQL> whenever sqlerror exit;
SQL> select dbms_java.longname('foo') from dual;

DBMS_JAVA.LONGNAME('FOO')
--------------------------------------------------------------------------------
foo

1 row selected.

SQL> whenever sqlerror continue;
SQL> 
SQL> -- Prepare for use of java$rmjvm$aux3 in initjvm4
SQL> insert into java$rmjvm$aux3 (select obj# from obj$ where type#=29);

24810 rows created.

SQL> 
SQL> -- Find all the error messages.
SQL> -- Create the get error package for LoadJava
SQL> @@initjvm4
SQL> -- subscript for initjvm.sql and ilk
SQL> 
SQL> -- Find all the error messages.  The following query returns the errors
SQL> -- that caused the invalid classes (if any) from the previous query (in
SQL> -- the script which called initjvm4, either initjvm.sql or jvmursc.sql).
SQL> 
SQL> select nvl(longdbcs, o.name), text
  2   from error$ e,obj$ o,javasnm$,java$rmjvm$aux3 a where
  3   e.obj#=o.obj# and o.owner#=0 and o.obj#=a.obj# and o.name=short(+);

no rows selected

SQL> 
SQL> -- There should be zero results from the above query in a correct installation
SQL> -- of the Java VM
SQL> 
SQL> delete from java$rmjvm$aux3;

24810 rows deleted.

SQL> 
SQL> -- Create the get error package for LoadJava
SQL> create or replace package get_error$ as
  2    type myrec is record (errormsg varchar(4000));
  3    type myrctype is ref cursor return myrec;
  4    function error_lines (classname varchar2) return myrctype;
  5  end get_error$;
  6  /

Package created.

SQL> create or replace package body get_error$ as
  2    function error_lines (classname varchar2) return myrctype is
  3      rc myrctype; short_name varchar2(50); n number;
  4    begin
  5      open rc for select text from user_errors
  6         where name = dbms_java.shortname(classname);
  7      return rc;
  8    end;
  9  end get_error$;
 10  /

Package body created.

SQL> 
SQL> call initjvmaux.drp('drop public synonym get_error$');
drop public synonym get_error$

Call completed.

SQL> 
SQL> create public synonym get_error$ for get_error$;

Synonym created.

SQL> 
SQL> grant execute on get_error$ to public;

Grant succeeded.

SQL> 
SQL> 
SQL> 
SQL> -- initialize Java Security
SQL> -- Keep this first in case any of the other inits want to run java
SQL> 
SQL> @@jvmsec0;
SQL> variable jvmrmaction varchar2(30)
SQL> execute :jvmrmaction := 'FULL_REMOVAL';

PL/SQL procedure successfully completed.

SQL> @@jvmrmsec
SQL> -- Remove some portion of the dictionary objects created by initsec.sql
SQL> 
SQL> -- This script must be run as a subscript of a script which sets the
SQL> -- variable jvmrmaction.
SQL> -- Possible values are
SQL> --  FULL_REMOVAL:        remove all java related objects
SQL> --  GRADE_REMOVAL:       remove java related objects for general up/downgrade
SQL> --  DOWNGRADE_x.y.z_TO_a.b.c: remove or massage system objects as appropriate
SQL> --                       when downgrading to release a.b.c
SQL> --  NONE:                do nothing
SQL> 
SQL> print jvmrmaction

JVMRMACTION
--------------------------------------------------------------------------------
FULL_REMOVAL

SQL> 
SQL> --- The following form will generate errors if the view dba_java_policy
SQL> --- is not yet defined, as will typically be the case when this script is
SQL> --- called from initsec.  These errors can be ignored.
SQL> 
SQL> begin if :jvmrmaction = 'DOWNGRADE_8.1.7_TO_8.1.6' then
  2  
  3  if initjvmaux.startstep('REMOVE_JAVA_DEPLOY_PERMISSIONS') then
  4  
  5  --- remove JAVA_DEPLOY permissions
  6  initjvmaux.exec('
  7  declare
  8    CURSOR D is
  9      select SEQ from dba_java_policy where GRANTEE = ''JAVA_DEPLOY'' ;
 10    ROW integer;
 11  begin
 12    open D;
 13    loop
 14      fetch D into row;
 15      exit when D%NOTFOUND;
 16      -- dbms_output.put_line(row);
 17      dbms_java.disable_permission(row);
 18      dbms_java.delete_permission(row);
 19    end loop;
 20  end;
 21  ');
 22  
 23  
 24  initjvmaux.endstep; end if;
 25  
 26  end if; end;
 27  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'DOWNGRADE_10.1.0_TO_9.2.0' then
  2  
  3  if initjvmaux.startstep('REMOVE_JAVA_UTIL_LOGGING_LOGGINGPERM') then
  4    initjvmaux.exec('
  5      declare
  6        CURSOR D is
  7          select SEQ from dba_java_policy where
  8            ( name like ''%java.util.logging.LoggingPermission%'' and
  9              type_name like ''%.PolicyTablePermission'' ) or
 10            type_name = ''java.util.logging.LoggingPermission'' order by type_name;
 11        ROW integer;
 12      begin
 13        open D;
 14        loop
 15          fetch D into row;
 16          exit when D%NOTFOUND;
 17          -- dbms_output.put_line(row);
 18          dbms_java.disable_permission(row);
 19          dbms_java.delete_permission(row);
 20        end loop;
 21      end;
 22        ');
 23  
 24    initjvmaux.endstep;
 25  end if;
 26  
 27  if initjvmaux.startstep('REMOVE_JAVAX_SECURITY_AUTH_AUTHPERM') then
 28    initjvmaux.exec('
 29      declare
 30        CURSOR D is
 31          select SEQ from dba_java_policy where
 32            ( name like ''%javax.security.auth.AuthPermission%'' and
 33              type_name like ''%.PolicyTablePermission'' ) or
 34            type_name = ''javax.security.auth.AuthPermission'' order by type_name;
 35        ROW integer;
 36      begin
 37        open D;
 38        loop
 39          fetch D into row;
 40          exit when D%NOTFOUND;
 41          -- dbms_output.put_line(row);
 42          dbms_java.disable_permission(row);
 43          dbms_java.delete_permission(row);
 44        end loop;
 45      end;
 46        ');
 47  
 48    initjvmaux.endstep;
 49  end if;
 50  
 51  if initjvmaux.startstep('REMOVE_JAVA_AWT_AWTPERMISSION') then
 52    initjvmaux.exec('
 53      declare
 54        CURSOR D is
 55          select SEQ from dba_java_policy where
 56            ( name like ''%java.awt.AWTPermission%'' and
 57              type_name like ''%.PolicyTablePermission'' ) or
 58            type_name = ''java.awt.AWTPermission'' order by type_name;
 59        ROW integer;
 60      begin
 61        open D;
 62        loop
 63          fetch D into row;
 64          exit when D%NOTFOUND;
 65          -- dbms_output.put_line(row);
 66          dbms_java.disable_permission(row);
 67          dbms_java.delete_permission(row);
 68        end loop;
 69      end;
 70        ');
 71  
 72    initjvmaux.endstep;
 73  end if;
 74  
 75  if initjvmaux.startstep('REMOVE_JAVAX_NET_SSL_SSLPERMISSION') then
 76    initjvmaux.exec('
 77      declare
 78        CURSOR D is
 79          select SEQ from dba_java_policy where
 80            ( name like ''%javax.net.ssl.SSLPermission%'' and
 81              type_name like ''%.PolicyTablePermission'' ) or
 82            type_name = ''javax.net.ssl.SSLPermission'' order by type_name;
 83        ROW integer;
 84      begin
 85        open D;
 86        loop
 87          fetch D into row;
 88          exit when D%NOTFOUND;
 89          -- dbms_output.put_line(row);
 90          dbms_java.disable_permission(row);
 91          dbms_java.delete_permission(row);
 92        end loop;
 93      end;
 94        ');
 95  
 96    initjvmaux.endstep;
 97  end if;
 98  
 99  if initjvmaux.startstep('REMOVE_JAVA_SECURITY_ALLPERMISSION') then
100    initjvmaux.exec('
101      declare
102        CURSOR D is
103          select SEQ from dba_java_policy where
104            ( name like ''%java.security.AllPermission%'' and
105              type_name like ''%.PolicyTablePermission'' ) or
106              type_name = ''java.security.AllPermission'' order by type_name;
107        ROW integer;
108      begin
109        open D;
110        loop
111          fetch D into row;
112          exit when D%NOTFOUND;
113          -- dbms_output.put_line(row);
114          dbms_java.disable_permission(row);
115          dbms_java.delete_permission(row);
116        end loop;
117      end;
118        ');
119  
120    initjvmaux.endstep;
121  end if;
122  end if;end;
123  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'DOWNGRADE_9.2.0_TO_9.0.1' then
  2  
  3  if initjvmaux.startstep('REMOVE_JAVA_DEPLOY_FILE_PERMISSIONS') then
  4  
  5    initjvmaux.exec('
  6    begin
  7    dbms_java.revoke_permission( ''JAVA_DEPLOY'', ''SYS:java.io.FilePermission'', ''javavm/admin/*'', ''write'' );
  8    dbms_java.revoke_permission( ''JAVA_DEPLOY'', ''SYS:java.io.FilePermission'', ''javavm/deploy/*'', ''read'' );
  9    end;
 10    ');
 11  
 12    initjvmaux.endstep;
 13  
 14  end if;
 15  
 16  if initjvmaux.startstep('REMOVE_SQLPERMISSION_PERMISSIONS') then
 17  
 18    --- remove SQLPermission related rows
 19    initjvmaux.exec('
 20      declare
 21        CURSOR D is
 22          select SEQ from dba_java_policy where
 23            ( name like ''%java.sql.SQLPermission%'' and
 24              type_name like ''%.PolicyTablePermission'' ) or
 25            type_name = ''java.sql.SQLPermission'' order by type_name;
 26        ROW integer;
 27      begin
 28        open D;
 29        loop
 30          fetch D into row;
 31          exit when D%NOTFOUND;
 32          -- dbms_output.put_line(row);
 33          dbms_java.disable_permission(row);
 34          dbms_java.delete_permission(row);
 35        end loop;
 36      end;
 37        ');
 38  
 39    initjvmaux.endstep; end if;
 40  
 41  end if; end;
 42  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or
  2           (:jvmrmaction = 'DOWNGRADE_8.1.7_TO_8.1.6' and
  3            initjvmaux.startstep('DROP_817_SECURITY_TABLES_ETC')) then
  4  
  5  initjvmaux.drp('drop TABLE java$policy$shared$table');
  6  initjvmaux.drp('drop ROLE java_deploy');
  7  
  8  if :jvmrmaction = 'DOWNGRADE_8.1.7_TO_8.1.6' then initjvmaux.endstep; end if;
  9  
 10  end if;end;
 11  /
drop TABLE java$policy$shared$table
drop ROLE java_deploy

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or
  2           (:jvmrmaction = 'DOWNGRADE_8.1.6_TO_8.1.5' and
  3            initjvmaux.startstep('DROP_816_SECURITY_TABLES_ETC')) then
  4  
  5  initjvmaux.drp('drop TABLE java$policy$');
  6  initjvmaux.drp('drop SEQUENCE java$policy$sequence$');
  7  initjvmaux.drp('drop VIEW dba_java_policy');
  8  initjvmaux.drp('drop PUBLIC SYNONYM dba_java_policy');
  9  initjvmaux.drp('drop VIEW user_java_policy');
 10  initjvmaux.drp('drop PUBLIC SYNONYM user_java_policy');
 11  initjvmaux.drp('drop ROLE java_admin');
 12  
 13  if :jvmrmaction = 'DOWNGRADE_8.1.6_TO_8.1.5' then initjvmaux.endstep; end if;
 14  
 15  end if;end;
 16  /
drop TABLE java$policy$
drop SEQUENCE java$policy$sequence$
drop VIEW dba_java_policy
drop PUBLIC SYNONYM dba_java_policy
drop VIEW user_java_policy
drop PUBLIC SYNONYM user_java_policy
drop ROLE java_admin

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' then
  2  
  3  -- We go through and drop all shared data objects with names
  4  -- beginning with JAVA$POLICY$SHARED$
  5  
  6  initjvmaux.exec('delete from obj$ where type#=56 and name like ''JAVA$POLICY$SHARED$%''');
  7  
  8  end if;end;
  9  /
delete from obj$ where type#=56 and name like 'JAVA$POLICY$SHARED$%'

PL/SQL procedure successfully completed.

SQL> 
SQL> select object_name from user_objects where object_name like 'JAVA$POLICY%' ;

no rows selected

SQL> 
SQL> -- create java$policy$ table and views
SQL> @@jvmsec1
SQL> -- create java$policy$ table and views
SQL> 
SQL> create table java$policy$
  2  (
  3          kind# number,
  4          grantee# number,
  5          type_schema# number,
  6          type_name varchar2(4000),
  7          name varchar2(4000),
  8          action varchar2(4000),
  9          status# number,
 10          key number
 11  );

Table created.

SQL> 
SQL> create sequence java$policy$sequence$;

Sequence created.

SQL> 
SQL> -- Explicitly "bootstrap" rows into table that are needed to execute the
SQL> -- grant's below.
SQL> begin if initjvmaux.startstep('JVMSEC1_INSERT1') then
  2  
  3  initjvmaux.exec('
  4  
  5  insert into java$policy$
  6    values( 0, 0,
  7            0, ''java.lang.RuntimePermission'', ''createClassLoader'', null,
  8            2, java$policy$sequence$.nextval )
  9  ');
 10  
 11  initjvmaux.endstep; end if; end;
 12  /


insert into java$policy$
  values( 0, 0,
          0,
'java.lang.RuntimePermission', 'createClassLoader', null,
          2,
java$policy$sequence$.nextval )


PL/SQL procedure successfully completed.

SQL> 
SQL> begin if initjvmaux.startstep('JVMSEC1_INSERT2') then
  2  
  3  initjvmaux.exec('
  4  
  5  insert into java$policy$
  6    values( 0, 1,
  7            0, ''java.util.PropertyPermission'', ''*'', ''read'',
  8            2, java$policy$sequence$.nextval )
  9  ');
 10  
 11  initjvmaux.endstep; end if; end;
 12  /


insert into java$policy$
  values( 0, 1,
          0,
'java.util.PropertyPermission', '*', 'read',
          2,
java$policy$sequence$.nextval )


PL/SQL procedure successfully completed.

SQL> 
SQL> 
SQL> 
SQL> -- a table java$policy$shared$version is created below.  See the
SQL> -- comment there for an explanation of why creation is deferred.
SQL> 
SQL> create or replace view dba_java_policy
  2     (kind, grantee, type_schema, type_name, name, action, enabled, seq)
  3  as select
  4     decode(jp.kind#, 0, 'GRANT', 1, 'RESTRICT'),
  5     u.name,
  6     ut.name,
  7     jp.type_name,
  8     jp.name,
  9     jp.action,
 10     decode(jp.status#, 2, 'ENABLED', 3, 'DISABLED'),
 11     jp.key
 12  from
 13    java$policy$ jp, sys.user$ u, sys.user$ ut
 14  where
 15    jp.grantee# = u.user# and jp.type_schema# = ut.user#
 16  order by u.name, ut.name, jp.type_name, jp.name, jp.action;

View created.

SQL> 
SQL> comment on table dba_java_policy is
  2  'java security Permissions for all users';

Comment created.

SQL> 
SQL> 
SQL> create public synonym DBA_JAVA_POLICY for DBA_JAVA_POLICY;

Synonym created.

SQL> 
SQL> grant select on DBA_JAVA_POLICY to select_catalog_role;

Grant succeeded.

SQL> 
SQL> create or replace view user_java_policy
  2    (kind, grantee_name, type_schema, type_name,  name, action, enabled, seq)
  3  as select
  4    djp.kind, djp.grantee, djp.type_schema,
  5    djp.type_name, djp.name, djp.action, djp.enabled, djp.seq
  6  from
  7    dba_java_policy djp, sys.user$ u
  8  where
  9    u.name = djp.grantee and
 10    ( ( u.user# in ( select distinct privilege# from SYS.SYSAUTH$
 11                 where privilege# > 0
 12                 start with grantee# = userenv('SCHEMAID')
 13                 connect by PRIOR  privilege# = grantee# ) )
 14       or u.name = 'PUBLIC'
 15       or u.user# = userenv('SCHEMAID') );

View created.

SQL> 
SQL> comment on table user_java_policy is
  2  'java security Permissions for current user';

Comment created.

SQL> 
SQL> create public synonym USER_JAVA_POLICY for USER_JAVA_POLICY;

Synonym created.

SQL> 
SQL> grant select on USER_JAVA_POLICY to PUBLIC with grant option;

Grant succeeded.

SQL> 
SQL> -- The role that has the right to administer JAVA Permissions
SQL> create role java_admin;

Role created.

SQL> grant java_admin to dba;

Grant succeeded.

SQL> 
SQL> 
SQL> 
SQL> -- The role for deploying JServer Accellerator jar's
SQL> @@jvmsec2
SQL> -- The role for deploying JServer Accellerator jar's
SQL> 
SQL> call initjvmaux.create_if_not_present('create role java_deploy');
create role java_deploy

Call completed.

SQL> grant java_deploy to dba;

Grant succeeded.

SQL> 
SQL> 
SQL> -- populate the policy table
SQL> -- make the bedrock principal explicit.
SQL> -- grant to JAVA_ADMIN the right to administer all known permissions.
SQL> -- grant some Permissions to PUBLIC
SQL> @@jvmsec3
SQL> -- populate the policy table
SQL> 
SQL> -- make the bedrock principal explicit.
SQL> -- This is done twice for a subtle reason.
SQL> -- If initsec has run previously (so there is an SRO in use)
SQL> -- the code in jvmrmsec will drop the SRO. If the SRO is in use
SQL> -- in the current session it will cause an ORA-29549 (session state cleared)
SQL> -- first time you try to run java.  The first call to dbms_java.grant_policy_permission
SQL> -- will be that call.
SQL> -- Since grant_policy_permission doesn't do anything if the Permission has already been
SQL> -- granted calling it twice is harmless.
SQL> call dbms_java.grant_policy_permission('SYS', 'SYS', 'oracle.aurora.rdbms.security.PolicyTablePermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('SYS', 'SYS', 'oracle.aurora.rdbms.security.PolicyTablePermission', '*');

Call completed.

SQL> 
SQL> 
SQL> commit;

Commit complete.

SQL> 
SQL> -- grant to JAVA_ADMIN the right to administer all known permissions.
SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'oracle.aurora.rdbms.security.PolicyTablePermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'java.util.PropertyPermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'java.io.SerializablePermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'java.io.FilePermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'java.net.NetPermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'java.net.SocketPermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'java.security.SecurityPermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'java.lang.RuntimePermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'java.lang.reflect.ReflectPermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'java.security.AllPermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'oracle.aurora.security.JServerPermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'java.util.logging.LoggingPermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'javax.security.auth.AuthPermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'java.awt.AWTPermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'javax.net.ssl.SSLPermission','*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'javax.management.MBeanServerPermission','*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'javax.management.MBeanTrustPermission','*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'javax.management.ManagementPermission','*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'javax.management.MBeanPermission','*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'java.lang.management.ManagementPermission', '*');

Call completed.

SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS','javax.security.auth.kerberos.ServicePermission', '*');

Call completed.

SQL> commit;

Commit complete.

SQL> 
SQL> -- grant some Permissions to PUBLIC
SQL> call dbms_java.grant_permission('PUBLIC', 'SYS:java.util.PropertyPermission', '*', 'read');

Call completed.

SQL> call dbms_java.grant_permission('PUBLIC', 'SYS:java.util.PropertyPermission', 'user.language', 'write');

Call completed.

SQL> call dbms_java.grant_permission('PUBLIC', 'SYS:java.lang.RuntimePermission','exitVM', null);

Call completed.

SQL> call dbms_java.grant_permission('PUBLIC', 'SYS:java.lang.RuntimePermission','createSecurityManager', null);

Call completed.

SQL> call dbms_java.grant_permission('PUBLIC', 'SYS:java.lang.RuntimePermission','modifyThread', null);

Call completed.

SQL> call dbms_java.grant_permission('PUBLIC', 'SYS:java.lang.RuntimePermission','modifyThreadGroup', null);

Call completed.

SQL> call dbms_java.grant_permission('PUBLIC', 'SYS:java.lang.RuntimePermission','preferences', null);

Call completed.

SQL> 
SQL> -- allows tnsnames aliases when connectiong via JDBC
SQL> call dbms_java.grant_permission('PUBLIC', 'SYS:java.lang.RuntimePermission','getenv.TNS_ADMIN', '');

Call completed.

SQL> call dbms_java.grant_permission('PUBLIC', 'SYS:java.lang.RuntimePermission','getenv.ORACLE_HOME','');

Call completed.

SQL> call dbms_java.grant_permission('PUBLIC','SYS:java.util.PropertyPermission', 'oracle.net.tns_admin', 'write' );

Call completed.

SQL> 
SQL> -- Subject to restrictions, anybody can load any class
SQL> call dbms_java.grant_permission('PUBLIC', 'SYS:oracle.aurora.security.JServerPermission', 'LoadClassInPackage.*', null);

Call completed.

SQL> call dbms_java.restrict_permission('PUBLIC', 'SYS:oracle.aurora.security.JServerPermission', 'LoadClassInPackage.java.*', null);

Call completed.

SQL> call dbms_java.restrict_permission('PUBLIC', 'SYS:oracle.aurora.security.JServerPermission', 'LoadClassInPackage.oracle.aurora.*', null);

Call completed.

SQL> call dbms_java.restrict_permission('PUBLIC', 'SYS:oracle.aurora.security.JServerPermission', 'LoadClassInPackage.oracle.jdbc.*', null);

Call completed.

SQL> 
SQL> 
SQL> 
SQL> 
SQL> -- grant required Permissions to java_deploy
SQL> @@jvmsec4
SQL> -- grant required Permissions to java_deploy
SQL> call dbms_java.grant_permission('JAVA_DEPLOY', 'SYS:oracle.aurora.security.JServerPermission', 'LoadClassInPackage.oracle.aurora.deploy.*', null);

Call completed.

SQL> call dbms_java.grant_permission('JAVA_DEPLOY', 'SYS:oracle.aurora.security.JServerPermission', 'Deploy', null);

Call completed.

SQL> call dbms_java.grant_permission( 'JAVA_DEPLOY', 'SYS:java.io.FilePermission', 'javavm/admin/*', 'write' );

Call completed.

SQL> call dbms_java.grant_permission( 'JAVA_DEPLOY', 'SYS:java.io.FilePermission', 'javavm/deploy/*', 'read' );

Call completed.

SQL> 
SQL> call dbms_java.grant_permission( 'JAVA_DEPLOY', 'SYS:java.io.FilePermission', 'bin/chmod', 'execute' );

Call completed.

SQL> call dbms_java.grant_permission( 'JAVA_DEPLOY', 'SYS:java.lang.RuntimePermission', 'writeFileDescriptor', '' );

Call completed.

SQL> call dbms_java.grant_permission( 'JAVA_DEPLOY', 'SYS:java.lang.RuntimePermission', 'readFileDescriptor', '' );

Call completed.

SQL> 
SQL> 
SQL> 
SQL> -- grant some Permissions to JavaUserPriv
SQL> -- grant some Permissions to JavaSysPriv
SQL> -- Permissions granted explicitly to SYS but not to JavaSysPriv
SQL> -- because they are regarded as particularly dangerous
SQL> -- grant Permissions to JavaDebugPriv
SQL> -- JServerPermission granted only to SYS, and not to JavaSysPriv
SQL> -- as these are not standard part of JDK policies.
SQL> -- deal with SQLPermission
SQL> @@jvmsec5
SQL> -- grant some Permissions to JavaUserPriv
SQL> call dbms_java.grant_permission('JAVAUSERPRIV', 'SYS:java.net.SocketPermission', '*', 'connect,resolve');

Call completed.

SQL> call dbms_java.grant_permission('JAVAUSERPRIV', 'SYS:java.io.FilePermission', '<<ALL FILES>>', 'read');

Call completed.

SQL> call dbms_java.grant_permission('JAVAUSERPRIV', 'SYS:java.lang.RuntimePermission', 'getProtectionDomain', null);

Call completed.

SQL> call dbms_java.grant_permission('JAVAUSERPRIV', 'SYS:java.lang.RuntimePermission', 'accessClassInPackage.*', null);

Call completed.

SQL> call dbms_java.grant_permission('JAVAUSERPRIV', 'SYS:java.lang.RuntimePermission', 'defineClassInPackage.*', null);

Call completed.

SQL> call dbms_java.grant_permission('JAVAUSERPRIV', 'SYS:java.lang.RuntimePermission', 'stopThread', null);

Call completed.

SQL> 
SQL> -- grant some Permissions to JavaSysPriv
SQL> call dbms_java.grant_permission('JAVASYSPRIV', 'SYS:java.io.SerializablePermission', '*', null);

Call completed.

SQL> call dbms_java.grant_permission('JAVASYSPRIV', 'SYS:java.io.FilePermission', '<<ALL FILES>>', 'read,write,execute,delete');

Call completed.

SQL> call dbms_java.grant_permission('JAVASYSPRIV', 'SYS:java.net.SocketPermission', '*', 'accept,connect,listen,resolve');

Call completed.

SQL> call dbms_java.grant_permission('JAVASYSPRIV', 'SYS:java.lang.RuntimePermission', 'createClassLoader', null);

Call completed.

SQL> call dbms_java.grant_permission('JAVASYSPRIV', 'SYS:java.lang.RuntimePermission', 'getClassLoader', null);

Call completed.

SQL> call dbms_java.grant_permission('JAVASYSPRIV', 'SYS:java.lang.RuntimePermission', 'setContextClassLoader', null);

Call completed.

SQL> call dbms_java.grant_permission('JAVASYSPRIV', 'SYS:java.lang.RuntimePermission', 'setFactory', null);

Call completed.

SQL> call dbms_java.grant_permission('JAVASYSPRIV', 'SYS:java.lang.RuntimePermission', 'setIO', null);

Call completed.

SQL> call dbms_java.grant_permission('JAVASYSPRIV', 'SYS:java.lang.RuntimePermission', 'setFileDescriptor', null);

Call completed.

SQL> call dbms_java.grant_permission('JAVASYSPRIV', 'SYS:java.lang.RuntimePermission', 'readFileDescriptor', null);

Call completed.

SQL> call dbms_java.grant_permission('JAVASYSPRIV', 'SYS:java.lang.RuntimePermission', 'writeFileDescriptor', null);

Call completed.

SQL> call dbms_java.grant_permission('JAVASYSPRIV', 'SYS:java.lang.RuntimePermission', 'writeFileDescriptor', null);

Call completed.

SQL> 
SQL> -- Permissions granted to JMXSERVER are needed to run JMX Server and connection agent.
SQL> -- Any session attempting to launch a JMX server needs to have role JMXSERVER or a superset, otherwise
SQL> -- JMX-related security exceptions will be raised.
SQL> -- See also: dbms_java.start_jmx_agent.
SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:java.util.PropertyPermission', 'javax.net.ssl.*', 'read,write');

Call completed.

SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:java.util.PropertyPermission', 'https.proxyHost', 'read,write');

Call completed.

SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:java.util.PropertyPermission', 'javax.net.debug', 'read,write');

Call completed.

SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:java.util.PropertyPermission', 'java.rmi.server.randomIDs', 'read,write');

Call completed.

SQL> -- this one covers com.sun.jmx.{remote.*|snmp.*|trace*}
SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:java.util.PropertyPermission', 'com.sun.jmx.*', 'read,write');

Call completed.

SQL> -- this one covers com.sun.management.{jmxremote|jmxremote.*|agent.*|snmp.*|} and a few other
SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:java.util.PropertyPermission', 'com.sun.management.*', 'read,write');

Call completed.

SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:javax.management.MBeanPermission', '*', '*');

Call completed.

SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:java.lang.management.ManagementPermission', 'monitor', '');

Call completed.

SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:java.lang.management.ManagementPermission', 'control', '');

Call completed.

SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:javax.management.MBeanServerPermission', 'createMBeanServer', '');

Call completed.

SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:java.lang.RuntimePermission', 'setContextClassLoader', null);

Call completed.

SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:java.lang.RuntimePermission', 'accessClassInPackage.*', null);

Call completed.

SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:java.util.logging.LoggingPermission', 'control', '');

Call completed.

SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:java.net.SocketPermission', '*', 'accept,connect,listen,resolve');

Call completed.

SQL> call dbms_java.grant_permission('JMXSERVER', 'SYS:java.io.FilePermission', 'javavm/lib/management/*', 'read');

Call completed.

SQL> -- not redundant with the above. The /* syntax does not work for symlinks
SQL> call dbms_java.grant_permission( 'JMXSERVER', 'SYS:java.io.FilePermission', 'javavm/lib/management/jmxremote.access', 'read');

Call completed.

SQL> call dbms_java.grant_permission( 'JMXSERVER', 'SYS:java.io.FilePermission', 'javavm/lib/management/management.properties', 'read');

Call completed.

SQL> 
SQL> -- Permissions granted explicitly to SYS but not to JavaSysPriv
SQL> -- because they are regarded as particularly dangerous
SQL> call dbms_java.grant_permission('SYS', 'SYS:java.net.NetPermission', '*', null);

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:java.security.SecurityPermission', '*', null);

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:javax.net.ssl.SSLPermission', '*', null);

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:java.util.PropertyPermission', '*', 'write');

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:java.lang.reflect.ReflectPermission', '*', null);

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:java.lang.RuntimePermission', '*', null);

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:java.security.AllPermission', '*', null);

Call completed.

SQL> 
SQL> 
SQL> call dbms_java.grant_permission('SYS', 'SYS:java.lang.RuntimePermission', 'loadLibrary.xaNative', null);

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:java.lang.RuntimePermission', 'loadLibrary.corejava', null);

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:java.lang.RuntimePermission', 'loadLibrary.jox10oraawt', null);

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:java.lang.RuntimePermission', 'loadLibrary.oraioser', null);

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:java.lang.RuntimePermission', 'loadLibrary.corejava_d', null);

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:java.lang.RuntimePermission', 'loadLibrary.orajaas', null);

Call completed.

SQL> 
SQL> -- grant Permissions to JavaDebugPriv
SQL> call dbms_java.grant_permission('JAVADEBUGPRIV', 'SYS:oracle.aurora.security.JServerPermission', 'Debug', null);

Call completed.

SQL> GRANT DEBUG CONNECT SESSION TO JAVADEBUGPRIV;

Grant succeeded.

SQL> GRANT DEBUG ANY PROCEDURE TO JAVADEBUGPRIV;

Grant succeeded.

SQL> 
SQL> 
SQL> -- JServerPermission granted only to SYS, and not to JavaSysPriv
SQL> -- as these are not standard part of JDK policies.
SQL> 
SQL> call dbms_java.grant_permission('SYS', 'SYS:oracle.aurora.security.JServerPermission', '*', null);

Call completed.

SQL> 
SQL> call dbms_java.grant_permission('SYS', 'SYS:oracle.aurora.security.JServerPermission', 'LoadClassInPackage.java.*', null);

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:oracle.aurora.security.JServerPermission', 'LoadClassInPackage.oracle.aurora.*', null);

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:oracle.aurora.security.JServerPermission', 'LoadClassInPackage.oracle.jdbc.*', null);

Call completed.

SQL> 
SQL> --
SQL> 
SQL> -- We granted explicit loadLibrary permissions above,
SQL> -- JNI is not supported for general use therefore we take away the right to administer
SQL> -- loadLibrary from JAVA_ADMIN. So before anyone (even SYS or DBA) can
SQL> -- grant loadLibrary they are going to have to give back the explicit Permission to do
SQL> -- so
SQL> call dbms_java.restrict_permission('PUBLIC', 'SYS:java.lang.RuntimePermission', 'loadLibrary.*', null);

Call completed.

SQL> 
SQL> call dbms_java.restrict_permission('PUBLIC', 'SYS:oracle.aurora.rdbms.security.PolicyTablePermission', '0:java.lang.RuntimePermission#loadLibrary.*', null);

Call completed.

SQL> 
SQL> -- grant permissions to EjbClient
SQL> call dbms_java.grant_permission('EJBCLIENT', 'SYS:java.net.SocketPermission','*', 'connect,resolve');

Call completed.

SQL> call dbms_java.grant_permission( 'EJBCLIENT', 'SYS:java.lang.RuntimePermission', 'createClassLoader', '' );

Call completed.

SQL> call dbms_java.grant_permission( 'EJBCLIENT', 'SYS:java.lang.RuntimePermission', 'getClassLoader', '' );

Call completed.

SQL> 
SQL> -- grant permissions related to java.sql.SQLPermission.
SQL> -- this was added in 9.2, when we move to JDK 1.3
SQL> 
SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'java.sql.SQLPermission', '*');

Call completed.

SQL> call dbms_java.grant_permission('JAVASYSPRIV', 'SYS:java.sql.SQLPermission', 'setLog', null);

Call completed.

SQL> 
SQL> --- needed during the short regress for tkjvsrk( for rmi test)
SQL> --- In jdk1.4
SQL> call dbms_java.grant_permission('SYS','SYS:java.util.logging.LoggingPermission', 'control', '');

Call completed.

SQL> -- grant sys all Authentication permissions for JAAS
SQL> call dbms_java.grant_permission('SYS','SYS:javax.security.auth.AuthPermission', '*', '');

Call completed.

SQL> -- grant to SYS for javax.management.*
SQL> call dbms_java.grant_permission('SYS','SYS:javax.management.MBeanServerPermission','*','');

Call completed.

SQL> call dbms_java.grant_permission('SYS','SYS:javax.management.MBeanTrustPermission','*','');

Call completed.

SQL> call dbms_java.grant_permission('SYS','SYS:javax.management.ManagementPermission','*','');

Call completed.

SQL> call dbms_java.grant_permission('SYS','SYS:javax.management.MBeanPermission','*','');

Call completed.

SQL> --- grant to sys for kerberos usage
SQL> call dbms_java.grant_permission( 'SYS','SYS:javax.security.auth.kerberos.ServicePermission', '*', 'accept,initiate');

Call completed.

SQL> 
SQL> -- Actions related to HandlePermission
SQL> @@jvmsec7
SQL> 
SQL> -- actions related to HandlePermission
SQL> call dbms_java.grant_policy_permission('JAVA_ADMIN', 'SYS', 'oracle.aurora.rdbms.HandlePermission', '*');

Call completed.

SQL> call dbms_java.grant_permission('JAVA_DEPLOY', 'SYS:oracle.aurora.rdbms.HandlePermission', '*', '*');

Call completed.

SQL> call dbms_java.grant_permission('SYS', 'SYS:oracle.aurora.rdbms.HandlePermission', '*', '*');

Call completed.

SQL> 
SQL> -- Create the java$policy$shared$table table
SQL> @@jvmsec6
SQL> -- Create the table now to avoid creation of a lot of
SQL> -- unneccessary shared objects by the above grant_permissions,
SQL> -- and redundantly grant something to cause creation of a shared object.
SQL> call initjvmaux.create_if_not_present('
  2  create table java$policy$shared$table (version number)
  3  ');

create table java$policy$shared$table (version number)


Call completed.

SQL> 
SQL> call dbms_java.grant_permission('PUBLIC', 'SYS:oracle.aurora.security.JServerPermission', 'DUMMY', '');

Call completed.

SQL> call dbms_java.revoke_permission('PUBLIC', 'SYS:oracle.aurora.security.JServerPermission', 'DUMMY', '');

Call completed.

SQL> 
SQL> commit;

Commit complete.

SQL> 
SQL> 
SQL> -- set up trigger for dropping users
SQL> -- @@jvmsecdp
SQL> 
SQL> 
SQL> 
SQL> 
SQL> -- Aurora oracle.aurora.rdbms.Server lifecycle and state --
SQL> -- Put in the entries for Dynamic registration, by default.
SQL> -- Triggers to run startup and shutdown Java code
SQL> -- The configuration data for currently registered MTS listener endpoints
SQL> -- SQLJ initialization
SQL> -- XA JSP initialization
SQL> 
SQL> @@initjvm5
SQL> -- subscript for initjvm.sql and ilk
SQL> 
SQL> -- create USER|DBA|ALL_JAVA_* views
SQL> @@catjvm.sql
SQL> Rem
SQL> Rem $Header: javavm/install/catjvm.sql /st_javavm_11.2.0/2 2013/07/05 10:36:12 mjungerm Exp $
SQL> Rem
SQL> Rem catjvm.sql
SQL> Rem
SQL> Rem Copyright (c) 2001, 2013, Oracle and/or its affiliates.
SQL> Rem All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      catjvm.sql - <one-line expansion of the name>
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      <short description of component this file declares/defines>
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      create USER|DBA|ALL_JAVA_* views
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    rhlee       05/11/05 - rewrite view definitions to "encourage"
SQL> Rem                           fixed-table index-access path
SQL> Rem    xuhuali     10/24/01 - Merged xuhuali_create_java_views
SQL> Rem    xuhuali     10/24/01 - Created
SQL> Rem
SQL> 
SQL> remark
SQL> remark FAMILY "JAVA_CLASSES"
SQL> remark
SQL> 
SQL> create or replace view USER_JAVA_CLASSES
  2  (NAME, MAJOR, MINOR, KIND, ACCESSIBILITY,
  3         IS_INNER, IS_ABSTRACT, IS_FINAL, IS_DEBUG, SOURCE, SUPER, OUTER)
  4  as
  5  select /*+ ordered use_nl(o m)*/
  6         nvl(j.longdbcs, o.name), m.maj, m.min,
  7         decode(BITAND(m.acc, 512), 512, 'CLASS',
  8                                    0, 'INTERFACE'),
  9         decode(BITAND(m.acc, 1), 1, 'PUBLIC',
 10                                  0, NULL),
 11         decode(BITAND(m.acc, 131072), 131072, 'YES',
 12                                       0, 'NO'),
 13         decode(BITAND(m.acc, 1024), 1024, 'YES',
 14                                     0, 'NO'),
 15         decode(BITAND(m.acc, 16), 16, 'YES',
 16                                   0, 'NO'),
 17         decode(m.dbg, 1, 'YES',
 18                       0, 'NO'),
 19         m.src, m.spl, m.oln
 20  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmob m
 21  where o.obj# = m.obn
 22    and o.type# = 29
 23    and o.owner# = userenv('SCHEMAID')
 24    and j.short(+) = o.name
 25  /

View created.

SQL> comment on table USER_JAVA_CLASSES is
  2  'class level information of stored java class owned by the user'
  3  /

Comment created.

SQL> comment on column USER_JAVA_CLASSES.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_CLASSES.MAJOR is
  2  'the major version number of the java class as defined in JVM specification'
  3  /

Comment created.

SQL> comment on column USER_JAVA_CLASSES.MINOR is
  2  'the minor version number of the java class as defined in JVM specification'
  3  /

Comment created.

SQL> comment on column USER_JAVA_CLASSES.KIND is
  2  'is the stored object a java class or java interface?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_CLASSES.ACCESSIBILITY is
  2  'the accessiblity of the java class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_CLASSES.IS_INNER is
  2  'is this java class an inner class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_CLASSES.IS_ABSTRACT is
  2  'is this an abstract class?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_CLASSES.IS_FINAL is
  2  'is this an final class?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_CLASSES.IS_DEBUG is
  2  'does this class contain debug information?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_CLASSES.SOURCE is
  2  'source designation of the java class '
  3  /

Comment created.

SQL> comment on column USER_JAVA_CLASSES.SUPER is
  2  'super class of this java class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_CLASSES.OUTER is
  2  'outer class of this java class if this java class is an inner class'
  3  /

Comment created.

SQL> create or replace public synonym USER_JAVA_CLASSES for USER_JAVA_CLASSES
  2  /

Synonym created.

SQL> grant select on USER_JAVA_CLASSES to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view ALL_JAVA_CLASSES
  2  (OWNER, NAME, MAJOR, MINOR, KIND, ACCESSIBILITY, IS_INNER,
  3         IS_ABSTRACT, IS_FINAL, IS_DEBUG, SOURCE, SUPER, OUTER)
  4  as
  5  select /*+ ordered use_nl(o m)*/
  6         u.name, nvl(j.longdbcs, o.name), m.maj, m.min,
  7         decode(BITAND(m.acc, 512), 512, 'CLASS',
  8                                    0, 'INTERFACE'),
  9         decode(BITAND(m.acc, 1), 1, 'PUBLIC',
 10                                  0, NULL),
 11         decode(BITAND(m.acc, 131072), 131072, 'YES',
 12                                       0, 'NO'),
 13         decode(BITAND(m.acc, 1024), 1024, 'YES',
 14                                     0, 'NO'),
 15         decode(BITAND(m.acc, 16), 16, 'YES',
 16                                   0, 'NO'),
 17         decode(m.dbg, 1, 'YES',
 18                       0, 'NO'),
 19         m.src, m.spl, m.oln
 20  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmob m, sys.user$ u
 21  where o.obj# = m.obn
 22    and o.type# = 29
 23    and o.owner# = u.user#
 24    and j.short(+) = o.name
 25    and
 26    (
 27      o.owner# in (userenv('SCHEMAID'), 1 /* PUBLIC */)
 28      or
 29      (
 30        (
 31          (
 32            o.obj# in (select obj# from sys.objauth$
 33                       where grantee# in (select kzsrorol from x$kzsro)
 34                         and privilege#  = 12 /* EXECUTE */)
 35          )
 36          or
 37          exists
 38          (
 39            select null from sys.sysauth$
 40            where grantee# in (select kzsrorol from x$kzsro)
 41            and
 42            (
 43              (
 44                /* procedure */
 45                (
 46                  privilege# = -144 /* EXECUTE ANY PROCEDURE */
 47                  or
 48                  privilege# = -141 /* CREATE ANY PROCEDURE */
 49                )
 50              )
 51            )
 52          )
 53        )
 54      )
 55    )
 56  /

View created.

SQL> comment on table ALL_JAVA_CLASSES is
  2  'class level information of stored java class accessible to the user'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_CLASSES.OWNER is
  2  'owner of the java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_CLASSES.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_CLASSES.MAJOR is
  2  'the major version number of the java class as defined in JVM specification'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_CLASSES.MINOR is
  2  'the minor version number of the java class as defined in JVM specification'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_CLASSES.KIND is
  2  'is the stored object a java class or java interface?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_CLASSES.ACCESSIBILITY is
  2  'the accessiblity of the java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_CLASSES.IS_INNER is
  2  'is this java class an inner class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_CLASSES.IS_ABSTRACT is
  2  'is this an abstract class?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_CLASSES.IS_FINAL is
  2  'is this an final class?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_CLASSES.IS_DEBUG is
  2  'does this class contain debug information?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_CLASSES.SOURCE is
  2  'source designation of the java class '
  3  /

Comment created.

SQL> comment on column ALL_JAVA_CLASSES.SUPER is
  2  'super class of this java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_CLASSES.OUTER is
  2  'outer class of this java class if this java class is an inner class'
  3  /

Comment created.

SQL> create or replace public synonym ALL_JAVA_CLASSES for ALL_JAVA_CLASSES
  2  /

Synonym created.

SQL> grant select on ALL_JAVA_CLASSES to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view DBA_JAVA_CLASSES
  2  (OWNER,NAME, MAJOR, MINOR, KIND, ACCESSIBILITY, IS_INNER,
  3         IS_ABSTRACT, IS_FINAL, IS_DEBUG, SOURCE, SUPER, OUTER)
  4  as
  5  select /*+ ordered use_nl(o m) */
  6         u.name, nvl(j.longdbcs, o.name), m.maj, m.min,
  7         decode(BITAND(m.acc, 512), 512, 'CLASS',
  8                                    0, 'INTERFACE'),
  9         decode(BITAND(m.acc, 1), 1, 'PUBLIC',
 10                                  0, NULL),
 11         decode(BITAND(m.acc, 131072), 131072, 'YES',
 12                                       0, 'NO'),
 13         decode(BITAND(m.acc, 1024), 1024, 'YES',
 14                                     0, 'NO'),
 15         decode(BITAND(m.acc, 16), 16, 'YES',
 16                                   0, 'NO'),
 17         decode(m.dbg, 1, 'YES',
 18                       0, 'NO'),
 19         m.src, m.spl, m.oln
 20  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmob m, sys.user$ u
 21  where o.obj# = m.obn
 22    and o.type# = 29
 23    and o.owner# = u.user#
 24    and j.short(+) = o.name
 25  /

View created.

SQL> comment on table DBA_JAVA_CLASSES is
  2  'class level information of all stored java classes'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_CLASSES.OWNER is
  2  'owner of this java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_CLASSES.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_CLASSES.MAJOR is
  2  'the major version number of the java class as defined in JVM specification'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_CLASSES.MINOR is
  2  'the minor version number of the java class as defined in JVM specification'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_CLASSES.KIND is
  2  'is the stored object a java class or java interface?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_CLASSES.ACCESSIBILITY is
  2  'the accessiblity of the java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_CLASSES.IS_INNER is
  2  'is this java class an inner class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_CLASSES.IS_ABSTRACT is
  2  'is this an abstract class?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_CLASSES.IS_FINAL is
  2  'is this an final class?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_CLASSES.IS_DEBUG is
  2  'does this class contain debug information?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_CLASSES.SOURCE is
  2  'source designation of the java class '
  3  /

Comment created.

SQL> comment on column DBA_JAVA_CLASSES.SUPER is
  2  'super class of this java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_CLASSES.OUTER is
  2  'outer class of this java class if this java class is an inner class'
  3  /

Comment created.

SQL> create or replace public synonym DBA_JAVA_CLASSES for DBA_JAVA_CLASSES
  2  /

Synonym created.

SQL> grant select on DBA_JAVA_CLASSES to select_catalog_role
  2  /

Grant succeeded.

SQL> 
SQL> remark
SQL> remark FAMILY "JAVA_LAYOUTS
SQL> remark
SQL> 
SQL> create or replace view USER_JAVA_LAYOUTS
  2  (NAME, INTERFACES, INNER_CLASSES,
  3         FIELDS, STATIC_FIELDS,
  4         METHODS, STATIC_METHODS, NATIVE_METHODS)
  5  as
  6  select /*+ ordered use_nl(o m) */
  7                nvl(j.longdbcs, o.name), m.lic, m.lnc,
  8                m.lfc, m.lsf,
  9                m.lmc, m.lsm, m.jnc
 10  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmob m
 11  where o.obj# = m.obn
 12    and o.type# = 29
 13    and o.owner# = userenv('SCHEMAID')
 14    and j.short(+) = o.name
 15  /

View created.

SQL> comment on table USER_JAVA_LAYOUTS is
  2  'class layout information about stored java class owned by the user'
  3  /

Comment created.

SQL> comment on column USER_JAVA_LAYOUTS.NAME is
  2  'name of the stored java class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_LAYOUTS.INTERFACES is
  2  'how many interfaces does this class implement?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_LAYOUTS.INNER_CLASSES is
  2  'how many inner classes does this class contain?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_LAYOUTS.FIELDS is
  2  'how many locally declared fields does this class contain?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_LAYOUTS.STATIC_FIELDS is
  2  'how many locally declared static fields does this class contain?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_LAYOUTS.METHODS is
  2  'how many locally declared methods does this class contain?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_LAYOUTS.STATIC_METHODS is
  2  'how many locally declared static methods does this class contain?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_LAYOUTS.NATIVE_METHODS is
  2  'how many locally declared native methods does this class contain?'
  3  /

Comment created.

SQL> create or replace public synonym USER_JAVA_LAYOUTS for USER_JAVA_LAYOUTS
  2  /

Synonym created.

SQL> grant select on USER_JAVA_LAYOUTS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view ALL_JAVA_LAYOUTS
  2  (OWNER, NAME, INTERFACES, INNER_CLASSES,
  3         FIELDS, STATIC_FIELDS,
  4         METHODS, STATIC_METHODS, NATIVE_METHODS)
  5  as
  6  select /*+ ordered use_nl(o m) */
  7                u.name, nvl(j.longdbcs, o.name), m.lic, m.lnc,
  8                m.lfc, m.lsf,
  9                m.lmc, m.lsm, m.jnc
 10  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmob m, sys.user$ u
 11  where o.obj# = m.obn
 12    and o.type# = 29
 13    and o.owner# = u.user#
 14    and j.short(+) = o.name
 15    and
 16    (
 17      o.owner# in (userenv('SCHEMAID'), 1 /* PUBLIC */)
 18      or
 19      (
 20        (
 21          (
 22            o.obj# in (select obj# from sys.objauth$
 23                       where grantee# in (select kzsrorol from x$kzsro)
 24                         and privilege#  = 12 /* EXECUTE */)
 25          )
 26          or
 27          exists
 28          (
 29            select null from sys.sysauth$
 30            where grantee# in (select kzsrorol from x$kzsro)
 31            and
 32            (
 33              (
 34                /* procedure */
 35                (
 36                  privilege# = -144 /* EXECUTE ANY PROCEDURE */
 37                  or
 38                  privilege# = -141 /* CREATE ANY PROCEDURE */
 39                )
 40              )
 41            )
 42          )
 43        )
 44      )
 45    )
 46  /

View created.

SQL> comment on table ALL_JAVA_LAYOUTS is
  2  'class layout information about stored java class accessible to the user'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_LAYOUTS.OWNER is
  2  'owner of the java class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_LAYOUTS.NAME is
  2  'name of the stored java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_LAYOUTS.INTERFACES is
  2  'how many interfaces does this class implement?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_LAYOUTS.INNER_CLASSES is
  2  'how many inner classes does this class contain?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_LAYOUTS.FIELDS is
  2  'how many locally declared fields does this class contain?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_LAYOUTS.STATIC_FIELDS is
  2  'how many locally declared static fields does this class contain?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_LAYOUTS.METHODS is
  2  'how many locally declared methods does this class contain?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_LAYOUTS.STATIC_METHODS is
  2  'how many locally declared static methods does this class contain?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_LAYOUTS.NATIVE_METHODS is
  2  'how many locally declared native methods does this class contain?'
  3  /

Comment created.

SQL> create or replace public synonym ALL_JAVA_LAYOUTS for ALL_JAVA_LAYOUTS
  2  /

Synonym created.

SQL> grant select on ALL_JAVA_LAYOUTS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view DBA_JAVA_LAYOUTS
  2  (OWNER, NAME, INTERFACES, INNER_CLASSES,
  3         FIELDS, STATIC_FIELDS,
  4         METHODS, STATIC_METHODS, NATIVE_METHODS)
  5  as
  6  select /*+ ordered use_nl(o m) */
  7                u.name, nvl(j.longdbcs, o.name), m.lic, m.lnc,
  8                m.lfc, m.lsf,
  9                m.lmc, m.lsm, m.jnc
 10  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmob m, sys.user$ u
 11  where o.obj# = m.obn
 12    and o.type# = 29
 13    and o.owner# = u.user#
 14    and j.short(+) = o.name
 15  /

View created.

SQL> comment on table DBA_JAVA_LAYOUTS is
  2  'class layout information about stored java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_LAYOUTS.OWNER is
  2  'owner of this java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_LAYOUTS.NAME is
  2  'name of the stored java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_LAYOUTS.INTERFACES is
  2  'how many interfaces does this class implement?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_LAYOUTS.INNER_CLASSES is
  2  'how many inner classes does this class contain?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_LAYOUTS.FIELDS is
  2  'how many locally declared fields does this class contain?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_LAYOUTS.STATIC_FIELDS is
  2  'how many locally declared static fields does this class contain?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_LAYOUTS.METHODS is
  2  'how many locally declared methods does this class contain?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_LAYOUTS.STATIC_METHODS is
  2  'how many locally declared static methods does this class contain?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_LAYOUTS.NATIVE_METHODS is
  2  'how many locally declared native methods does this class contain?'
  3  /

Comment created.

SQL> create or replace public synonym DBA_JAVA_LAYOUTS for DBA_JAVA_LAYOUTS
  2  /

Synonym created.

SQL> grant select on DBA_JAVA_LAYOUTS to select_catalog_role
  2  /

Grant succeeded.

SQL> 
SQL> 
SQL> remark
SQL> remark FAMILY "JAVA_IMPLEMENTS"
SQL> remark
SQL> create or replace view USER_JAVA_IMPLEMENTS
  2  (NAME, INTERFACE_INDEX, INTERFACE_NAME)
  3  as
  4  select /*+ ordered use_nl(o m) */ nvl(j.longdbcs, o.name), m.ifx, m.iln
  5  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmif m
  6  where o.obj# = m.obn
  7    and o.type# = 29
  8    and o.owner# = userenv('SCHEMAID')
  9    and j.short(+) = o.name
 10  /

View created.

SQL> comment on table USER_JAVA_IMPLEMENTS is
  2  'interfaces implemented by the stored java class owned by user'
  3  /

Comment created.

SQL> comment on column USER_JAVA_IMPLEMENTS.NAME is
  2  'name of the stored java class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_IMPLEMENTS.INTERFACE_INDEX is
  2  'index of the interfaces implemented by the stored java class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_IMPLEMENTS.INTERFACE_NAME is
  2  'name of the interface identified by the INTERFACE_INDEX'
  3  /

Comment created.

SQL> create or replace public synonym USER_JAVA_IMPLEMENTS for USER_JAVA_IMPLEMENTS
  2  /

Synonym created.

SQL> grant select on USER_JAVA_IMPLEMENTS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view ALL_JAVA_IMPLEMENTS
  2  (OWNER, NAME, INTERFACE_INDEX, INTERFACE_NAME)
  3  as
  4  select /*+ ordered use_nl(o m) */
  5         u.name, nvl(j.longdbcs, o.name), m.ifx, m.iln
  6  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmif m, sys.user$ u
  7  where o.obj# = m.obn
  8    and o.type# = 29
  9    and o.owner# = u.user#
 10    and j.short(+) = o.name
 11    and
 12    (
 13      o.owner# in (userenv('SCHEMAID'), 1 /* PUBLIC */)
 14      or
 15      (
 16        (
 17          (
 18            o.obj# in (select obj# from sys.objauth$
 19                       where grantee# in (select kzsrorol from x$kzsro)
 20                         and privilege#  = 12 /* EXECUTE */)
 21          )
 22          or
 23          exists
 24          (
 25            select null from sys.sysauth$
 26            where grantee# in (select kzsrorol from x$kzsro)
 27            and
 28            (
 29              (
 30                /* procedure */
 31                (
 32                  privilege# = -144 /* EXECUTE ANY PROCEDURE */
 33                  or
 34                  privilege# = -141 /* CREATE ANY PROCEDURE */
 35                )
 36              )
 37            )
 38          )
 39        )
 40      )
 41    )
 42  /

View created.

SQL> comment on table ALL_JAVA_IMPLEMENTS is
  2  'interfaces implemented by the stored java class accessible to the user'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_IMPLEMENTS.OWNER is
  2  'owner of the java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_IMPLEMENTS.NAME is
  2  'name of the stored java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_IMPLEMENTS.INTERFACE_INDEX is
  2  'index of the interfaces implemented by the stored java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_IMPLEMENTS.INTERFACE_NAME is
  2  'name of the interface identified by the INTERFACE_INDEX'
  3  /

Comment created.

SQL> create or replace public synonym ALL_JAVA_IMPLEMENTS for ALL_JAVA_IMPLEMENTS
  2  /

Synonym created.

SQL> grant select on ALL_JAVA_IMPLEMENTS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view DBA_JAVA_IMPLEMENTS
  2  (OWNER, NAME, INTERFACE_INDEX, INTERFACE_NAME)
  3  as
  4  select /*+ ordered use_nl(o m) */
  5         u.name, nvl(j.longdbcs, o.name), m.ifx, m.iln
  6  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmif m, sys.user$ u
  7  where o.obj# = m.obn
  8    and o.type# = 29
  9    and o.owner# = u.user#
 10    and j.short(+) = o.name
 11  /

View created.

SQL> comment on table DBA_JAVA_IMPLEMENTS is
  2  'interfaces implemented by the stored java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_IMPLEMENTS.OWNER is
  2  'owner of the java stored class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_IMPLEMENTS.NAME is
  2  'name of the stored java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_IMPLEMENTS.INTERFACE_INDEX is
  2  'index of the interfaces implemented by the stored java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_IMPLEMENTS.INTERFACE_NAME is
  2  'name of the interface identified by the column INTERFACE_INDEX'
  3  /

Comment created.

SQL> create or replace public synonym DBA_JAVA_IMPLEMENTS for DBA_JAVA_IMPLEMENTS
  2  /

Synonym created.

SQL> grant select on DBA_JAVA_IMPLEMENTS to select_catalog_role
  2  /

Grant succeeded.

SQL> 
SQL> remark
SQL> remark FAMILY "JAVA_INNERS"
SQL> remark
SQL> remark TODO should add a field to show whether the inner class
SQL> remark is a member of the refering class? Some x$joxfm changes
SQL> remark are needed to make this possible.
SQL> 
SQL> create or replace view USER_JAVA_INNERS
  2  (NAME, INNER_INDEX, SIMPLE_NAME, FULL_NAME, ACCESSIBILITY,
  3   IS_STATIC, IS_FINAL, IS_ABSTRACT, IS_INTERFACE)
  4  as
  5  select /*+ ordered use_nl(o m) */
  6         nvl(j.longdbcs, o.name), m.nix, m.nsm, m.nln,
  7         decode(BITAND(m.oac, 7), 1, 'PUBLIC',
  8                                  2, 'PRIVATE',
  9                                  4, 'PROTECTED',
 10                                  NULL),
 11         decode(BITAND(m.acc, 8), 8, 'YES',
 12                                  0, 'NO'),
 13         decode(BITAND(m.acc, 16), 16, 'YES',
 14                                   0, 'NO'),
 15         decode(BITAND(m.acc, 1024), 1024, 'YES',
 16                                     0, 'NO'),
 17         decode(BITAND(m.acc, 512), 512, 'YES',
 18                                    0, 'NO')
 19  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmic m
 20  where o.obj# = m.obn
 21    and o.type# = 29
 22    and o.owner# = userenv('SCHEMAID')
 23    and j.short(+) = o.name
 24  /

View created.

SQL> comment on table USER_JAVA_INNERS is
  2  'list of inner classes refered by the stored java class owned by user'
  3  /

Comment created.

SQL> comment on column USER_JAVA_INNERS.NAME is
  2  'name of the stored java class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_INNERS.INNER_INDEX is
  2  'index of the refered inner class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_INNERS.SIMPLE_NAME is
  2  'simple name of the refered inner class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_INNERS.FULL_NAME is
  2  'full name of the refered inner class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_INNERS.IS_STATIC is
  2  'is the refered inner class declared static in the sorce file'
  3  /

Comment created.

SQL> comment on column USER_JAVA_INNERS.IS_FINAL is
  2  'is the refered inner class declared final in the sorce file'
  3  /

Comment created.

SQL> comment on column USER_JAVA_INNERS.IS_ABSTRACT is
  2  'is the refered inner class declared abstract in the sorce file'
  3  /

Comment created.

SQL> comment on column USER_JAVA_INNERS.IS_INTERFACE is
  2  'is the refered inner class declared interface in the sorce file'
  3  /

Comment created.

SQL> create or replace public synonym USER_JAVA_INNERS for USER_JAVA_INNERS
  2  /

Synonym created.

SQL> grant select on USER_JAVA_INNERS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view ALL_JAVA_INNERS
  2  (OWNER, NAME, INNER_INDEX, SIMPLE_NAME, FULL_NAME, ACCESSIBILITY,
  3   IS_STATIC, IS_FINAL, IS_ABSTRACT, IS_INTERFACE)
  4  as
  5  select /*+ ordered use_nl(o m) */
  6         u.name, nvl(j.longdbcs, o.name) , m.nix, m.nsm, m.nln,
  7         decode(BITAND(m.oac, 7), 1, 'PUBLIC',
  8                                  2, 'PRIVATE',
  9                                  4, 'PROTECTED',
 10                                  NULL),
 11         decode(BITAND(m.acc, 8), 8, 'YES',
 12                                  0, 'NO'),
 13         decode(BITAND(m.acc, 16), 16, 'YES',
 14                                   0, 'NO'),
 15         decode(BITAND(m.acc, 1024), 1024, 'YES',
 16                                     0, 'NO'),
 17         decode(BITAND(m.acc, 512), 512, 'YES',
 18                                    0, 'NO')
 19  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmic m, sys.user$ u
 20  where o.obj# = m.obn
 21    and o.type# = 29
 22    and o.owner# = u.user#
 23    and j.short(+) = o.name
 24    and
 25    (
 26      o.owner# in (userenv('SCHEMAID'), 1 /* PUBLIC */)
 27      or
 28      (
 29        (
 30          (
 31            o.obj# in (select obj# from sys.objauth$
 32                       where grantee# in (select kzsrorol from x$kzsro)
 33                         and privilege#  = 12 /* EXECUTE */)
 34          )
 35          or
 36          exists
 37          (
 38            select null from sys.sysauth$
 39            where grantee# in (select kzsrorol from x$kzsro)
 40            and
 41            (
 42              (
 43                /* procedure */
 44                (
 45                  privilege# = -144 /* EXECUTE ANY PROCEDURE */
 46                  or
 47                  privilege# = -141 /* CREATE ANY PROCEDURE */
 48                )
 49              )
 50            )
 51          )
 52        )
 53      )
 54    )
 55  /

View created.

SQL> comment on table ALL_JAVA_INNERS is
  2  'list of inner classes refered by the stored java class accessible to user'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_INNERS.OWNER is
  2  'owner of the stored java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_INNERS.NAME is
  2  'name of the stored java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_INNERS.INNER_INDEX is
  2  'index of the refered inner class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_INNERS.SIMPLE_NAME is
  2  'simple name of the refered inner class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_INNERS.FULL_NAME is
  2  'full name of the refered inner class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_INNERS.IS_STATIC is
  2  'is the refered inner class declared static in the sorce file'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_INNERS.IS_FINAL is
  2  'is the refered inner class declared final in the sorce file'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_INNERS.IS_ABSTRACT is
  2  'is the refered inner class declared abstract in the sorce file'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_INNERS.IS_INTERFACE is
  2  'is the refered inner class declared interface in the sorce file'
  3  /

Comment created.

SQL> create or replace public synonym ALL_JAVA_INNERS for ALL_JAVA_INNERS
  2  /

Synonym created.

SQL> grant select on ALL_JAVA_INNERS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view DBA_JAVA_INNERS
  2  (OWNER, NAME, INNER_INDEX, SIMPLE_NAME, FULL_NAME, ACCESSIBILITY,
  3   IS_STATIC, IS_FINAL, IS_ABSTRACT, IS_INTERFACE)
  4  as
  5  select /*+ ordered use_nl(o m) */
  6         u.name, nvl(j.longdbcs, o.name), m.nix, m.nsm, m.nln,
  7         decode(BITAND(m.oac, 7), 1, 'PUBLIC',
  8                                  2, 'PRIVATE',
  9                                  4, 'PROTECTED',
 10                                  NULL),
 11         decode(BITAND(m.acc, 8), 8, 'YES',
 12                                  0, 'NO'),
 13         decode(BITAND(m.acc, 16), 16, 'YES',
 14                                   0, 'NO'),
 15         decode(BITAND(m.acc, 1024), 1024, 'YES',
 16                                     0, 'NO'),
 17         decode(BITAND(m.acc, 512), 512, 'YES',
 18                                    0, 'NO')
 19  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmic m, sys.user$ u
 20  where o.obj# = m.obn
 21    and o.type# = 29
 22    and o.owner# = u.user#
 23    and j.short(+) = o.name
 24  /

View created.

SQL> comment on table DBA_JAVA_INNERS is
  2  'list of inner classes refered by the stored java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_INNERS.OWNER is
  2  'owner of the stored java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_INNERS.NAME is
  2  'name of the stored java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_INNERS.INNER_INDEX is
  2  'index of the refered inner class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_INNERS.SIMPLE_NAME is
  2  'simple name of the refered inner class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_INNERS.FULL_NAME is
  2  'full name of the refered inner class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_INNERS.IS_STATIC is
  2  'is the refered inner class declared static in the sorce file'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_INNERS.IS_FINAL is
  2  'is the refered inner class declared final in the sorce file'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_INNERS.IS_ABSTRACT is
  2  'is the refered inner class declared abstract in the sorce file'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_INNERS.IS_INTERFACE is
  2  'is the refered inner class declared interface in the sorce file'
  3  /

Comment created.

SQL> create or replace public synonym DBA_JAVA_INNERS for DBA_JAVA_INNERS
  2  /

Synonym created.

SQL> grant select on DBA_JAVA_INNERS to select_catalog_role
  2  /

Grant succeeded.

SQL> 
SQL> 
SQL> remark
SQL> remark FAMILY "JAVA_FIELDS"
SQL> remark
SQL> 
SQL> create or replace view USER_JAVA_FIELDS
  2  (NAME, FIELD_INDEX, FIELD_NAME, ACCESSIBILITY,
  3         IS_STATIC, IS_FINAL, IS_VOLATILE, IS_TRANSIENT,
  4         ARRAY_DEPTH, BASE_TYPE, FIELD_CLASS)
  5  as
  6  select /*+ ordered use_nl(o m) */ nvl(j.longdbcs, o.name), m.fix, m.fnm,
  7         decode(BITAND(m.fac, 7), 1, 'PUBLIC',
  8                                  2, 'PRIVATE',
  9                                  4, 'PROTECTED',
 10                                  NULL),
 11         decode(BITAND(m.fac, 8), 8, 'YES',
 12                                  0, 'NO'),
 13         decode(BITAND(m.fac, 16), 16, 'YES',
 14                                   0, 'NO'),
 15         decode(BITAND(m.fac, 64), 64, 'YES',
 16                                   0, 'NO'),
 17         decode(BITAND(m.fac, 128), 128, 'YES',
 18                                    0, 'NO'),
 19         m.fad,
 20         decode(m.fbt, 10, 'int',
 21                       11, 'long',
 22                       6, 'float',
 23                       7, 'double',
 24                       4, 'boolean',
 25                       8, 'byte',
 26                       5, 'char',
 27                       9, 'short',
 28                       2, 'class',
 29                       NULL),
 30         m.fln
 31  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmfd m
 32  where o.obj# = m.obn
 33    and o.type# = 29
 34    and o.owner# = userenv('SCHEMAID')
 35    and j.short(+) = o.name
 36  /

View created.

SQL> comment on table USER_JAVA_FIELDS is
  2  'field information of stored java class owned by the user'
  3  /

Comment created.

SQL> comment on column USER_JAVA_FIELDS.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_FIELDS.FIELD_INDEX is
  2  'the index of the field'
  3  /

Comment created.

SQL> comment on column USER_JAVA_FIELDS.FIELD_NAME is
  2  'the name of the field at FIELD_INDEX'
  3  /

Comment created.

SQL> comment on column USER_JAVA_FIELDS.ACCESSIBILITY is
  2  'the accessiblity of the field, public/private/protected/null(i.e. package)'
  3  /

Comment created.

SQL> comment on column USER_JAVA_FIELDS.IS_STATIC is
  2  'is the field a static field?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_FIELDS.IS_FINAL is
  2  'is the field a final field?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_FIELDS.IS_VOLATILE is
  2  'is the field volotile?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_FIELDS.IS_TRANSIENT is
  2  'is the field transient?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_FIELDS.ARRAY_DEPTH is
  2  'array depth of the type of the field'
  3  /

Comment created.

SQL> comment on column USER_JAVA_FIELDS.BASE_TYPE is
  2  'base type of the type of the field'
  3  /

Comment created.

SQL> comment on column USER_JAVA_FIELDS.FIELD_CLASS is
  2  'if base_type is class, this gives the actual class name of the base object'
  3  /

Comment created.

SQL> create or replace public synonym USER_JAVA_FIELDS for USER_JAVA_FIELDS
  2  /

Synonym created.

SQL> grant select on USER_JAVA_FIELDS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view ALL_JAVA_FIELDS
  2  (OWNER, NAME, FIELD_INDEX, FIELD_NAME, ACCESSIBILITY,
  3         IS_STATIC, IS_FINAL, IS_VOLATILE, IS_TRANSIENT,
  4         ARRAY_DEPTH, BASE_TYPE, FIELD_CLASS)
  5  as
  6  select /*+ ordered use_nl(o m) */ u.name, nvl(j.longdbcs, o.name), m.fix, m.fnm,
  7         decode(BITAND(m.fac, 7), 1, 'PUBLIC',
  8                                  2, 'PRIVATE',
  9                                  4, 'PROTECTED',
 10                                  NULL),
 11         decode(BITAND(m.fac, 8), 8, 'YES',
 12                                  0, 'NO'),
 13         decode(BITAND(m.fac, 16), 16, 'YES',
 14                                   0, 'NO'),
 15         decode(BITAND(m.fac, 64), 64, 'YES',
 16                                   0, 'NO'),
 17         decode(BITAND(m.fac, 128), 128, 'YES',
 18                                    0, 'NO'),
 19         m.fad,
 20         decode(m.fbt, 10, 'int',
 21                       11, 'long',
 22                       6, 'float',
 23                       7, 'double',
 24                       4, 'boolean',
 25                       8, 'byte',
 26                       5, 'char',
 27                       9, 'short',
 28                       2, 'class',
 29                       NULL),
 30         m.fln
 31  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmfd m, sys.user$ u
 32  where o.obj# = m.obn
 33    and o.type# = 29
 34    and o.owner# = u.user#
 35    and j.short(+) = o.name
 36    and
 37    (
 38      o.owner# in (userenv('SCHEMAID'), 1 /* PUBLIC */)
 39      or
 40      (
 41        (
 42          (
 43            o.obj# in (select obj# from sys.objauth$
 44                       where grantee# in (select kzsrorol from x$kzsro)
 45                         and privilege#  = 12 /* EXECUTE */)
 46          )
 47          or
 48          exists
 49          (
 50            select null from sys.sysauth$
 51            where grantee# in (select kzsrorol from x$kzsro)
 52            and
 53            (
 54              (
 55                /* procedure */
 56                (
 57                  privilege# = -144 /* EXECUTE ANY PROCEDURE */
 58                  or
 59                  privilege# = -141 /* CREATE ANY PROCEDURE */
 60                )
 61              )
 62            )
 63          )
 64        )
 65      )
 66    )
 67  /

View created.

SQL> comment on table ALL_JAVA_FIELDS is
  2  'field information of stored java class accessible to user'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_FIELDS.OWNER is
  2  'owner of the stored java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_FIELDS.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_FIELDS.FIELD_INDEX is
  2  'the index of the field'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_FIELDS.FIELD_NAME is
  2  'the name of the field at FIELD_INDEX'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_FIELDS.ACCESSIBILITY is
  2  'the accessiblity of the field, public/private/protected/null(i.e. package)'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_FIELDS.IS_STATIC is
  2  'is the field a static field?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_FIELDS.IS_FINAL is
  2  'is the field a final field?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_FIELDS.IS_VOLATILE is
  2  'is the field volotile?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_FIELDS.IS_TRANSIENT is
  2  'is the field transient?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_FIELDS.ARRAY_DEPTH is
  2  'array depth of the type of the field'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_FIELDS.BASE_TYPE is
  2  'base type of the type of the field'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_FIELDS.FIELD_CLASS is
  2  'if base_type is class, this gives the actual class name of the base object'
  3  /

Comment created.

SQL> create or replace public synonym ALL_JAVA_FIELDS for ALL_JAVA_FIELDS
  2  /

Synonym created.

SQL> grant select on ALL_JAVA_FIELDS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view DBA_JAVA_FIELDS
  2  (OWNER, NAME, FIELD_INDEX, FIELD_NAME, ACCESSIBILITY,
  3         IS_STATIC, IS_FINAL, IS_VOLATILE, IS_TRANSIENT,
  4         ARRAY_DEPTH, BASE_TYPE, FIELD_CLASS)
  5  as
  6  select /*+ ordered use_nl(o m) */ u.name, nvl(j.longdbcs, o.name), m.fix, m.fnm,
  7         decode(BITAND(m.fac, 7), 1, 'PUBLIC',
  8                                  2, 'PRIVATE',
  9                                  4, 'PROTECTED',
 10                                  NULL),
 11         decode(BITAND(m.fac, 8), 8, 'YES',
 12                                  0, 'NO'),
 13         decode(BITAND(m.fac, 16), 16, 'YES',
 14                                   0, 'NO'),
 15         decode(BITAND(m.fac, 64), 64, 'YES',
 16                                   0, 'NO'),
 17         decode(BITAND(m.fac, 128), 128, 'YES',
 18                                    0, 'NO'),
 19         m.fad,
 20         decode(m.fbt, 10, 'int',
 21                       11, 'long',
 22                       6, 'float',
 23                       7, 'double',
 24                       4, 'boolean',
 25                       8, 'byte',
 26                       5, 'char',
 27                       9, 'short',
 28                       2, 'class',
 29                       NULL),
 30         m.fln
 31  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmfd m, sys.user$ u
 32  where o.obj# = m.obn
 33    and o.type# = 29
 34    and o.owner# = u.user#
 35    and j.short(+) = o.name
 36  /

View created.

SQL> comment on table DBA_JAVA_FIELDS is
  2  'field information of all stored java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_FIELDS.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_FIELDS.FIELD_INDEX is
  2  'the index of the field'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_FIELDS.FIELD_NAME is
  2  'the name of the field at FIELD_INDEX'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_FIELDS.ACCESSIBILITY is
  2  'the accessiblity of the field, public/private/protected/null(i.e. package)'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_FIELDS.IS_STATIC is
  2  'is the field a static field?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_FIELDS.IS_FINAL is
  2  'is the field a final field?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_FIELDS.IS_VOLATILE is
  2  'is the field volotile?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_FIELDS.IS_TRANSIENT is
  2  'is the field transient?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_FIELDS.ARRAY_DEPTH is
  2  'array depth of the type of the field'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_FIELDS.BASE_TYPE is
  2  'base type of the type of the field'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_FIELDS.FIELD_CLASS is
  2  'if base_type is class, this gives the actual class name of the base object'
  3  /

Comment created.

SQL> create or replace public synonym DBA_JAVA_FIELDS for DBA_JAVA_FIELDS
  2  /

Synonym created.

SQL> grant select on DBA_JAVA_FIELDS to select_catalog_role
  2  /

Grant succeeded.

SQL> 
SQL> 
SQL> remark
SQL> remark FAMILY "JAVA_METHODS"
SQL> remark
SQL> 
SQL> create or replace view USER_JAVA_METHODS
  2  (NAME, METHOD_INDEX, METHOD_NAME, ACCESSIBILITY,
  3         IS_STATIC, IS_FINAL, IS_SYNCHRONIZED,
  4         IS_NATIVE, IS_ABSTRACT, IS_STRICT,
  5         ARGUMENTS, THROWS,
  6         ARRAY_DEPTH, BASE_TYPE, RETURN_CLASS, IS_COMPILED)
  7  as
  8  select /*+ ordered use_nl(o m) */
  9         nvl(j.longdbcs, o.name), m.mix, m.mnm,
 10         decode(BITAND(m.mac, 7), 1, 'PUBLIC',
 11                                  2, 'PRIVATE',
 12                                  4, 'PROTECTED',
 13                                  NULL),
 14         decode(BITAND(m.mac, 8), 8, 'YES',
 15                                  0, 'NO'),
 16         decode(BITAND(m.mac, 16), 16, 'YES',
 17                                   0, 'NO'),
 18         decode(BITAND(m.mac, 32), 32, 'YES',
 19                                   0, 'NO'),
 20         decode(BITAND(m.mac, 256), 256, 'YES',
 21                                    0, 'NO'),
 22         decode(BITAND(m.mac, 1024), 1024, 'YES',
 23                                     0, 'NO'),
 24         decode(BITAND(m.mac, 2048), 2048, 'YES',
 25                                     0, 'NO'),
 26         m.agc, m.exc, m.rad,
 27         decode(m.rbt, 10, 'int',
 28                       11, 'long',
 29                       6,  'float',
 30                       7,  'double',
 31                       4,  'boolean',
 32                       8,  'byte',
 33                       5,  'char',
 34                       9,  'short',
 35                       2,  'class',
 36                       12, 'void',
 37                       NULL),
 38         m.rln,
 39         nvl((select 'YES' from sys.java$mc$ j where
 40                 j.method#=m.mmt and
 41                 j.obj#=m.obn and
 42                 rownum=1), 'NO')
 43  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmmd m
 44  where o.obj# = m.obn
 45    and o.type# = 29
 46    and o.owner# = userenv('SCHEMAID')
 47    and j.short(+) = o.name
 48  /

View created.

SQL> comment on table USER_JAVA_METHODS is
  2  'method information of stored java class owned by the user'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.METHOD_INDEX is
  2  'the index of the method'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.METHOD_NAME is
  2  'the name of the field at METHOD_INDEX'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.ACCESSIBILITY is
  2  'the accessiblity of the method, public/private/protected/null(i.e. package)'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.IS_STATIC is
  2  'is the method a static method?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.IS_FINAL is
  2  'is the method a final method?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.IS_SYNCHRONIZED is
  2  'is the method a synchronized method?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.IS_NATIVE is
  2  'is the method a native method?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.IS_ABSTRACT is
  2  'is the method an abstract method?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.IS_STRICT is
  2  'is the method a strict method?'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.ARGUMENTS is
  2  'number of arguments of the method'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.THROWS is
  2  'number of exceptions thrown by the method'
  3  /

Comment created.

SQL> 
SQL> comment on column USER_JAVA_METHODS.ARRAY_DEPTH is
  2  'array depth of the return type of the method'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.BASE_TYPE is
  2  'base type of the return type of the field'
  3  /

Comment created.

SQL> comment on column USER_JAVA_METHODS.RETURN_CLASS is
  2  'if base_type is class, this gives the actual class name of the return value'
  3  /

Comment created.

SQL> create or replace public synonym USER_JAVA_METHODS for USER_JAVA_METHODS
  2  /

Synonym created.

SQL> grant select on USER_JAVA_METHODS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view ALL_JAVA_METHODS
  2  (OWNER, NAME, METHOD_INDEX, METHOD_NAME, ACCESSIBILITY,
  3         IS_STATIC, IS_FINAL, IS_SYNCHRONIZED,
  4         IS_NATIVE, IS_ABSTRACT, IS_STRICT,
  5         ARGUMENTS, THROWS,
  6         ARRAY_DEPTH, BASE_TYPE, RETURN_CLASS, IS_COMPILED)
  7  as
  8  select /*+ ordered use_nl(o m) */ u.name, nvl(j.longdbcs, o.name), m.mix, m.mnm,
  9         decode(BITAND(m.mac, 7), 1, 'PUBLIC',
 10                                  2, 'PRIVATE',
 11                                  4, 'PROTECTED',
 12                                  NULL),
 13         decode(BITAND(m.mac, 8), 8, 'YES',
 14                                  0, 'NO'),
 15         decode(BITAND(m.mac, 16), 16, 'YES',
 16                                   0, 'NO'),
 17         decode(BITAND(m.mac, 32), 32, 'YES',
 18                                   0, 'NO'),
 19         decode(BITAND(m.mac, 256), 256, 'YES',
 20                                    0, 'NO'),
 21         decode(BITAND(m.mac, 1024), 1024, 'YES',
 22                                     0, 'NO'),
 23         decode(BITAND(m.mac, 2048), 2048, 'YES',
 24                                     0, 'NO'),
 25         m.agc, m.exc, m.rad,
 26         decode(m.rbt, 10, 'int',
 27                       11, 'long',
 28                       6,  'float',
 29                       7,  'double',
 30                       4,  'boolean',
 31                       8,  'byte',
 32                       5,  'char',
 33                       9,  'short',
 34                       2,  'class',
 35                       12, 'void',
 36                       NULL),
 37         m.rln,
 38         nvl((select 'YES' from sys.java$mc$ j where
 39                 j.method#=m.mmt and
 40                 j.obj#=m.obn and
 41                 rownum=1), 'NO')
 42  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmmd m, sys.user$ u
 43  where o.obj# = m.obn
 44    and o.type# = 29
 45    and o.owner# = u.user#
 46    and j.short(+) = o.name
 47    and
 48    (
 49      o.owner# in (userenv('SCHEMAID'), 1 /* PUBLIC */)
 50      or
 51      (
 52        (
 53          (
 54            o.obj# in (select obj# from sys.objauth$
 55                       where grantee# in (select kzsrorol from x$kzsro)
 56                         and privilege#  = 12 /* EXECUTE */)
 57          )
 58          or
 59          exists
 60          (
 61            select null from sys.sysauth$
 62            where grantee# in (select kzsrorol from x$kzsro)
 63            and
 64            (
 65              (
 66                /* procedure */
 67                (
 68                  privilege# = -144 /* EXECUTE ANY PROCEDURE */
 69                  or
 70                  privilege# = -141 /* CREATE ANY PROCEDURE */
 71                )
 72              )
 73            )
 74          )
 75        )
 76      )
 77    )
 78  /

View created.

SQL> comment on table ALL_JAVA_METHODS is
  2  'method information of stored java class accessible to user'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.OWNER is
  2  'owner of the stored java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.METHOD_INDEX is
  2  'the index of the method'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.METHOD_NAME is
  2  'the name of the field at METHOD_INDEX'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.ACCESSIBILITY is
  2  'the accessiblity of the method, public/private/protected/null(i.e. package)'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.IS_STATIC is
  2  'is the method a static method?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.IS_FINAL is
  2  'is the method a final method?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.IS_SYNCHRONIZED is
  2  'is the method a synchronized method?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.IS_NATIVE is
  2  'is the method a native method?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.IS_ABSTRACT is
  2  'is the method an abstract method?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.IS_STRICT is
  2  'is the method a strict method?'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.ARGUMENTS is
  2  'number of arguments of the method'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.THROWS is
  2  'number of exceptions thrown by the method'
  3  /

Comment created.

SQL> 
SQL> comment on column ALL_JAVA_METHODS.ARRAY_DEPTH is
  2  'array depth of the return type of the method'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.BASE_TYPE is
  2  'base type of the return type of the field'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_METHODS.RETURN_CLASS is
  2  'if base_type is class, this gives the actual class name of the return value'
  3  /

Comment created.

SQL> create or replace public synonym ALL_JAVA_METHODS for ALL_JAVA_METHODS
  2  /

Synonym created.

SQL> grant select on ALL_JAVA_METHODS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view DBA_JAVA_METHODS
  2  (OWNER, NAME, METHOD_INDEX, METHOD_NAME, ACCESSIBILITY,
  3         IS_STATIC, IS_FINAL, IS_SYNCHRONIZED,
  4         IS_NATIVE, IS_ABSTRACT, IS_STRICT,
  5         ARGUMENTS, THROWS,
  6         ARRAY_DEPTH, BASE_TYPE, RETURN_CLASS, IS_COMPILED)
  7  as
  8  select /*+ ordered use_nl(o m) */ u.name, nvl(j.longdbcs, o.name), m.mix, m.mnm,
  9         decode(BITAND(m.mac, 7), 1, 'PUBLIC',
 10                                  2, 'PRIVATE',
 11                                  4, 'PROTECTED',
 12                                  NULL),
 13         decode(BITAND(m.mac, 8), 8, 'YES',
 14                                  0, 'NO'),
 15         decode(BITAND(m.mac, 16), 16, 'YES',
 16                                   0, 'NO'),
 17         decode(BITAND(m.mac, 32), 32, 'YES',
 18                                   0, 'NO'),
 19         decode(BITAND(m.mac, 256), 256, 'YES',
 20                                    0, 'NO'),
 21         decode(BITAND(m.mac, 1024), 1024, 'YES',
 22                                     0, 'NO'),
 23         decode(BITAND(m.mac, 2048), 2048, 'YES',
 24                                     0, 'NO'),
 25         m.agc, m.exc, m.rad,
 26         decode(m.rbt, 10, 'int',
 27                       11, 'long',
 28                       6,  'float',
 29                       7,  'double',
 30                       4,  'boolean',
 31                       8,  'byte',
 32                       5,  'char',
 33                       9,  'short',
 34                       2,  'class',
 35                       12, 'void',
 36                       NULL),
 37         m.rln,
 38         nvl((select 'YES' from sys.java$mc$ j where
 39                 j.method#=m.mmt and
 40                 j.obj#=m.obn and
 41                 rownum=1), 'NO')
 42  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmmd m, sys.user$ u
 43  where o.obj# = m.obn
 44    and o.type# = 29
 45    and o.owner# = u.user#
 46    and j.short(+) = o.name
 47  /

View created.

SQL> comment on table DBA_JAVA_METHODS is
  2  'method information of all stored java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.OWNER is
  2  'owner of the java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.METHOD_INDEX is
  2  'the index of the method'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.METHOD_NAME is
  2  'the name of the field at METHOD_INDEX'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.ACCESSIBILITY is
  2  'the accessiblity of the method, public/private/protected/null(i.e. package)'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.IS_STATIC is
  2  'is the method a static method?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.IS_FINAL is
  2  'is the method a final method?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.IS_SYNCHRONIZED is
  2  'is the method a synchronized method?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.IS_NATIVE is
  2  'is the method a native method?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.IS_ABSTRACT is
  2  'is the method an abstract method?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.IS_STRICT is
  2  'is the method a strict method?'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.ARGUMENTS is
  2  'number of arguments of the method'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.THROWS is
  2  'number of exceptions thrown by the method'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.ARRAY_DEPTH is
  2  'array depth of the return type of the method'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.BASE_TYPE is
  2  'base type of the return type of the field'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_METHODS.RETURN_CLASS is
  2  'if base_type is class, this gives the actual class name of the return value'
  3  /

Comment created.

SQL> create or replace public synonym DBA_JAVA_METHODS for DBA_JAVA_METHODS
  2  /

Synonym created.

SQL> grant select on DBA_JAVA_METHODS to select_catalog_role
  2  /

Grant succeeded.

SQL> 
SQL> remark
SQL> remark FAMILY "JAVA_ARGUMENTS"
SQL> remark
SQL> 
SQL> create or replace view USER_JAVA_ARGUMENTS
  2  (NAME, METHOD_INDEX, METHOD_NAME, ARGUMENT_POSITION,
  3         ARRAY_DEPTH, BASE_TYPE, ARGUMENT_CLASS)
  4  as
  5  select /*+ ordered use_nl(o mmd) */ nvl(j.longdbcs, o.name), mmd.mix, mmd.mnm, mag.aix,
  6         mag.aad,
  7         decode(mag.abt, 10, 'int',
  8                       11, 'long',
  9                       6, 'float',
 10                       7, 'double',
 11                       4, 'boolean',
 12                       8, 'byte',
 13                       5, 'char',
 14                       9, 'short',
 15                       2, 'class',
 16                       NULL),
 17         mag.aln
 18  from sys.javasnm$ j, sys.obj$ o, sys.x$joxfm mmd, sys.x$joxmag mag
 19  where o.obj# = mmd.obn
 20    and o.type# = 29
 21    and o.owner# = userenv('SCHEMAID')
 22    and j.short(+) = o.name
 23    and mmd.mix = mag.mix
 24    and mmd.obn = mag.obn;

View created.

SQL> /

View created.

SQL> comment on table USER_JAVA_ARGUMENTS is
  2  'argument information of stored java class owned by the user'
  3  /

Comment created.

SQL> comment on column USER_JAVA_ARGUMENTS.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_ARGUMENTS.METHOD_INDEX is
  2  'the index of hosting method of the argument'
  3  /

Comment created.

SQL> comment on column USER_JAVA_ARGUMENTS.METHOD_NAME is
  2  'the name of hosting method of the argument'
  3  /

Comment created.

SQL> comment on column USER_JAVA_ARGUMENTS.ARGUMENT_POSITION is
  2  'the position of the argument, starting from 0'
  3  /

Comment created.

SQL> comment on column USER_JAVA_ARGUMENTS.ARRAY_DEPTH is
  2  'array depth of the type of the arguement'
  3  /

Comment created.

SQL> comment on column USER_JAVA_ARGUMENTS.BASE_TYPE is
  2  'base type of the type of the argument'
  3  /

Comment created.

SQL> comment on column USER_JAVA_ARGUMENTS.ARGUMENT_CLASS is
  2  'if base_type is class, this gives the actual class name of the argument'
  3  /

Comment created.

SQL> create or replace public synonym USER_JAVA_ARGUMENTS for USER_JAVA_ARGUMENTS
  2  /

Synonym created.

SQL> grant select on USER_JAVA_ARGUMENTS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view ALL_JAVA_ARGUMENTS
  2  (OWNER, NAME, METHOD_INDEX, METHOD_NAME, ARGUMENT_POSITION,
  3         ARRAY_DEPTH, BASE_TYPE, ARGUMENT_CLASS)
  4  as
  5  select /*+ ordered use_nl(o mmd) */ u.name, nvl(j.longdbcs, o.name), mmd.mix, mmd.mnm, mag.aix,
  6         mag.aad,
  7         decode(mag.abt, 10, 'int',
  8                       11, 'long',
  9                       6, 'float',
 10                       7, 'double',
 11                       4, 'boolean',
 12                       8, 'byte',
 13                       5, 'char',
 14                       9, 'short',
 15                       2, 'class',
 16                       NULL),
 17         mag.aln
 18  from sys.javasnm$ j, sys.obj$ o, sys.x$joxfm mmd, sys.x$joxmag mag, sys.user$ u
 19  where o.obj# = mmd.obn
 20    and o.type# = 29
 21    and o.owner# = u.user#
 22    and j.short(+) = o.name
 23    and mmd.mix = mag.mix
 24    and mmd.obn = mag.obn
 25    and
 26    (
 27      o.owner# in (userenv('SCHEMAID'), 1 /* PUBLIC */)
 28      or
 29      (
 30        (
 31          (
 32            o.obj# in (select obj# from sys.objauth$
 33                       where grantee# in (select kzsrorol from x$kzsro)
 34                         and privilege#  = 12 /* EXECUTE */)
 35          )
 36          or
 37          exists
 38          (
 39            select null from sys.sysauth$
 40            where grantee# in (select kzsrorol from x$kzsro)
 41            and
 42            (
 43              (
 44                /* procedure */
 45                (
 46                  privilege# = -144 /* EXECUTE ANY PROCEDURE */
 47                  or
 48                  privilege# = -141 /* CREATE ANY PROCEDURE */
 49                )
 50              )
 51            )
 52          )
 53        )
 54      )
 55    )
 56  /

View created.

SQL> comment on table ALL_JAVA_ARGUMENTS is
  2  'argument information of stored java class accessible to the user'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_ARGUMENTS.OWNER is
  2  'owner of the stored java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_ARGUMENTS.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_ARGUMENTS.METHOD_INDEX is
  2  'the index of hosting method of the argument'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_ARGUMENTS.METHOD_NAME is
  2  'the name of hosting method of the argument'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_ARGUMENTS.ARGUMENT_POSITION is
  2  'the position of the argument, starting from 0'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_ARGUMENTS.ARRAY_DEPTH is
  2  'array depth of the type of the arguement'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_ARGUMENTS.BASE_TYPE is
  2  'base type of the type of the argument'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_ARGUMENTS.ARGUMENT_CLASS is
  2  'if base_type is class, this gives the actual class name of the argument'
  3  /

Comment created.

SQL> create or replace public synonym ALL_JAVA_ARGUMENTS for ALL_JAVA_ARGUMENTS
  2  /

Synonym created.

SQL> grant select on ALL_JAVA_ARGUMENTS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view DBA_JAVA_ARGUMENTS
  2  (OWNER, NAME, METHOD_INDEX, METHOD_NAME, ARGUMENT_POSITION,
  3         ARRAY_DEPTH, BASE_TYPE, ARGUMENT_CLASS)
  4  as
  5  select /*+ ordered use_nl(o mmd) */ u.name, nvl(j.longdbcs, o.name), mmd.mix, mmd.mnm, mag.aix,
  6         mag.aad,
  7         decode(mag.abt, 10, 'int',
  8                       11, 'long',
  9                       6, 'float',
 10                       7, 'double',
 11                       4, 'boolean',
 12                       8, 'byte',
 13                       5, 'char',
 14                       9, 'short',
 15                       2, 'class',
 16                       NULL),
 17         mag.aln
 18  from sys.javasnm$ j, sys.obj$ o, sys.x$joxfm mmd, sys.x$joxmag mag, sys.user$ u
 19  where o.obj# = mmd.obn
 20    and o.type# = 29
 21    and o.owner# = u.user#
 22    and j.short(+) = o.name
 23    and mmd.mix = mag.mix
 24    and mmd.obn = mag.obn
 25  /

View created.

SQL> comment on table DBA_JAVA_ARGUMENTS is
  2  'argument information of all stored java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_ARGUMENTS.OWNER is
  2  'owner of the java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_ARGUMENTS.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_ARGUMENTS.METHOD_INDEX is
  2  'the index of hosting method of the argument'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_ARGUMENTS.METHOD_NAME is
  2  'the name of hosting method of the argument'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_ARGUMENTS.ARGUMENT_POSITION is
  2  'the position of the argument, starting from 0'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_ARGUMENTS.ARRAY_DEPTH is
  2  'array depth of the type of the arguement'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_ARGUMENTS.BASE_TYPE is
  2  'base type of the type of the argument'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_ARGUMENTS.ARGUMENT_CLASS is
  2  'if base_type is class, this gives the actual class name of the argument'
  3  /

Comment created.

SQL> create or replace public synonym DBA_JAVA_ARGUMENTS for DBA_JAVA_ARGUMENTS
  2  /

Synonym created.

SQL> grant select on DBA_JAVA_ARGUMENTS to select_catalog_role
  2  /

Grant succeeded.

SQL> 
SQL> remark
SQL> remark FAMILY "JAVA_THROWS"
SQL> remark
SQL> 
SQL> create or replace view USER_JAVA_THROWS
  2  (NAME, METHOD_INDEX, METHOD_NAME, EXCEPTION_INDEX, EXCEPTION_CLASS)
  3  as
  4  select /*+ ordered use_nl(o mmd) */ nvl(j.longdbcs, o.name), mmd.mix, mmd.mnm, mex.xix, mex.xln
  5  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmex mex, sys.x$joxmmd mmd
  6  where o.obj# = mmd.obn
  7    and o.type# = 29
  8    and o.owner# = userenv('SCHEMAID')
  9    and j.short(+) = o.name
 10    and mmd.mix = mex.mix
 11    and mmd.obn = mex.obn;

View created.

SQL> /

View created.

SQL> comment on table USER_JAVA_THROWS is
  2  'list of exceptions thrown from a method of a class owned by user'
  3  /

Comment created.

SQL> comment on column USER_JAVA_THROWS.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column USER_JAVA_THROWS.METHOD_INDEX is
  2  'the index of throwing method of the exception'
  3  /

Comment created.

SQL> comment on column USER_JAVA_THROWS.METHOD_NAME is
  2  'the name of throwing method of the exception'
  3  /

Comment created.

SQL> comment on column USER_JAVA_THROWS.EXCEPTION_INDEX is
  2  'the index of the exception'
  3  /

Comment created.

SQL> comment on column USER_JAVA_THROWS.EXCEPTION_CLASS is
  2  'the class of the exception'
  3  /

Comment created.

SQL> create or replace public synonym USER_JAVA_THROWS for USER_JAVA_THROWS
  2  /

Synonym created.

SQL> grant select on USER_JAVA_THROWS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view ALL_JAVA_THROWS
  2  (OWNER, NAME, METHOD_INDEX, METHOD_NAME, EXCEPTION_INDEX, EXCEPTION_CLASS)
  3  as
  4  select /*+ ordered use_nl(o mmd) */ u.name, nvl(j.longdbcs, o.name), mmd.mix, mmd.mnm, mex.xix, mex.xln
  5  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmex mex, sys.x$joxmmd mmd, sys.user$ u
  6  where o.obj# = mmd.obn
  7    and o.type# = 29
  8    and o.owner# = u.user#
  9    and j.short(+) = o.name
 10    and mmd.mix = mex.mix
 11    and mmd.obn = mex.obn
 12    and
 13    (
 14      o.owner# in (userenv('SCHEMAID'), 1 /* PUBLIC */)
 15      or
 16      (
 17        (
 18          (
 19            o.obj# in (select obj# from sys.objauth$
 20                       where grantee# in (select kzsrorol from x$kzsro)
 21                         and privilege#  = 12 /* EXECUTE */)
 22          )
 23          or
 24          exists
 25          (
 26            select null from sys.sysauth$
 27            where grantee# in (select kzsrorol from x$kzsro)
 28            and
 29            (
 30              (
 31                /* procedure */
 32                (
 33                  privilege# = -144 /* EXECUTE ANY PROCEDURE */
 34                  or
 35                  privilege# = -141 /* CREATE ANY PROCEDURE */
 36                )
 37              )
 38            )
 39          )
 40        )
 41      )
 42    )
 43  /

View created.

SQL> comment on table ALL_JAVA_THROWS is
  2  'list of exceptions thrown from a method of a class accessible to user'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_THROWS.OWNER is
  2  'owner of the stored java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_THROWS.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_THROWS.METHOD_INDEX is
  2  'the index of throwing method of the exception'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_THROWS.METHOD_NAME is
  2  'the name of throwing method of the exception'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_THROWS.EXCEPTION_INDEX is
  2  'the index of the exception'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_THROWS.EXCEPTION_CLASS is
  2  'the class of the exception'
  3  /

Comment created.

SQL> create or replace public synonym ALL_JAVA_THROWS for ALL_JAVA_THROWS
  2  /

Synonym created.

SQL> grant select on ALL_JAVA_THROWS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view DBA_JAVA_THROWS
  2  (OWNER, NAME, METHOD_INDEX, METHOD_NAME, EXCEPTION_INDEX, EXCEPTION_CLASS)
  3  as
  4  select /*+ ordered use_nl(o mmd) */ u.name, nvl(j.longdbcs, o.name), mmd.mix, mmd.mnm, mex.xix, mex.xln
  5  from sys.javasnm$ j, sys.obj$ o, sys.x$joxmex mex, sys.x$joxmmd mmd, sys.user$ u
  6  where o.obj# = mmd.obn
  7    and o.type# = 29
  8    and o.owner# = u.user#
  9    and j.short(+) = o.name
 10    and mmd.mix = mex.mix
 11    and mmd.obn = mex.obn
 12  /

View created.

SQL> comment on table DBA_JAVA_THROWS is
  2  'list of exceptions thrown from a method of a class owned by user'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_THROWS.OWNER is
  2  'owner of the java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_THROWS.NAME is
  2  'name of the java class'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_THROWS.METHOD_INDEX is
  2  'the index of throwing method of the exception'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_THROWS.METHOD_NAME is
  2  'the name of throwing method of the exception'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_THROWS.EXCEPTION_INDEX is
  2  'the index of the exception'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_THROWS.EXCEPTION_CLASS is
  2  'the class of the exception'
  3  /

Comment created.

SQL> create or replace public synonym DBA_JAVA_THROWS for DBA_JAVA_THROWS
  2  /

Synonym created.

SQL> grant select on DBA_JAVA_THROWS to select_catalog_role
  2  /

Grant succeeded.

SQL> 
SQL> 
SQL> remark
SQL> remark FAMILY "JAVA_DERIVATIONS"
SQL> remark
SQL> 
SQL> create or replace view USER_JAVA_DERIVATIONS
  2  (SOURCE_NAME, CLASS_INDEX, CLASS_NAME)
  3  as
  4  select nvl(j.longdbcs, o.name),
  5         t.joxftderivedclassnumber,
  6         nvl(j2.longdbcs, t.joxftderivedclassname)
  7  from sys.javasnm$ j, sys.javasnm$ j2, sys.obj$ o, sys.x$joxdrc t
  8  where o.obj# = t.joxftobn
  9    and o.type# = 28
 10    and j.short(+) = o.name
 11    and j2.short(+) = t.joxftderivedclassname
 12    and o.owner# = userenv('SCHEMAID')
 13  /

View created.

SQL> comment on table USER_JAVA_DERIVATIONS is
  2  'this view maps java source objects and their derived java class objects and java resource objects  for the java class owned by user'
  3  /

Comment created.

SQL> comment on column USER_JAVA_DERIVATIONS.SOURCE_NAME is
  2  'name of the java source object'
  3  /

Comment created.

SQL> comment on column USER_JAVA_DERIVATIONS.CLASS_INDEX is
  2  'index of the derived java class object'
  3  /

Comment created.

SQL> comment on column USER_JAVA_DERIVATIONS.CLASS_NAME is
  2  'name of the derived java class object'
  3  /

Comment created.

SQL> create or replace public synonym USER_JAVA_DERIVATIONS for USER_JAVA_DERIVATIONS
  2  /

Synonym created.

SQL> grant select on USER_JAVA_DERIVATIONS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view ALL_JAVA_DERIVATIONS
  2  (OWNER, SOURCE_NAME, CLASS_INDEX, CLASS_NAME)
  3  as
  4  select u.name,
  5         nvl(j.longdbcs, o.name),
  6         t.joxftderivedclassnumber,
  7         nvl(j2.longdbcs, t.joxftderivedclassname)
  8  from sys.javasnm$ j, sys.javasnm$ j2, sys.obj$ o, sys.x$joxdrc t, sys.user$ u
  9  where o.obj# = t.joxftobn
 10    and o.type# = 28
 11    and o.owner# = u.user#
 12    and j.short(+) = o.name
 13    and j2.short(+) = t.joxftderivedclassname
 14    and
 15    (
 16      o.owner# in (userenv('SCHEMAID'), 1 /* PUBLIC */)
 17      or
 18      (
 19        (
 20          (
 21            o.obj# in (select obj# from sys.objauth$
 22                       where grantee# in (select kzsrorol from x$kzsro)
 23                         and privilege#  = 12 /* EXECUTE */)
 24          )
 25          or
 26          exists
 27          (
 28            select null from sys.sysauth$
 29            where grantee# in (select kzsrorol from x$kzsro)
 30            and
 31            (
 32              (
 33                /* procedure */
 34                (
 35                  privilege# = -144 /* EXECUTE ANY PROCEDURE */
 36                  or
 37                  privilege# = -141 /* CREATE ANY PROCEDURE */
 38                )
 39              )
 40            )
 41          )
 42        )
 43      )
 44    )
 45  /

View created.

SQL> comment on table ALL_JAVA_DERIVATIONS is
  2  'this view maps java source objects and their derived java class objects and java resource objects  for the java class accessible to user'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_DERIVATIONS.OWNER is
  2  'owner of the java class object'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_DERIVATIONS.SOURCE_NAME is
  2  'name of the java source object'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_DERIVATIONS.CLASS_INDEX is
  2  'index of the derived java class object'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_DERIVATIONS.CLASS_NAME is
  2  'name of the derived java class object'
  3  /

Comment created.

SQL> create or replace public synonym ALL_JAVA_DERIVATIONS for ALL_JAVA_DERIVATIONS
  2  /

Synonym created.

SQL> grant select on ALL_JAVA_DERIVATIONS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view DBA_JAVA_DERIVATIONS
  2  (OWNER, SOURCE_NAME, CLASS_INDEX, CLASS_NAME)
  3  as
  4  select u.name,
  5         nvl(j.longdbcs, o.name),
  6         t.joxftderivedclassnumber,
  7         nvl(j2.longdbcs, t.joxftderivedclassname)
  8  from sys.javasnm$ j, sys.javasnm$ j2, sys.obj$ o, sys.x$joxdrc t, sys.user$ u
  9  where o.obj# = t.joxftobn
 10    and o.type# = 28
 11    and o.owner# = u.user#
 12    and j.short(+) = o.name
 13    and j2.short(+) = t.joxftderivedclassname
 14  /

View created.

SQL> comment on table DBA_JAVA_DERIVATIONS is
  2  'this view maps java source objects and their derived java class objects and java resource objects  for all java classes'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_DERIVATIONS.OWNER is
  2  'owner of the java class object'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_DERIVATIONS.SOURCE_NAME is
  2  'name of the java source object'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_DERIVATIONS.CLASS_INDEX is
  2  'index of the derived java class object'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_DERIVATIONS.CLASS_NAME is
  2  'name of the derived java class object'
  3  /

Comment created.

SQL> create or replace public synonym DBA_JAVA_DERIVATIONS for DBA_JAVA_DERIVATIONS
  2  /

Synonym created.

SQL> grant select on DBA_JAVA_DERIVATIONS to select_catalog_role
  2  /

Grant succeeded.

SQL> 
SQL> remark
SQL> remark FAMILY "JAVA_RESOLVERS"
SQL> remark
SQL> 
SQL> create or replace view USER_JAVA_RESOLVERS
  2  (NAME, TERM_INDEX, PATTERN, SCHEMA)
  3  as
  4  select nvl(j.longdbcs, o.name),
  5         t.joxftresolvertermnumber,
  6         t.joxftresolvertermpattern,
  7         t.joxftresolvertermschema
  8  from sys.javasnm$ j, sys.obj$ o, sys.x$joxrsv t
  9  where o.obj# = t.joxftobn
 10    and o.type# = 29
 11    and o.owner# = userenv('SCHEMAID')
 12    and j.short(+) = o.name
 13  /

View created.

SQL> comment on table USER_JAVA_RESOLVERS is
  2  'resolver of java class owned by user'
  3  /

Comment created.

SQL> comment on column USER_JAVA_RESOLVERS.NAME is
  2  'name of the java class object'
  3  /

Comment created.

SQL> comment on column USER_JAVA_RESOLVERS.TERM_INDEX is
  2  'index of the resolver term in this row'
  3  /

Comment created.

SQL> comment on column USER_JAVA_RESOLVERS.PATTERN is
  2  'resolver pattern of the resolver term identified by TERM_INDEX column'
  3  /

Comment created.

SQL> comment on column USER_JAVA_RESOLVERS.SCHEMA is
  2  'resolver schema of the resolver term identified by TERM_INDEX column'
  3  /

Comment created.

SQL> create or replace public synonym USER_JAVA_RESOLVERS for USER_JAVA_RESOLVERS
  2  /

Synonym created.

SQL> grant select on USER_JAVA_RESOLVERS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view ALL_JAVA_RESOLVERS
  2  (OWNER, NAME, TERM_INDEX, PATTERN, SCHEMA)
  3  as
  4  select u.name,
  5         nvl(j.longdbcs, o.name),
  6         t.joxftresolvertermnumber,
  7         t.joxftresolvertermpattern,
  8         t.joxftresolvertermschema
  9  from sys.javasnm$ j, sys.obj$ o, sys.x$joxrsv t, sys.user$ u
 10  where o.obj# = t.joxftobn
 11    and o.type# = 29
 12    and o.owner# = u.user#
 13    and j.short(+) = o.name
 14    and
 15    (
 16      o.owner# in (userenv('SCHEMAID'), 1 /* PUBLIC */)
 17      or
 18      (
 19        (
 20          (
 21            o.obj# in (select obj# from sys.objauth$
 22                       where grantee# in (select kzsrorol from x$kzsro)
 23                         and privilege#  = 12 /* EXECUTE */)
 24          )
 25          or
 26          exists
 27          (
 28            select null from sys.sysauth$
 29            where grantee# in (select kzsrorol from x$kzsro)
 30            and
 31            (
 32              (
 33                /* procedure */
 34                (
 35                  privilege# = -144 /* EXECUTE ANY PROCEDURE */
 36                  or
 37                  privilege# = -141 /* CREATE ANY PROCEDURE */
 38                )
 39              )
 40            )
 41          )
 42        )
 43      )
 44    )
 45  /

View created.

SQL> comment on table ALL_JAVA_RESOLVERS is
  2  'resolver of java class owned by user'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_RESOLVERS.OWNER is
  2  'owner of the java class object'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_RESOLVERS.NAME is
  2  'name of the java class object'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_RESOLVERS.TERM_INDEX is
  2  'index of the resolver term in this row'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_RESOLVERS.PATTERN is
  2  'resolver pattern of the resolver term identified by TERM_INDEX column'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_RESOLVERS.SCHEMA is
  2  'resolver schema of the resolver term identified by TERM_INDEX column'
  3  /

Comment created.

SQL> create or replace public synonym ALL_JAVA_RESOLVERS for ALL_JAVA_RESOLVERS
  2  /

Synonym created.

SQL> grant select on ALL_JAVA_RESOLVERS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view DBA_JAVA_RESOLVERS
  2  (OWNER, NAME, TERM_INDEX, PATTERN, SCHEMA)
  3  as
  4  select u.name,
  5         nvl(j.longdbcs, o.name),
  6         t.joxftresolvertermnumber,
  7         t.joxftresolvertermpattern,
  8         t.joxftresolvertermschema
  9  from sys.javasnm$ j, sys.obj$ o, sys.x$joxrsv t, sys.user$ u
 10  where o.obj# = t.joxftobn
 11    and o.type# = 29
 12    and o.owner# = u.user#
 13    and j.short(+) = o.name
 14  /

View created.

SQL> comment on table DBA_JAVA_RESOLVERS is
  2  'resolver of java class owned by user'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_RESOLVERS.OWNER is
  2  'owner of the java class object'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_RESOLVERS.NAME is
  2  'name of the java class object'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_RESOLVERS.TERM_INDEX is
  2  'index of the resolver term in this row'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_RESOLVERS.PATTERN is
  2  'resolver pattern of the resolver term identified by TERM_INDEX column'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_RESOLVERS.SCHEMA is
  2  'resolver schema of the resolver term identified by TERM_INDEX column'
  3  /

Comment created.

SQL> create or replace public synonym DBA_JAVA_RESOLVERS for DBA_JAVA_RESOLVERS
  2  /

Synonym created.

SQL> grant select on DBA_JAVA_RESOLVERS to select_catalog_role
  2  /

Grant succeeded.

SQL> 
SQL> remark
SQL> remark FAMILY "JAVA_NCOMPS"
SQL> remark
SQL> 
SQL> create or replace view USER_JAVA_NCOMPS
  2  (NAME, SOURCE, INITIALIZER, LIBRARYFILE, LIBRARY)
  3  as
  4  select /*+ ordered use_nl(o t) */ nvl(j.longdbcs, o.name),
  5         t.joxftncompsource,
  6         t.joxftncompinitializer,
  7         t.joxftncomplibraryfile,
  8         t.joxftncomplibrary
  9  from sys.javasnm$ j, sys.obj$ o, sys.x$joxobj t
 10  where o.obj# = t.joxftobn
 11    and o.type# = 29
 12    and o.owner# = userenv('SCHEMAID')
 13    and j.short(+) = o.name
 14  /

View created.

SQL> comment on table USER_JAVA_NCOMPS is
  2  'ncomp related information of java classes owned by user'
  3  /

Comment created.

SQL> comment on column USER_JAVA_NCOMPS.NAME is
  2  'name of the java class object'
  3  /

Comment created.

SQL> comment on column USER_JAVA_NCOMPS.SOURCE is
  2  'ncomp source shown in this row'
  3  /

Comment created.

SQL> comment on column USER_JAVA_NCOMPS.INITIALIZER is
  2  'ncomp initializer shown in this row'
  3  /

Comment created.

SQL> comment on column USER_JAVA_NCOMPS.LIBRARYFILE is
  2  'ncomp libraryfile shown in this row'
  3  /

Comment created.

SQL> comment on column USER_JAVA_NCOMPS.LIBRARY is
  2  'ncomp library shown in this row'
  3  /

Comment created.

SQL> create or replace public synonym USER_JAVA_NCOMPS for USER_JAVA_NCOMPS
  2  /

Synonym created.

SQL> grant select on USER_JAVA_NCOMPS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view ALL_JAVA_NCOMPS
  2  (OWNER, NAME, SOURCE, INITIALIZER, LIBRARYFILE, LIBRARY)
  3  as
  4  select /*+ ordered use_nl(o t) */
  5         u.name,
  6         nvl(j.longdbcs, o.name),
  7         t.joxftncompsource,
  8         t.joxftncompinitializer,
  9         t.joxftncomplibraryfile,
 10         t.joxftncomplibrary
 11  from sys.javasnm$ j, sys.obj$ o, sys.x$joxobj t, sys.user$ u
 12  where o.obj# = t.joxftobn
 13    and o.type# = 29
 14    and o.owner# = u.user#
 15    and j.short(+) = o.name
 16    and
 17    (
 18      o.owner# in (userenv('SCHEMAID'), 1 /* PUBLIC */)
 19      or
 20      (
 21        (
 22          (
 23            o.obj# in (select obj# from sys.objauth$
 24                       where grantee# in (select kzsrorol from x$kzsro)
 25                         and privilege#  = 12 /* EXECUTE */)
 26          )
 27          or
 28          exists
 29          (
 30            select null from sys.sysauth$
 31            where grantee# in (select kzsrorol from x$kzsro)
 32            and
 33            (
 34              (
 35                /* procedure */
 36                (
 37                  privilege# = -144 /* EXECUTE ANY PROCEDURE */
 38                  or
 39                  privilege# = -141 /* CREATE ANY PROCEDURE */
 40                )
 41              )
 42            )
 43          )
 44        )
 45      )
 46    )
 47  /

View created.

SQL> comment on table ALL_JAVA_NCOMPS is
  2  'ncomp related information of java classes accessible to user'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_NCOMPS.OWNER is
  2  'owner of the java class object'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_NCOMPS.NAME is
  2  'name of the java class object'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_NCOMPS.SOURCE is
  2  'ncomp source shown in this row'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_NCOMPS.INITIALIZER is
  2  'ncomp initializer shown in this row'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_NCOMPS.LIBRARYFILE is
  2  'ncomp libraryfile shown in this row'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_NCOMPS.LIBRARY is
  2  'ncomp library shown in this row'
  3  /

Comment created.

SQL> create or replace public synonym ALL_JAVA_NCOMPS for ALL_JAVA_NCOMPS
  2  /

Synonym created.

SQL> grant select on ALL_JAVA_NCOMPS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view DBA_JAVA_NCOMPS
  2  (OWNER, NAME, SOURCE, INITIALIZER, LIBRARYFILE, LIBRARY)
  3  as
  4  select /*+ ordered use_nl(o t) */
  5         u.name,
  6         nvl(j.longdbcs, o.name),
  7         t.joxftncompsource,
  8         t.joxftncompinitializer,
  9         t.joxftncomplibraryfile,
 10         t.joxftncomplibrary
 11  from sys.javasnm$ j, sys.obj$ o, sys.x$joxobj t, sys.user$ u
 12  where o.obj# = t.joxftobn
 13    and o.type# = 29
 14    and o.owner# = u.user#
 15    and j.short(+) = o.name
 16  /

View created.

SQL> comment on table ALL_JAVA_NCOMPS is
  2  'ncomp related information of all java classes'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_NCOMPS.OWNER is
  2  'owner of the java class object'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_NCOMPS.NAME is
  2  'name of the java class object'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_NCOMPS.SOURCE is
  2  'ncomp source shown in this row'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_NCOMPS.INITIALIZER is
  2  'ncomp initializer shown in this row'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_NCOMPS.LIBRARYFILE is
  2  'ncomp libraryfile shown in this row'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_NCOMPS.LIBRARY is
  2  'ncomp library shown in this row'
  3  /

Comment created.

SQL> create or replace public synonym DBA_JAVA_NCOMPS for DBA_JAVA_NCOMPS
  2  /

Synonym created.

SQL> grant select on DBA_JAVA_NCOMPS to select_catalog_role
  2  /

Grant succeeded.

SQL> 
SQL> 
SQL> 
SQL> 
SQL> remark
SQL> remark FAMILY "JAVA_COMPILER_OPTIONS"
SQL> remark
SQL> 
SQL> create or replace view USER_JAVA_COMPILER_OPTIONS
  2  (OPTION_NAME, VALUE)
  3  as
  4  select o.property,
  5         dbms_java.decode_native_compiler_option(o.property, o.value)
  6  from sys.java$compiler$options o
  7  where o.owner# = userenv('SCHEMAID')
  8  /

View created.

SQL> comment on table USER_JAVA_COMPILER_OPTIONS is
  2  'native compiler options provided by the user'
  3  /

Comment created.

SQL> comment on column USER_JAVA_COMPILER_OPTIONS.OPTION_NAME is
  2  'name of native-compiler option'
  3  /

Comment created.

SQL> comment on column USER_JAVA_COMPILER_OPTIONS.VALUE is
  2  'value of the native-compiler option'
  3  /

Comment created.

SQL> create or replace public synonym USER_JAVA_COMPILER_OPTIONS for USER_JAVA_COMPILER_OPTIONS
  2  /

Synonym created.

SQL> grant select on USER_JAVA_COMPILER_OPTIONS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view ALL_JAVA_COMPILER_OPTIONS
  2  (OWNER, OPTION_NAME, VALUE)
  3  as
  4  select u.name, o.property,
  5         dbms_java.decode_native_compiler_option(o.property, o.value)
  6  from sys.user$ u, sys.java$compiler$options o
  7  where o.owner# = u.user#
  8  and o.owner# in (userenv('SCHEMAID'), 0 /* SYS */)
  9  /

View created.

SQL> comment on table ALL_JAVA_COMPILER_OPTIONS is
  2  'native-compiler options applicable to user'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_COMPILER_OPTIONS.OWNER is
  2  'owner of native-compiler option'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_COMPILER_OPTIONS.OPTION_NAME is
  2  'name of the native-compiler option'
  3  /

Comment created.

SQL> comment on column ALL_JAVA_COMPILER_OPTIONS.VALUE is
  2  'value of the native-compiler option'
  3  /

Comment created.

SQL> create or replace public synonym ALL_JAVA_COMPILER_OPTIONS for ALL_JAVA_COMPILER_OPTIONS
  2  /

Synonym created.

SQL> grant select on ALL_JAVA_COMPILER_OPTIONS to public with grant option
  2  /

Grant succeeded.

SQL> 
SQL> create or replace view DBA_JAVA_COMPILER_OPTIONS
  2  (OWNER, OPTION_NAME, VALUE)
  3  as
  4  select u.name, o.property,
  5         dbms_java.decode_native_compiler_option(o.property, o.value)
  6  from sys.user$ u, sys.java$compiler$options o
  7  where o.owner# = u.user#
  8  /

View created.

SQL> comment on table DBA_JAVA_COMPILER_OPTIONS is
  2  'all native-compiler options'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_COMPILER_OPTIONS.OWNER is
  2  'owner of the native-compiler option'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_COMPILER_OPTIONS.OPTION_NAME is
  2  'name of the native-compiler option'
  3  /

Comment created.

SQL> comment on column DBA_JAVA_COMPILER_OPTIONS.VALUE is
  2  'value of the native-compiler option'
  3  /

Comment created.

SQL> create or replace public synonym DBA_JAVA_COMPILER_OPTIONS for DBA_JAVA_COMPILER_OPTIONS
  2  /

Synonym created.

SQL> grant select on DBA_JAVA_COMPILER_OPTIONS to select_catalog_role
  2  /

Grant succeeded.

SQL> 
SQL> 
SQL> -- SQLJ initialization
SQL> @@initsqlj
SQL> --
SQL> -- CREATE SQLJUTL PACKAGE
SQL> --
SQL> create or replace package sqljutl as
  2  
  3     -- The following is required at translate-time for SQLJ
  4     function has_default(oid number,
  5                          proc char,
  6                          seq number,
  7                          ovr number) return number;
  8  
  9     -- The following is required at translate-time for JPublisher
 10     procedure get_typecode(tid raw, code OUT number,
 11                            class OUT varchar2, typ OUT number);
 12  
 13     -- The following might be used at runtime for converting
 14     -- between SQL and PL/SQL types
 15     function bool2int(b boolean) return integer;
 16     function int2bool(i integer) return boolean;
 17     function ids2char(iv DSINTERVAL_UNCONSTRAINED) return CHAR;
 18     function char2ids(ch CHAR) return DSINTERVAL_UNCONSTRAINED;
 19     function iym2char(iv YMINTERVAL_UNCONSTRAINED) return CHAR;
 20     function char2iym(ch CHAR) return YMINTERVAL_UNCONSTRAINED;
 21     function uri2vchar(uri SYS.URITYPE) return VARCHAR2;
 22  end sqljutl;
 23  /

Package created.

SQL> 
SQL> create or replace package sqljutl2 AUTHID CURRENT_USER as
  2  
  3     -- The following APIs are used for native invocation of
  4     -- server-side Java code
  5     FUNCTION evaluate(args LONG RAW) RETURN LONG RAW;
  6     FUNCTION invoke(handle NUMBER, class VARCHAR2, name VARCHAR2, sig VARCHAR2, args LONG RAW) RETURN LONG RAW;
  7     FUNCTION invoke(class VARCHAR2, name VARCHAR2, sig VARCHAR2, args LONG RAW) RETURN LONG RAW;
  8     FUNCTION reflect(class_Or_Package VARCHAR2, only_Declared NUMBER) RETURN LONG;
  9     FUNCTION reflect2(class_Or_Package VARCHAR2, only_Declared NUMBER) RETURN CLOB;
 10  
 11  end sqljutl2;
 12  /

Package created.

SQL> 
SQL> create or replace package body sqljutl is
  2  
  3     function has_default(oid number,
  4                          proc char,
  5                          seq number,
  6                          ovr number) return number is
  7              def number;
  8     begin
  9        if proc IS NULL
 10        then
 11           select DEFAULT# INTO def FROM ARGUMENT$
 12                  WHERE PROCEDURE$ IS NULL AND OBJ# = oid
 13                        AND SEQUENCE# = seq AND OVERLOAD# = ovr;
 14        else
 15           select DEFAULT# INTO def FROM ARGUMENT$
 16                  WHERE PROCEDURE$ = proc AND OBJ# = oid
 17                        AND SEQUENCE# = seq AND OVERLOAD# = ovr;
 18        end if;
 19  
 20        if def IS NULL
 21        then return 0;
 22        else return 1;
 23        end if;
 24     end has_default;
 25  
 26  
 27     procedure get_typecode
 28                 (tid raw, code OUT number,
 29                  class OUT varchar2, typ OUT number) is
 30        m NUMBER;
 31     begin
 32        SELECT typecode, externname, externtype INTO code, class, typ
 33        FROM TYPE$ WHERE toid = tid;
 34     exception
 35        WHEN TOO_MANY_ROWS
 36        THEN
 37        begin
 38          SELECT max(version#) INTO m FROM TYPE$ WHERE toid = tid;
 39          SELECT typecode, externname, externtype INTO code, class, typ
 40          FROM TYPE$ WHERE toid = tid AND version# = m;
 41        end;
 42     end get_typecode;
 43  
 44     function bool2int(b BOOLEAN) return INTEGER is
 45     begin if b is null then return null;
 46           elsif b then return 1;
 47           else return 0; end if;
 48     end bool2int;
 49  
 50     function int2bool(i INTEGER) return BOOLEAN is
 51     begin if i is null then return null;
 52           else return i<>0;
 53           end if;
 54     end int2bool;
 55  
 56     function ids2char(iv DSINTERVAL_UNCONSTRAINED) return CHAR is
 57        res CHAR(19);
 58     begin
 59        res := iv;
 60        return res;
 61     end ids2char;
 62  
 63     function char2ids(ch CHAR) return DSINTERVAL_UNCONSTRAINED is
 64        iv DSINTERVAL_UNCONSTRAINED;
 65     begin
 66        iv := ch;
 67        return iv;
 68     end char2ids;
 69  
 70     function iym2char(iv YMINTERVAL_UNCONSTRAINED) return CHAR is
 71        res CHAR(9);
 72     begin
 73        res := iv;
 74        return res;
 75     end iym2char;
 76  
 77     function char2iym(ch CHAR) return YMINTERVAL_UNCONSTRAINED is
 78        iv YMINTERVAL_UNCONSTRAINED;
 79     begin
 80        iv := ch;
 81        return iv;
 82     end char2iym;
 83  
 84     -- SYS.URITYPE and VARCHAR2
 85     function uri2vchar(uri SYS.URITYPE) return VARCHAR2 is
 86     begin
 87        return uri.geturl;
 88     end uri2vchar;
 89  
 90  end sqljutl;
 91  /

Package body created.

SQL> 
SQL> create or replace package body sqljutl2 as
  2  
  3     FUNCTION evaluate(args LONG RAW) RETURN LONG RAW
  4     AS LANGUAGE JAVA
  5     NAME 'oracle.jpub.reflect.Server.evaluate(byte[]) return byte[]';
  6  
  7     FUNCTION invoke(handle NUMBER, class VARCHAR2, name VARCHAR2, sig VARCHAR2, args LONG RAW) RETURN LONG RAW
  8     AS LANGUAGE JAVA
  9     NAME 'oracle.jpub.reflect.Server.invoke(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,byte[]) return byte[]';
 10  
 11     FUNCTION invoke(class VARCHAR2, name VARCHAR2, sig VARCHAR2, args LONG RAW) RETURN LONG RAW
 12     AS LANGUAGE JAVA
 13     NAME 'oracle.jpub.reflect.Server.invoke(java.lang.String,java.lang.String,java.lang.String,byte[]) return byte[]';
 14  
 15     FUNCTION reflect(class_Or_Package VARCHAR2, only_Declared NUMBER) RETURN LONG
 16     AS LANGUAGE JAVA
 17     NAME 'oracle.jpub.reflect.Server.reflect(java.lang.String,int) return java.lang.String';
 18  
 19     FUNCTION reflect2(class_Or_Package VARCHAR2, only_Declared NUMBER) RETURN CLOB
 20     AS LANGUAGE JAVA
 21     NAME 'oracle.jpub.reflect.Server.reflect2(java.lang.String,int) return oracle.sql.CLOB';
 22  
 23  end sqljutl2;
 24  /

Package body created.

SQL> 
SQL> grant execute on sqljutl to public ;

Grant succeeded.

SQL> grant execute on sqljutl2 to public ;

Grant succeeded.

SQL> 
SQL> 
SQL> -- XA JSP initialization
SQL> @@initxa
SQL> variable jvmrmaction varchar2(30)
SQL> execute :jvmrmaction := 'FULL_REMOVAL';

PL/SQL procedure successfully completed.

SQL> @@jvmrmxa
SQL> -- Remove some portion of the dictionary objects created by initxa.sql
SQL> 
SQL> -- This script must be run as a subscript of a script which sets the
SQL> -- variable jvmrmaction.
SQL> -- Possible values are
SQL> --  FULL_REMOVAL:        remove all java related objects
SQL> --  GRADE_REMOVAL:       remove java related objects for general up/downgrade
SQL> --  DOWNGRADE_x.y.z_TO_a.b.c: remove or massage system objects as appropriate
SQL> --                       when downgrading to release a.b.c
SQL> --  NONE:                do nothing
SQL> 
SQL> print jvmrmaction

JVMRMACTION
--------------------------------------------------------------------------------
FULL_REMOVAL

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or
  2           (:jvmrmaction = 'GRADE_REMOVAL' and
  3            initjvmaux.startstep('JVMRMXA')) then
  4  
  5  initjvmaux.drp('drop package JAVA_XA');
  6  initjvmaux.drp('drop PUBLIC SYNONYM JAVA_XA');
  7  
  8  if :jvmrmaction = 'GRADE_REMOVAL' then initjvmaux.endstep; end if;
  9  
 10  end if;end;
 11  /
drop package JAVA_XA
drop PUBLIC SYNONYM JAVA_XA

PL/SQL procedure successfully completed.

SQL> 
SQL> -- --------------------------------
SQL> -- Create the Package
SQL> -- --------------------------------
SQL> 
SQL> create or replace package JAVA_XA authid current_user as
  2  -- create or replace package JAVA_XA as
  3  
  4     function xa_start (xid_bytes IN RAW, timeout IN NUMBER,
  5                        flag IN NUMBER, status OUT NUMBER)
  6     return RAW;
  7  
  8     function xa_start_new (formatId IN NUMBER, gtrid IN RAW, bqual  IN RAW,
  9                            timeout IN NUMBER, flag IN NUMBER)
 10     return number;
 11  
 12     function xa_end (xid_bytes IN RAW, flag IN NUMBER)
 13     return number;
 14  
 15     function xa_end_new (formatId IN NUMBER, gtrid IN RAW, bqual  IN RAW,
 16                          flag IN NUMBER)
 17     return number;
 18  
 19     function xa_commit (xid_bytes IN RAW, commit IN NUMBER, stateout OUT NUMBER)
 20     return number;
 21  
 22     function xa_commit_new (formatId IN NUMBER, gtrid IN RAW, bqual  IN RAW,
 23                             commit IN NUMBER)
 24     return number;
 25  
 26     function xa_rollback (xid_bytes IN RAW, stateout OUT NUMBER)
 27     return number;
 28  
 29     function xa_rollback_new (formatId IN NUMBER, gtrid IN RAW, bqual  IN RAW)
 30     return number;
 31  
 32     function xa_forget (xid_bytes IN RAW, stateout OUT NUMBER)
 33     return number;
 34  
 35     function xa_forget_new (formatId IN NUMBER, gtrid IN RAW, bqual  IN RAW)
 36     return number;
 37  
 38     function xa_prepare (xid_bytes IN RAW, stateout OUT NUMBER)
 39     return number;
 40  
 41     function xa_prepare_new (formatId IN NUMBER, gtrid IN RAW, bqual  IN RAW)
 42     return number;
 43  
 44     function xa_doTwophase (isFinal IN NUMBER, inBytes IN long RAW)
 45     return number;
 46  
 47     function xa_thinTwophase (inBytes IN long RAW)
 48     return number;
 49  
 50     pragma restrict_references(default, RNPS, WNPS, RNDS, WNDS, trust);
 51  
 52  end;
 53  /

Package created.

SQL> 
SQL> REM -------------------------
> REM Create the body
SQL> REM -------------------------
> 
SQL> create or replace package body JAVA_XA as
  2  
  3     function xa_start (xid_bytes IN RAW, timeout IN NUMBER, flag IN NUMBER, status OUT NUMBER)
  4     return RAW as language java
  5     name 'oracle.jdbc.xa.server.OracleWrapXAResource.start(byte[], int, int, int []) return byte []';
  6  
  7  
  8     function xa_start_new (formatId IN NUMBER, gtrid IN RAW, bqual  IN RAW,
  9                            timeout IN NUMBER, flag IN NUMBER)
 10     return number as language java
 11     name 'oracle.jdbc.xa.server.OracleWrapXAResource.start(int, byte[], byte[],int, int) return int';
 12  
 13     function xa_end (xid_bytes IN RAW, flag IN NUMBER)
 14     return number as language java
 15     name 'oracle.jdbc.xa.server.OracleWrapXAResource.end (byte[], int)
 16                          return int';
 17  
 18     function xa_end_new (formatId IN NUMBER, gtrid IN RAW, bqual  IN RAW,
 19                          flag IN NUMBER)
 20     return number as language java
 21     name 'oracle.jdbc.xa.server.OracleWrapXAResource.end (int, byte[], byte[], int)
 22                          return int';
 23  
 24  
 25     function xa_commit (xid_bytes IN RAW, commit IN NUMBER, stateout OUT NUMBER)
 26     return number as language java
 27     name 'oracle.jdbc.xa.server.OracleWrapXAResource.commit (byte[], int, int[]) return int';
 28  
 29     function xa_commit_new (formatId IN NUMBER, gtrid IN RAW, bqual  IN RAW,
 30                             commit IN NUMBER)
 31     return number as language java
 32     name 'oracle.jdbc.xa.server.OracleWrapXAResource.commit (int, byte[], byte[], int) return int';
 33  
 34  
 35     function xa_rollback (xid_bytes IN RAW, stateout OUT NUMBER)
 36     return number as language java
 37     name 'oracle.jdbc.xa.server.OracleWrapXAResource.rollback (byte[], int[]) return int';
 38  
 39     function xa_rollback_new (formatId IN NUMBER, gtrid IN RAW, bqual  IN RAW)
 40     return number as language java
 41     name 'oracle.jdbc.xa.server.OracleWrapXAResource.rollback (int, byte[], byte[]) return int';
 42  
 43  
 44     function xa_forget ( xid_bytes IN RAW, stateout OUT NUMBER)
 45     return number as language java
 46     name 'oracle.jdbc.xa.server.OracleWrapXAResource.forget (byte[], int[] ) return int';
 47  
 48     function xa_forget_new (formatId IN NUMBER, gtrid IN RAW, bqual  IN RAW)
 49     return number as language java
 50     name 'oracle.jdbc.xa.server.OracleWrapXAResource.forget (int, byte[], byte[]) return int';
 51  
 52     function xa_prepare (xid_bytes IN RAW, stateout OUT NUMBER)
 53     return number as language java
 54     name 'oracle.jdbc.xa.server.OracleWrapXAResource.prepare (byte[], int[]) return int';
 55  
 56     function xa_prepare_new (formatId IN NUMBER, gtrid IN RAW, bqual  IN RAW)
 57     return number as language java
 58     name 'oracle.jdbc.xa.server.OracleWrapXAResource.prepare(int, byte[], byte[]) return int';
 59  
 60     function xa_doTwophase (isFinal IN NUMBER, inBytes IN LONG RAW)
 61       return number as language java name
 62     'oracle.jdbc.xa.server.OracleWrapXAResource.doTwoPhase (int, byte[])
 63      return int';
 64  
 65      function xa_thinTwophase (inBytes IN LONG RAW)
 66       return number as language java name
 67     'oracle.jdbc.xa.server.OracleWrapXAResource.stepThinTwophase (byte[])
 68      return int';
 69  
 70  end;
 71  /

Package body created.

SQL> 
SQL> create public synonym JAVA_XA for JAVA_XA;

Synonym created.

SQL> grant execute on JAVA_XA to public ;

Grant succeeded.

SQL> 
SQL> 
SQL> -- Load some stuff that is mostly jars we got from sun
SQL> -- These used to be loaded by initjis, but that has gone away
SQL> 
SQL> begin if initjvmaux.startstep('LOAD_JIS_JARS') then
  2    -- noverify is suppressing a warning.
  3    dbms_java.loadjava('-noverify -resolve -install -synonym -grant PUBLIC lib/activation.jar lib/mail.jar javavm/lib/logging.properties');
  4  
  5    initjvmaux.endstep;
  6  end if; end;
  7  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Install Package for export and import support
SQL> 
SQL> @@jvm_exp
SQL> Rem
SQL> Rem $Header: javavm/install/jvm_exp.sql /st_javavm_11.2.0/1 2013/04/01 14:53:17 etucker Exp $
SQL> Rem
SQL> Rem dbms_jvm_exp_perms.sql
SQL> Rem
SQL> Rem Copyright (c) 2005, 2013, Oracle and/or its affiliates.
SQL> Rem All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      dbms_jvm_exp_perms.sql - supports export of java permissions
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      This package is registered in sys.exppkgobj$.  This will enable
SQL> Rem      exporting of all permmissions.  Any permissions different from those
SQL> Rem      in the target db will be added to java$policy$ if necessary.
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      import_perms can not be run alone.  It depends on the strings emitted
SQL> Rem      by the export_perms() output to create the beginning table.
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    etucker     03/29/13 - Backport etucker_bug-16236274 from
SQL> Rem                           st_javavm_12.1.0.1
SQL> Rem    etucker     02/08/10 - add public synonmy for backward compatiblity
SQL> Rem    etucker     04/02/07 - disable problems
SQL> Rem    etucker     06/30/05 - check for enabled
SQL> Rem    etucker     06/28/05 - fix query
SQL> Rem    etucker     06/13/05 - add version check for backward compat
SQL> Rem    etucker     06/08/05 - remove set stuff
SQL> Rem    etucker     05/06/05 - etucker_bug-3993297
SQL> Rem    etucker     05/06/05 - more support
SQL> Rem    etucker     05/02/05 - Created
SQL> Rem
SQL> 
SQL> create or replace package DBMS_JVM_EXP_PERMS AUTHID CURRENT_USER as
  2    TYPE temp_rec is record (
  3         kind        dba_java_policy.kind%TYPE,
  4         grantee     dba_java_policy.grantee%TYPE,
  5         type_schema dba_java_policy.type_schema%TYPE,
  6         type_name   dba_java_policy.type_name%TYPE,
  7         name        dba_java_policy.name%TYPE,
  8         action      dba_java_policy.action%TYPE,
  9         enabled     dba_java_policy.enabled%TYPE
 10         );
 11  
 12    TYPE temp_java_policy is table of temp_rec;
 13  
 14    function create_exp(objid IN number,
 15                        version in varchar2,
 16                        new_block OUT PLS_INTEGER) return varchar2;
 17  
 18    function grant_exp (objid IN NUMBER,
 19                        isdba IN PLS_INTEGER,
 20                        grantor OUT VARCHAR2,
 21                        version IN VARCHAR2,
 22                        new_block OUT PLS_INTEGER) RETURN varchar2;
 23  
 24    function audit_exp (objid IN NUMBER,
 25                        version IN VARCHAR2,
 26                        new_block OUT PLS_INTEGER) RETURN varchar2;
 27  
 28    function drop_exp (objid IN NUMBER,
 29                       version IN VARCHAR2,
 30                       new_block OUT PLS_INTEGER) RETURN varchar2;
 31  
 32    function audit_sysprivs_exp (version IN VARCHAR2,
 33                                 new_block OUT PLS_INTEGER ) RETURN varchar2;
 34    function grant_sysprivs_exp(version IN varchar2,
 35                                new_block OUT PLS_INTEGER
 36                               ) return varchar2;
 37    procedure import_jvm_perms(pcol temp_java_policy);
 38    function  export_perms(state IN OUT PLS_INTEGER, new_block OUT PLS_INTEGER)
 39                          return varchar2;
 40  end DBMS_JVM_EXP_PERMS;
 41  /

Package created.

SQL> show errors;
No errors.
SQL> 
SQL> create or replace package body DBMS_JVM_EXP_PERMS as
  2    EXP_END    CONSTANT PLS_INTEGER := 999999;
  3    EXP_START  CONSTANT PLS_INTEGER := 0;
  4    cursor policy_q is select kind, grantee, type_schema,type_name,
  5                              name,action, enabled from dba_java_policy where
  6                              enabled='ENABLED';
  7    zone PLS_INTEGER := EXP_START;
  8  
  9  
 10    function grant_sysprivs_exp(version IN varchar2,
 11                                new_block OUT PLS_INTEGER
 12                               ) return varchar2 as
 13  
 14    comm_str    varchar2(4000);
 15    Begin
 16      -- Check version is >= 10.2
 17      if version < '10.02.00.00.00' then
 18        return '';
 19      end if;
 20  
 21      sys.dbms_zhelp_ir.check_sys_priv(DBMS_ZHELP_IR.KZSSTA);
 22  
 23      <<exp_done>>
 24      if zone = EXP_END then
 25        zone := EXP_START;
 26        if policy_q%ISOPEN = TRUE then
 27          close policy_q;
 28        end if;
 29        return '';
 30      end if;
 31  
 32      comm_str := export_perms(zone, new_block);
 33  
 34      if comm_str is null then
 35        zone := EXP_END;
 36        goto exp_done;
 37      else
 38        zone := zone + 1;
 39        return comm_str;
 40      end if;
 41    exception
 42      when others then
 43        zone := EXP_START;
 44        raise;
 45    end grant_sysprivs_exp;
 46  
 47    function create_exp(objid IN number,
 48                        version in varchar2,
 49                        new_block OUT PLS_INTEGER) return varchar2 as
 50    Begin
 51      return '';
 52    end create_exp;
 53  
 54    function grant_exp (objid IN NUMBER,
 55                        isdba IN PLS_INTEGER,
 56                        grantor OUT VARCHAR2,
 57                        version IN VARCHAR2,
 58                        new_block OUT PLS_INTEGER) RETURN varchar2 as
 59    Begin
 60      return '';
 61    end grant_exp;
 62  
 63    function audit_exp (objid IN NUMBER,
 64                        version IN VARCHAR2,
 65                        new_block OUT PLS_INTEGER) RETURN varchar2 as
 66    Begin
 67      return '';
 68    end audit_exp;
 69  
 70    function audit_sysprivs_exp (version IN VARCHAR2,
 71                                 new_block OUT PLS_INTEGER ) RETURN varchar2 as
 72    Begin
 73      return '';
 74    end audit_sysprivs_exp;
 75  
 76    function drop_exp (objid IN NUMBER,
 77                       version IN VARCHAR2,
 78                       new_block OUT PLS_INTEGER) RETURN varchar2 as
 79    Begin
 80      return '';
 81    end drop_exp;
 82  
 83   -- uses the temp_java_perms table built by the first part of import
 84   -- and adds permissions and policy permissions as necessary.
 85    procedure import_jvm_perms(pcol temp_java_policy) as
 86  
 87    row_count number;
 88  
 89    key       number;
 90  
 91    POLICYPERM CONSTANT varchar2(50) :=
 92          'oracle.aurora.rdbms.security.PolicyTablePermission';
 93  
 94    class  varchar2(500);
 95  
 96    action varchar2(200);
 97  
 98    pol_seq number :=0 ;
 99    run_seq number :=0 ;
100  
101    Begin
102  
103      -- Check privs
104      sys.dbms_zhelp_ir.check_sys_priv(DBMS_ZHELP_IR.KZSSTA);
105  
106      -- we need to disable the RESTRICTion on RuntimePermission#LoadLibrary
107      select seq into pol_seq from dba_java_policy
108             where kind = 'RESTRICT' and type_schema='SYS'
109             and type_name = POLICYPERM and
110             name = '0:java.lang.RuntimePermission#loadLibrary.*' and
111             enabled='ENABLED';
112  
113      if(pol_seq != 0) then
114          dbms_java.disable_permission(pol_seq);
115      end if;
116  
117      select seq into run_seq from dba_java_policy
118             where kind = 'RESTRICT' and type_schema='SYS'
119             and type_name = 'java.lang.RuntimePermission' and
120             name = 'loadLibrary.*' and  enabled='ENABLED';
121  
122      if(run_seq != 0) then
123          dbms_java.disable_permission(run_seq);
124      end if;
125  
126  
127      -- This is the main loop that goes through each record
128      -- and check the target dba_java_policy table to see if there is
129      -- a like permission there already.  If not then the permission
130      -- is created.
131  
132      for i in pcol.FIRST .. pcol.LAST
133      loop
134          -- Check if permission is already in dba_java_policy
135          select count(*) into row_count from dba_java_policy d where
136          pcol(i).kind = d.kind and
137          pcol(i).grantee = d.grantee and
138          pcol(i).type_schema = d.type_schema and
139          pcol(i).type_name = d.type_name and
140          (pcol(i).name = d.name or (pcol(i).name is null and d.name is null)
141           or ((d.name ='*' or d.name is null) and pcol(i).name != null)) and
142          (pcol(i).action = d.action or (pcol(i).action is null and
143          d.action is null) or ((d.action = '*' or d.action is null) and
144          pcol(i).action != null));
145          -- If this is non-zero then we must grant or restrict
146          if row_count = 0 then
147            -- GRANT
148            if pcol(i).kind = 'GRANT' then
149            -- Policy Permissions are handled differently
150              if pcol(i).type_name = POLICYPERM then
151                if(instr(pcol(i).name,'0',1,1) = 0) then
152                  class := pcol(i).name;
153                  action := '';
154                else
155                  class := substr(pcol(i).name,3,instr(pcol(i).name,'#',1,1)-3);
156                  action := substr(pcol(i).name,instr(pcol(i).name,'#',1,1)+1);
157                end if;
158                dbms_java.grant_policy_permission(pcol(i).grantee,
159                  pcol(i).type_schema, class, action, key);
160              else -- regular grants
161                dbms_java.grant_permission(pcol(i).grantee,
162                  pcol(i).type_schema||':'||pcol(i).type_name,
163                  pcol(i).name, pcol(i).action,key);
164              end if;
165            else -- RESTRICT
166              if pcol(i).type_name = POLICYPERM then
167                dbms_java.restrict_permission(pcol(i).grantee,
168                  pcol(i).type_schema||':'||POLICYPERM, pcol(i).name,'',key);
169              else
170                 dbms_java.restrict_permission(pcol(i).grantee,
171                  pcol(i).type_schema||':'||pcol(i).type_name,
172                  pcol(i).name, pcol(i).action,key);
173              end if;
174            end if;
175            if pcol(i).enabled = 'DISABLE' then
176              dbms_java.disable_permission(key);
177            end if;
178          else
179            goto end_loop;
180          end if;
181      <<end_loop>>
182      null;
183      end loop;
184  
185      -- reenable the RESTRICTions run_seq must be first!
186      if(run_seq != 0) then
187         dbms_java.enable_permission(run_seq);
188      end if;
189      if( pol_seq != 0) then
190         dbms_java.enable_permission(pol_seq);
191      end if;
192    exception
193      WHEN OTHERS THEN
194       raise;
195    end import_jvm_perms;
196  
197    function export_perms(state IN OUT PLS_INTEGER, new_block OUT PLS_INTEGER)
198          return varchar2 as
199  
200    kind        varchar2(8);
201    grantee     varchar2(30);
202    type_schema varchar2(30);
203    type_name   varchar2(4000);
204    name        varchar2(4000);
205    action      varchar2(4000);
206    enabled     varchar2(8);
207  
208    Begin
209  -- open the dba_java_policy cursor and return temp tale creation
210      IF policy_q%ISOPEN = FALSE and state = 0 THEN
211        open policy_q;
212        new_block := 0;
213        return 'execute immediate (''CREATE TABLE TEMP_JAVA_PRIVS' ||
214               ' AS SELECT KIND, GRANTEE, TYPE_SCHEMA, TYPE_NAME,' ||
215               ' NAME, ACTION, ENABLED FROM DBA_JAVA_POLICY WHERE ROWNUM > 1'');';
216      end if;
217  --  Process the insert commands for import.
218      if policy_q%ISOPEN = TRUE then
219        Fetch policy_q into kind, grantee, type_schema,
220                            type_name, name, action, enabled;
221        if policy_q%NOTFOUND OR policy_q%NOTFOUND IS NULL THEN
222          close policy_q;
223          state := EXP_END -1;
224      else
225    -- process each row and right the inserts
226         if state = 1 then
227           new_block := 1;
228         else
229           new_block := 0;
230         end if;
231         return 'INSERT INTO TEMP_JAVA_PRIVS VALUES(' ||
232           sys.dbms_assert.enquote_literal(replace(kind,'''',''''''))
233           || ',' ||
234           sys.dbms_assert.enquote_literal(replace(grantee,'''',''''''))
235           || ',' ||
236           sys.dbms_assert.enquote_literal(replace(type_schema,'''',''''''))
237           || ',' ||
238           sys.dbms_assert.enquote_literal(replace(type_name,'''',''''''))
239           || ',' ||
240           sys.dbms_assert.enquote_literal(replace(name,'''','''''')) || ',' ||
241           sys.dbms_assert.enquote_literal(replace(action,'''','''''')) || ',' ||
242           sys.dbms_assert.enquote_literal(replace(enabled,'''','''''')) || ');';
243  
244        end if;
245      end if;
246      if state = EXP_END-1 then
247        new_block :=1;
248        return
249  'DECLARE
250     TJP SYS.DBMS_JVM_EXP_PERMS.TEMP_JAVA_POLICY;
251     CURSOR C1 IS SELECT KIND,GRANTEE,TYPE_SCHEMA,TYPE_NAME,
252                         NAME,ACTION,ENABLED FROM TEMP_JAVA_PRIVS;
253  BEGIN
254     OPEN C1;
255     FETCH C1 BULK COLLECT INTO TJP;
256     CLOSE C1;
257     SYS.DBMS_JVM_EXP_PERMS.IMPORT_JVM_PERMS(TJP);
258     EXECUTE IMMEDIATE(''DROP TABLE TEMP_JAVA_PRIVS'');
259  END;';
260      end if;
261  -- export is done
262      return '';
263    end export_perms;
264  
265  end DBMS_JVM_EXP_PERMS;
266  /

Package body created.

SQL> show errors;
No errors.
SQL> 
SQL> DELETE FROM exppkgobj$ where package = 'DBMS_JVM_EXP_PERMS';

0 rows deleted.

SQL> insert into sys.exppkgobj$ values('DBMS_JVM_EXP_PERMS', 'SYS', 1, 29, 1, 4000);

1 row created.

SQL> commit;

Commit complete.

SQL> 
SQL> 
SQL> 
SQL> GRANT EXECUTE ON sys.dbms_jvm_exp_perms TO IMP_FULL_DATABASE;

Grant succeeded.

SQL> /

Grant succeeded.

SQL> GRANT EXECUTE ON sys.dbms_jvm_exp_perms TO DATAPUMP_EXP_FULL_DATABASE;

Grant succeeded.

SQL> /

Grant succeeded.

SQL> 
SQL> CREATE OR REPLACE PUBLIC SYNONYM dbms_jvm_exp_perms for sys.dbms_jvm_exp_perms;

Synonym created.

SQL> /

Synonym created.

SQL> 
SQL> -- Now check whether create java system worked correctly, and if not, back
SQL> -- out of everything done in this script
SQL> variable jvmrmaction varchar2(30)
SQL> 
SQL> declare
  2    ok int;
  3    bad int;
  4  begin
  5    :jvmrmaction := 'NONE';
  6    select count(*) into ok from obj$ where status=1 and type#=29;
  7    select count(*) into bad from obj$ where status!=1 and type#=29 and owner#=0;
  8    if bad > 0 or ok < 100 then
  9      initjvmaux.abort_message(
 10       'CREATE JAVA SYSTEM did not complete successfully:',
 11       'number of java classes with status 1: '|| ok ||', with status != 1: '|| bad);
 12      initjvmaux.abort_message('Backing out of java installation...');
 13      :jvmrmaction := 'FULL_REMOVAL';
 14      initjvmaux.endaction;
 15    end if;
 16  end;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  create preferences table
SQL> @@initprefs.sql
SQL> Rem
SQL> Rem $Header: initprefs.sql 01-dec-2002.12:41:25 etucker Exp $
SQL> Rem
SQL> Rem initprefs.sql
SQL> Rem
SQL> Rem Copyright (c) 2002, Oracle Corporation.  All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      initprefs.sql - creates the table used by Preferences
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      creates the java$prefs$ table in SYS for Preferences
SQL> Rem      persistent storage.
SQL> Rem
SQL> Rem    NOTES
SQL> Rem
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    etucker     12/01/02  -  add sequence
SQL> Rem    etucker     11/15/02  - etucker_jdk14_jce_jsse
SQL> Rem    etucker     11/14/02 -  fix names
SQL> Rem    etucker     11/06/02 - Created
SQL> Rem
SQL> 
SQL> call initjvmaux.drp('drop sequence java$prefs$seq$');
drop sequence java$prefs$seq$

Call completed.

SQL> call initjvmaux.drp('drop table java$prefs$');
drop table java$prefs$

Call completed.

SQL> 
SQL> -- Modification timestamp will cycle on Integer.MAX_VALUE
SQL> create sequence java$prefs$seq$
  2  maxvalue 2147483647
  3  order
  4  cycle;

Sequence created.

SQL> 
SQL> -- Persistent storage for preferences
SQL> create table java$prefs$
  2  (
  3          abspath varchar2(4000),
  4          puser    varchar2(31),
  5          type    varchar2(2),
  6          key     varchar2(160),
  7          value   blob
  8  );

Table created.

SQL> 
SQL> -- The following should make 2 the initial value.
SQL> select java$prefs$seq$.NEXTVAL from dual;

   NEXTVAL
----------
         1

1 row selected.

SQL> insert into java$prefs$ values('SEQUENCE','SYS','S',
  2                             java$prefs$seq$.NEXTVAL,empty_blob());

1 row created.

SQL> commit;

Commit complete.

SQL> 
SQL> -- :jvmrmaction has been set to 'NONE' at this point if things are OK.
SQL> -- In that case the following inclusion will do nothing.
SQL> variable jvmudaction varchar2(30)
SQL> variable jvmudsubaction varchar2(30)
SQL> @@jvmrm
SQL> -- Remove some portion of the Java related data dictionary objects
SQL> 
SQL> -- This script must be run as a subscript of a script which sets the
SQL> -- variable jvmrmaction.
SQL> -- Possible values are
SQL> --  FULL_REMOVAL:        remove all java related objects
SQL> --  DOWNGRADE_8.1.7_TO_8.1.6: remove or massage system objects as appropriate
SQL> --                       when downgrading from 8.1.7 to 8.1.6
SQL> --  DOWNGRADE_8.1.6_TO_8.1.5: remove or massage system objects as appropriate
SQL> --                       when downgrading from 8.1.6 to 8.1.5 (after having
SQL> --                       earlier downgraded from 8.1.7 to 8.1.6)
SQL> --  DOWNGRADE_x.y.z_TO_a.b.c: analogous to the above for all supported
SQL> --                       downgrade from/to consecutive release pairs
SQL> --  GRADE_REMOVAL:       remove java related objects as appropriate during
SQL> --                       upgrade or downgrade
SQL> --  NONE:                do nothing
SQL> 
SQL> -- This script can not function properly in SVRMGR.  The following
SQL> -- lines are intended to abort the script if it is being run with
SQL> -- SVRMGR, but will be interpreted simply as remarks by SQLPLUS.
SQL> rem -
> set stoponerror on
SQL> rem -
> jvmrm.sql must be run with SQLPLUS, not SVRMGRL
SQL> 
SQL> -- This script may only be called as a subscript.
SQL> -- Otherwise, jvmudaction will be undefined and the following will
SQL> -- abort the script.
SQL> whenever sqlerror exit;
SQL> 
SQL> /*
SQL> /*
SQL> ##  If the following sequence results in
SQL> ##   SP2-0552: Bind variable "JVMUDACTION" not declared.
SQL> ##  followed by
SQL> ##   ORA-01476: divisor is equal to zero
SQL> ##  thereby causing SQLPLUS to exit, it is because this script is
SQL> ##  not being run as a subscript, as required.
SQL> */
SQL> variable scratch varchar2(30)
SQL> execute :scratch := :jvmudaction; :scratch := 'not null';

PL/SQL procedure successfully completed.

SQL> declare z number := 0; begin if :scratch is null then z := 1/z;end if;end;
  2  /

PL/SQL procedure successfully completed.

SQL> 
SQL> whenever sqlerror continue;
SQL> 
SQL> print jvmrmaction

JVMRMACTION
--------------------------------------------------------------------------------
NONE

SQL> 
SQL> begin
  2    if :jvmrmaction = 'FULL_REMOVAL' then
  3      dbms_registry.removing('JAVAVM');
  4      initjvmaux.startaction('UNLOAD');
  5    end if;
  6    if :jvmudaction = 'DOWNGRADE' and
  7       initjvmaux.registrystatus = 'LOADED' and
  8       initjvmaux.startstep('SET_REGISTRY_GRADING') then
  9      dbms_registry.downgrading('JAVAVM');
 10      initjvmaux.endstep;
 11    end if;
 12  end;
 13  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' then
  2  
  3  if initjvmaux.startstep('RMJVM_REMOVE_ROLES') then
  4  --
  5  initjvmaux.drp('drop role javauserpriv');
  6  initjvmaux.drp('drop role javaidpriv');
  7  initjvmaux.drp('drop role javasyspriv');
  8  initjvmaux.drp('drop role javadebugpriv');
  9  initjvmaux.drp('drop role ejbclient');
 10  
 11  --
 12  initjvmaux.drp('drop view javasnm');
 13  initjvmaux.drp('drop public synonym javasnm');
 14  
 15  --
 16  initjvmaux.drp('drop table aurora$startup$classes$');
 17  initjvmaux.drp('drop table aurora$shutdown$classes$');
 18  
 19  initjvmaux.endstep; end if;
 20  end if;end;
 21  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'DOWNGRADE_8.1.6_TO_8.1.5' then
  2  
  3  if initjvmaux.startstep('RMJVM_STRIP') then
  4  
  5  --- Strip 8.1.6 bytecode optimizations
  6  rmjvm.strip();
  7  
  8  initjvmaux.endstep; end if;
  9  
 10  end if;end;
 11  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or :jvmrmaction = 'DOWNGRADE_8.1.7_TO_8.1.6' then
  2  
  3  if initjvmaux.startstep('RMJVM_REMOVE_DYNREG') then
  4  
  5  --- remove DynamicRegistration
  6  initjvmaux.drp('delete from aurora$startup$classes$ where classname = ''oracle.aurora.net.DynamicRegistration''');
  7  initjvmaux.drp('delete from aurora$shutdown$classes$ where classname = ''oracle.aurora.net.DynamicRegistration''');
  8  initjvmaux.drp('drop table AURORA$DYN$REG');
  9  if :jvmrmaction = 'DOWNGRADE_8.1.7_TO_8.1.6' then
 10    initjvmaux.drp('begin dbms_java.aurora_shutdown();end;');
 11  end if;
 12  initjvmaux.drp('drop table AURORA$CURRENT$DYN$REG');
 13  
 14  initjvmaux.endstep; end if;
 15  
 16  end if;end;
 17  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or :jvmrmaction = 'GRADE_REMOVAL' then
  2  
  3  if initjvmaux.startstep('RMJVM_REMOVE_GET_ERROR') then
  4  
  5  --
  6  initjvmaux.drp('drop package get_error$');
  7  initjvmaux.drp('drop public synonym get_error$');
  8  
  9  --
 10  initjvmaux.drp('drop trigger AURORA$SERVER$SHUTDOWN');
 11  initjvmaux.drp('drop trigger AURORA$SERVER$STARTUP');
 12  
 13  -- initsql
 14  initjvmaux.drp('drop package sqljutl');
 15  
 16  
 17  -- Remove any occurrences of LOADLOBS package
 18  DECLARE
 19  max_iterations number;
 20  loop_count number;
 21  iterations number;
 22  drop_statement varchar2(50);
 23  my_err number;
 24  cursor C1 is select unique 'DROP PACKAGE ' || u.name || '.LOADLOBS'
 25               into drop_statement from obj$ o, user$ u where
 26               (o.name = 'LOADLOBS' and
 27               (o.type# = 9 or o.type# = 11)) and
 28               u.user#=o.owner#;
 29  BEGIN
 30    max_iterations := 10000000;
 31    select count(*) into iterations from obj$ o, user$ u where
 32          (o.name = 'LOADLOBS' and (o.type# = 9 or o.type# = 11)) and
 33          u.user#=o.owner#;
 34    LOOP
 35      exit when iterations=0 or iterations >= max_iterations;
 36      max_iterations := iterations;
 37      loop_count := 0;
 38      open C1;
 39      LOOP -- outer loop for snap shot checking.
 40        BEGIN
 41          fetch c1 into drop_statement;
 42          exit when C1%notfound or loop_count > iterations;
 43        EXCEPTION
 44          when others then
 45            my_err := SQLCODE;
 46            if my_err = -1555 then
 47              exit;
 48            else
 49              raise;
 50            end if;
 51         END;
 52       initjvmaux.drp(drop_statement);
 53       loop_count := loop_count + 1;
 54     END LOOP;--inner
 55  close C1;
 56  commit;
 57  end LOOP; --outer
 58  end;--LOADLOBS
 59  
 60  initjvmaux.endstep; end if;
 61  
 62  end if;end;
 63  /

PL/SQL procedure successfully completed.

SQL> 
SQL> @@jvmrmcat
SQL> -- Remove the dictionary objects created by catjvm.sql
SQL> 
SQL> -- This script must be run as a subscript of a script which sets the
SQL> -- variable jvmrmaction.
SQL> -- Possible values are
SQL> --  FULL_REMOVAL:        remove all java related objects
SQL> --  GRADE_REMOVAL:       remove java related objects for general up/downgrade
SQL> --  DOWNGRADE_x.y.z_TO_a.b.c: remove or massage system objects as appropriate
SQL> --                       when downgrading to release a.b.c
SQL> --  NONE:                do nothing
SQL> 
SQL> print jvmrmaction

JVMRMACTION
--------------------------------------------------------------------------------
NONE

SQL> 
SQL> begin if (:jvmrmaction = 'FULL_REMOVAL' or
  2            :jvmrmaction = 'GRADE_REMOVAL') and
  3           initjvmaux.startstep('JVMRMCAT') then
  4  
  5    initjvmaux.drp('drop view USER_JAVA_CLASSES');
  6    initjvmaux.drp('drop public synonym USER_JAVA_CLASSES');
  7    initjvmaux.drp('drop view ALL_JAVA_CLASSES');
  8    initjvmaux.drp('drop public synonym ALL_JAVA_CLASSES');
  9    initjvmaux.drp('drop view DBA_JAVA_CLASSES');
 10    initjvmaux.drp('drop public synonym DBA_JAVA_CLASSES');
 11    initjvmaux.drp('drop view USER_JAVA_LAYOUTS');
 12    initjvmaux.drp('drop public synonym USER_JAVA_LAYOUTS');
 13    initjvmaux.drp('drop view ALL_JAVA_LAYOUTS');
 14    initjvmaux.drp('drop public synonym ALL_JAVA_LAYOUTS');
 15    initjvmaux.drp('drop view DBA_JAVA_LAYOUTS');
 16    initjvmaux.drp('drop public synonym DBA_JAVA_LAYOUTS');
 17    initjvmaux.drp('drop view USER_JAVA_IMPLEMENTS');
 18    initjvmaux.drp('drop public synonym USER_JAVA_IMPLEMENTS');
 19    initjvmaux.drp('drop view ALL_JAVA_IMPLEMENTS');
 20    initjvmaux.drp('drop public synonym ALL_JAVA_IMPLEMENTS');
 21    initjvmaux.drp('drop view DBA_JAVA_IMPLEMENTS');
 22    initjvmaux.drp('drop public synonym DBA_JAVA_IMPLEMENTS');
 23    initjvmaux.drp('drop view USER_JAVA_INNERS');
 24    initjvmaux.drp('drop public synonym USER_JAVA_INNERS');
 25    initjvmaux.drp('drop view ALL_JAVA_INNERS');
 26    initjvmaux.drp('drop public synonym ALL_JAVA_INNERS');
 27    initjvmaux.drp('drop view DBA_JAVA_INNERS');
 28    initjvmaux.drp('drop public synonym DBA_JAVA_INNERS');
 29    initjvmaux.drp('drop view USER_JAVA_FIELDS');
 30    initjvmaux.drp('drop public synonym USER_JAVA_FIELDS');
 31    initjvmaux.drp('drop view ALL_JAVA_FIELDS');
 32    initjvmaux.drp('drop public synonym ALL_JAVA_FIELDS');
 33    initjvmaux.drp('drop view DBA_JAVA_FIELDS');
 34    initjvmaux.drp('drop public synonym DBA_JAVA_FIELDS');
 35    initjvmaux.drp('drop view USER_JAVA_METHODS');
 36    initjvmaux.drp('drop public synonym USER_JAVA_METHODS');
 37    initjvmaux.drp('drop view ALL_JAVA_METHODS');
 38    initjvmaux.drp('drop public synonym ALL_JAVA_METHODS');
 39    initjvmaux.drp('drop view DBA_JAVA_METHODS');
 40    initjvmaux.drp('drop public synonym DBA_JAVA_METHODS');
 41    initjvmaux.drp('drop view USER_JAVA_ARGUMENTS');
 42    initjvmaux.drp('drop public synonym USER_JAVA_ARGUMENTS');
 43    initjvmaux.drp('drop view ALL_JAVA_ARGUMENTS');
 44    initjvmaux.drp('drop public synonym ALL_JAVA_ARGUMENTS');
 45    initjvmaux.drp('drop view DBA_JAVA_ARGUMENTS');
 46    initjvmaux.drp('drop public synonym DBA_JAVA_ARGUMENTS');
 47    initjvmaux.drp('drop view USER_JAVA_THROWS');
 48    initjvmaux.drp('drop public synonym USER_JAVA_THROWS');
 49    initjvmaux.drp('drop view ALL_JAVA_THROWS');
 50    initjvmaux.drp('drop public synonym ALL_JAVA_THROWS');
 51    initjvmaux.drp('drop view DBA_JAVA_THROWS');
 52    initjvmaux.drp('drop public synonym DBA_JAVA_THROWS');
 53    initjvmaux.drp('drop view USER_JAVA_DERIVATIONS');
 54    initjvmaux.drp('drop public synonym USER_JAVA_DERIVATIONS');
 55    initjvmaux.drp('drop view ALL_JAVA_DERIVATIONS');
 56    initjvmaux.drp('drop public synonym ALL_JAVA_DERIVATIONS');
 57    initjvmaux.drp('drop view DBA_JAVA_DERIVATIONS');
 58    initjvmaux.drp('drop public synonym DBA_JAVA_DERIVATIONS');
 59    initjvmaux.drp('drop view USER_JAVA_RESOLVERS');
 60    initjvmaux.drp('drop public synonym USER_JAVA_RESOLVERS');
 61    initjvmaux.drp('drop view ALL_JAVA_RESOLVERS');
 62    initjvmaux.drp('drop public synonym ALL_JAVA_RESOLVERS');
 63    initjvmaux.drp('drop view DBA_JAVA_RESOLVERS');
 64    initjvmaux.drp('drop public synonym DBA_JAVA_RESOLVERS');
 65    initjvmaux.drp('drop view USER_JAVA_NCOMPS');
 66    initjvmaux.drp('drop public synonym USER_JAVA_NCOMPS');
 67    initjvmaux.drp('drop view ALL_JAVA_NCOMPS');
 68    initjvmaux.drp('drop public synonym ALL_JAVA_NCOMPS');
 69    initjvmaux.drp('drop view DBA_JAVA_NCOMPS');
 70    initjvmaux.drp('drop public synonym DBA_JAVA_NCOMPS');
 71    initjvmaux.drp('drop view USER_JAVA_COMPILER_OPTIONS');
 72    initjvmaux.drp('drop public synonym USER_JAVA_COMPILER_OPTIONS');
 73    initjvmaux.drp('drop view ALL_JAVA_COMPILER_OPTIONS');
 74    initjvmaux.drp('drop public synonym ALL_JAVA_COMPILER_OPTIONS');
 75    initjvmaux.drp('drop view DBA_JAVA_COMPILER_OPTIONS');
 76    initjvmaux.drp('drop public synonym DBA_JAVA_COMPILER_OPTIONS');
 77  
 78    initjvmaux.endstep;
 79  
 80  end if;end;
 81  /

PL/SQL procedure successfully completed.

SQL> @@jvmrmjis
SQL> -- Remove some portion of the JISish objects created by initjvm5.sql
SQL> 
SQL> -- This script must be run as a subscript of a script which sets the
SQL> -- variable jvmrmaction.
SQL> -- Possible values are
SQL> --  FULL_REMOVAL:        remove all java related objects
SQL> --  GRADE_REMOVAL:       remove java related objects for general up/downgrade
SQL> --  DOWNGRADE_x.y.z_TO_a.b.c: remove or massage system objects as appropriate
SQL> --                       when downgrading to release a.b.c
SQL> --  NONE:                do nothing
SQL> 
SQL> print jvmrmaction

JVMRMACTION
--------------------------------------------------------------------------------
NONE

SQL> 
SQL> begin if :jvmrmaction = 'DOWNGRADE_9.2.0_TO_9.0.1' and
  2           initjvmaux.startstep('JVMRMJIS') then
  3     update obj$ set status=5 where obj#=(select obj# from obj$,javasnm$
  4        where owner#=0 and type#=29 and short(+)=name and
  5        nvl(longdbcs,name)='oracle/aurora/rdbms/Compiler');
  6    commit;
  7    initjvmaux.drop_sys_class('HTTPClient/BasicAuthBox$Cancel');
  8    initjvmaux.drop_sys_class('HTTPClient/BasicAuthBox$Clear');
  9    initjvmaux.drop_sys_class('HTTPClient/BasicAuthBox$Close');
 10    initjvmaux.drop_sys_class('HTTPClient/BasicAuthBox$Ok');
 11    initjvmaux.drop_sys_class('HTTPClient/BasicAuthBox');
 12    initjvmaux.drop_sys_class('HTTPClient/ExtBufferedInputStream');
 13    initjvmaux.drop_sys_class('HTTPClient/HTTPConnection$3');
 14    initjvmaux.drop_sys_class('HTTPClient/HTTPConnection$4');
 15    initjvmaux.drop_sys_class('HTTPClient/MD5$MD5State');
 16    initjvmaux.drop_sys_class('com/sun/activation/registries/LineTokenizer');
 17    initjvmaux.drop_sys_class('com/sun/activation/registries/MailcapEntry');
 18    initjvmaux.drop_sys_class('com/sun/activation/registries/MailcapFile');
 19    initjvmaux.drop_sys_class('com/sun/activation/registries/MailcapParseException');
 20    initjvmaux.drop_sys_class('com/sun/activation/registries/MailcapTokenizer');
 21    initjvmaux.drop_sys_class('com/sun/activation/registries/MimeTypeEntry');
 22    initjvmaux.drop_sys_class('com/sun/activation/registries/MimeTypeFile');
 23    initjvmaux.drop_sys_class('com/sun/activation/viewers/ImageViewer');
 24    initjvmaux.drop_sys_class('com/sun/activation/viewers/ImageViewerCanvas');
 25    initjvmaux.drop_sys_class('com/sun/activation/viewers/TextEditor');
 26    initjvmaux.drop_sys_class('com/sun/activation/viewers/TextViewer');
 27    initjvmaux.drop_sys_class('com/sun/mail/handlers/message_rfc822');
 28    initjvmaux.drop_sys_class('com/sun/mail/handlers/multipart_mixed');
 29    initjvmaux.drop_sys_class('com/sun/mail/handlers/text_html');
 30    initjvmaux.drop_sys_class('com/sun/mail/handlers/text_plain');
 31    initjvmaux.drop_sys_class('com/sun/mail/handlers/text_xml');
 32    initjvmaux.drop_sys_class('com/sun/mail/iap/AString');
 33    initjvmaux.drop_sys_class('com/sun/mail/iap/Argument');
 34    initjvmaux.drop_sys_class('com/sun/mail/iap/Atom');
 35    initjvmaux.drop_sys_class('com/sun/mail/iap/BadCommandException');
 36    initjvmaux.drop_sys_class('com/sun/mail/iap/ByteArray');
 37    initjvmaux.drop_sys_class('com/sun/mail/iap/CommandFailedException');
 38    initjvmaux.drop_sys_class('com/sun/mail/iap/ConnectionException');
 39    initjvmaux.drop_sys_class('com/sun/mail/iap/Literal');
 40    initjvmaux.drop_sys_class('com/sun/mail/iap/ParsingException');
 41    initjvmaux.drop_sys_class('com/sun/mail/iap/Protocol');
 42    initjvmaux.drop_sys_class('com/sun/mail/iap/ProtocolException');
 43    initjvmaux.drop_sys_class('com/sun/mail/iap/Response');
 44    initjvmaux.drop_sys_class('com/sun/mail/iap/ResponseHandler');
 45    initjvmaux.drop_sys_class('com/sun/mail/iap/ResponseInputStream');
 46    initjvmaux.drop_sys_class('com/sun/mail/imap/ACL');
 47    initjvmaux.drop_sys_class('com/sun/mail/imap/DefaultFolder');
 48    initjvmaux.drop_sys_class('com/sun/mail/imap/IMAPBodyPart');
 49    initjvmaux.drop_sys_class('com/sun/mail/imap/IMAPFolder$ProtocolCommand');
 50    initjvmaux.drop_sys_class('com/sun/mail/imap/IMAPFolder');
 51    initjvmaux.drop_sys_class('com/sun/mail/imap/IMAPInputStream');
 52    initjvmaux.drop_sys_class('com/sun/mail/imap/IMAPMessage$1$FetchProfileCondition');
 53    initjvmaux.drop_sys_class('com/sun/mail/imap/IMAPMessage');
 54    initjvmaux.drop_sys_class('com/sun/mail/imap/IMAPMultipartDataSource');
 55    initjvmaux.drop_sys_class('com/sun/mail/imap/IMAPNestedMessage');
 56    initjvmaux.drop_sys_class('com/sun/mail/imap/IMAPStore$ConnectionPool');
 57    initjvmaux.drop_sys_class('com/sun/mail/imap/IMAPStore');
 58    initjvmaux.drop_sys_class('com/sun/mail/imap/LengthCounter');
 59    initjvmaux.drop_sys_class('com/sun/mail/imap/MessageLiteral');
 60    initjvmaux.drop_sys_class('com/sun/mail/imap/Quota$Resource');
 61    initjvmaux.drop_sys_class('com/sun/mail/imap/Quota');
 62    initjvmaux.drop_sys_class('com/sun/mail/imap/Rights$Right');
 63    initjvmaux.drop_sys_class('com/sun/mail/imap/Rights');
 64    initjvmaux.drop_sys_class('com/sun/mail/imap/Utility$Condition');
 65    initjvmaux.drop_sys_class('com/sun/mail/imap/Utility');
 66    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/BASE64MailboxDecoder');
 67    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/BASE64MailboxEncoder');
 68    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/BODY');
 69    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/BODYSTRUCTURE');
 70    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/ENVELOPE');
 71    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/FLAGS');
 72    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/FetchResponse');
 73    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/IMAPAddress');
 74    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/IMAPProtocol');
 75    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/IMAPResponse');
 76    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/INTERNALDATE');
 77    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/Item');
 78    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/ListInfo');
 79    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/MailboxInfo');
 80    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/MessageSet');
 81    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/Namespaces$Namespace');
 82    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/Namespaces');
 83    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/RFC822DATA');
 84    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/RFC822SIZE');
 85    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/SearchSequence');
 86    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/Status');
 87    initjvmaux.drop_sys_class('com/sun/mail/imap/protocol/UID');
 88    initjvmaux.drop_sys_class('com/sun/mail/pop3/DefaultFolder');
 89    initjvmaux.drop_sys_class('com/sun/mail/pop3/POP3Folder');
 90    initjvmaux.drop_sys_class('com/sun/mail/pop3/POP3Message');
 91    initjvmaux.drop_sys_class('com/sun/mail/pop3/POP3Store');
 92    initjvmaux.drop_sys_class('com/sun/mail/pop3/Protocol');
 93    initjvmaux.drop_sys_class('com/sun/mail/pop3/Response');
 94    initjvmaux.drop_sys_class('com/sun/mail/pop3/SharedByteArrayOutputStream');
 95    initjvmaux.drop_sys_class('com/sun/mail/pop3/Status');
 96    initjvmaux.drop_sys_class('com/sun/mail/smtp/SMTPMessage');
 97    initjvmaux.drop_sys_class('com/sun/mail/smtp/SMTPOutputStream');
 98    initjvmaux.drop_sys_class('com/sun/mail/smtp/SMTPTransport');
 99    initjvmaux.drop_sys_class('com/sun/mail/util/ASCIIUtility');
100    initjvmaux.drop_sys_class('com/sun/mail/util/BASE64DecoderStream');
101    initjvmaux.drop_sys_class('com/sun/mail/util/BASE64EncoderStream');
102    initjvmaux.drop_sys_class('com/sun/mail/util/BEncoderStream');
103    initjvmaux.drop_sys_class('com/sun/mail/util/CRLFOutputStream');
104    initjvmaux.drop_sys_class('com/sun/mail/util/LineInputStream');
105    initjvmaux.drop_sys_class('com/sun/mail/util/LineOutputStream');
106    initjvmaux.drop_sys_class('com/sun/mail/util/QDecoderStream');
107    initjvmaux.drop_sys_class('com/sun/mail/util/QEncoderStream');
108    initjvmaux.drop_sys_class('com/sun/mail/util/QPDecoderStream');
109    initjvmaux.drop_sys_class('com/sun/mail/util/QPEncoderStream');
110    initjvmaux.drop_sys_class('com/sun/mail/util/SharedByteArrayInputStream');
111    initjvmaux.drop_sys_class('com/sun/mail/util/SocketFetcher');
112    initjvmaux.drop_sys_class('com/sun/mail/util/TraceInputStream');
113    initjvmaux.drop_sys_class('com/sun/mail/util/TraceOutputStream');
114    initjvmaux.drop_sys_class('com/sun/mail/util/UUDecoderStream');
115    initjvmaux.drop_sys_class('com/sun/mail/util/UUEncoderStream');
116    initjvmaux.drop_sys_class('javax/activation/ActivationDataFlavor');
117    initjvmaux.drop_sys_class('javax/activation/CommandInfo');
118    initjvmaux.drop_sys_class('javax/activation/CommandMap');
119    initjvmaux.drop_sys_class('javax/activation/CommandObject');
120    initjvmaux.drop_sys_class('javax/activation/DataContentHandler');
121    initjvmaux.drop_sys_class('javax/activation/DataContentHandlerFactory');
122    initjvmaux.drop_sys_class('javax/activation/DataHandler$1');
123    initjvmaux.drop_sys_class('javax/activation/DataHandler');
124    initjvmaux.drop_sys_class('javax/activation/DataHandlerDataSource');
125    initjvmaux.drop_sys_class('javax/activation/DataSource');
126    initjvmaux.drop_sys_class('javax/activation/DataSourceDataContentHandler');
127    initjvmaux.drop_sys_class('javax/activation/FileDataSource');
128    initjvmaux.drop_sys_class('javax/activation/FileTypeMap');
129    initjvmaux.drop_sys_class('javax/activation/MailcapCommandMap');
130    initjvmaux.drop_sys_class('javax/activation/MimeType');
131    initjvmaux.drop_sys_class('javax/activation/MimeTypeParameterList');
132    initjvmaux.drop_sys_class('javax/activation/MimeTypeParseException');
133    initjvmaux.drop_sys_class('javax/activation/MimetypesFileTypeMap');
134    initjvmaux.drop_sys_class('javax/activation/ObjectDataContentHandler');
135    initjvmaux.drop_sys_class('javax/activation/URLDataSource');
136    initjvmaux.drop_sys_class('javax/activation/UnsupportedDataTypeException');
137    initjvmaux.drop_sys_class('javax/mail/Address');
138    initjvmaux.drop_sys_class('javax/mail/AuthenticationFailedException');
139    initjvmaux.drop_sys_class('javax/mail/Authenticator');
140    initjvmaux.drop_sys_class('javax/mail/BodyPart');
141    initjvmaux.drop_sys_class('javax/mail/EventQueue$QueueElement');
142    initjvmaux.drop_sys_class('javax/mail/EventQueue');
143    initjvmaux.drop_sys_class('javax/mail/FetchProfile$Item');
144    initjvmaux.drop_sys_class('javax/mail/FetchProfile');
145    initjvmaux.drop_sys_class('javax/mail/Flags$Flag');
146    initjvmaux.drop_sys_class('javax/mail/Flags');
147    initjvmaux.drop_sys_class('javax/mail/Folder$1');
148    initjvmaux.drop_sys_class('javax/mail/Folder');
149    initjvmaux.drop_sys_class('javax/mail/FolderClosedException');
150    initjvmaux.drop_sys_class('javax/mail/FolderNotFoundException');
151    initjvmaux.drop_sys_class('javax/mail/Header');
152    initjvmaux.drop_sys_class('javax/mail/IllegalWriteException');
153    initjvmaux.drop_sys_class('javax/mail/Message$RecipientType');
154    initjvmaux.drop_sys_class('javax/mail/Message');
155    initjvmaux.drop_sys_class('javax/mail/MessageAware');
156    initjvmaux.drop_sys_class('javax/mail/MessageContext');
157    initjvmaux.drop_sys_class('javax/mail/MessageRemovedException');
158    initjvmaux.drop_sys_class('javax/mail/MessagingException');
159    initjvmaux.drop_sys_class('javax/mail/MethodNotSupportedException');
160    initjvmaux.drop_sys_class('javax/mail/Multipart');
161    initjvmaux.drop_sys_class('javax/mail/MultipartDataSource');
162    initjvmaux.drop_sys_class('javax/mail/NoSuchProviderException');
163    initjvmaux.drop_sys_class('javax/mail/Part');
164    initjvmaux.drop_sys_class('javax/mail/PasswordAuthentication');
165    initjvmaux.drop_sys_class('javax/mail/Provider$Type');
166    initjvmaux.drop_sys_class('javax/mail/Provider');
167    initjvmaux.drop_sys_class('javax/mail/ReadOnlyFolderException');
168    initjvmaux.drop_sys_class('javax/mail/SendFailedException');
169    initjvmaux.drop_sys_class('javax/mail/Service$1');
170    initjvmaux.drop_sys_class('javax/mail/Service');
171    initjvmaux.drop_sys_class('javax/mail/Session');
172    initjvmaux.drop_sys_class('javax/mail/Store');
173    initjvmaux.drop_sys_class('javax/mail/StoreClosedException');
174    initjvmaux.drop_sys_class('javax/mail/Transport');
175    initjvmaux.drop_sys_class('javax/mail/UIDFolder$FetchProfileItem');
176    initjvmaux.drop_sys_class('javax/mail/UIDFolder');
177    initjvmaux.drop_sys_class('javax/mail/URLName');
178    initjvmaux.drop_sys_class('javax/mail/event/ConnectionAdapter');
179    initjvmaux.drop_sys_class('javax/mail/event/ConnectionEvent');
180    initjvmaux.drop_sys_class('javax/mail/event/ConnectionListener');
181    initjvmaux.drop_sys_class('javax/mail/event/FolderAdapter');
182    initjvmaux.drop_sys_class('javax/mail/event/FolderEvent');
183    initjvmaux.drop_sys_class('javax/mail/event/FolderListener');
184    initjvmaux.drop_sys_class('javax/mail/event/MailEvent');
185    initjvmaux.drop_sys_class('javax/mail/event/MessageChangedEvent');
186    initjvmaux.drop_sys_class('javax/mail/event/MessageChangedListener');
187    initjvmaux.drop_sys_class('javax/mail/event/MessageCountAdapter');
188    initjvmaux.drop_sys_class('javax/mail/event/MessageCountEvent');
189    initjvmaux.drop_sys_class('javax/mail/event/MessageCountListener');
190    initjvmaux.drop_sys_class('javax/mail/event/StoreEvent');
191    initjvmaux.drop_sys_class('javax/mail/event/StoreListener');
192    initjvmaux.drop_sys_class('javax/mail/event/TransportAdapter');
193    initjvmaux.drop_sys_class('javax/mail/event/TransportEvent');
194    initjvmaux.drop_sys_class('javax/mail/event/TransportListener');
195    initjvmaux.drop_sys_class('javax/mail/internet/AddressException');
196    initjvmaux.drop_sys_class('javax/mail/internet/AsciiOutputStream');
197    initjvmaux.drop_sys_class('javax/mail/internet/ContentDisposition');
198    initjvmaux.drop_sys_class('javax/mail/internet/ContentType');
199    initjvmaux.drop_sys_class('javax/mail/internet/HeaderTokenizer$Token');
200    initjvmaux.drop_sys_class('javax/mail/internet/HeaderTokenizer');
201    initjvmaux.drop_sys_class('javax/mail/internet/InternetAddress');
202    initjvmaux.drop_sys_class('javax/mail/internet/InternetHeaders');
203    initjvmaux.drop_sys_class('javax/mail/internet/MailDateFormat');
204    initjvmaux.drop_sys_class('javax/mail/internet/MailDateParser');
205    initjvmaux.drop_sys_class('javax/mail/internet/MimeBodyPart');
206    initjvmaux.drop_sys_class('javax/mail/internet/MimeMessage$RecipientType');
207    initjvmaux.drop_sys_class('javax/mail/internet/MimeMessage');
208    initjvmaux.drop_sys_class('javax/mail/internet/MimeMultipart');
209    initjvmaux.drop_sys_class('javax/mail/internet/MimePart');
210    initjvmaux.drop_sys_class('javax/mail/internet/MimePartDataSource');
211    initjvmaux.drop_sys_class('javax/mail/internet/MimeUtility$1$NullInputStream');
212    initjvmaux.drop_sys_class('javax/mail/internet/MimeUtility');
213    initjvmaux.drop_sys_class('javax/mail/internet/NewsAddress');
214    initjvmaux.drop_sys_class('javax/mail/internet/ParameterList');
215    initjvmaux.drop_sys_class('javax/mail/internet/ParseException');
216    initjvmaux.drop_sys_class('javax/mail/internet/SharedInputStream');
217    initjvmaux.drop_sys_class('javax/mail/internet/UniqueValue');
218    initjvmaux.drop_sys_class('javax/mail/internet/hdr');
219    initjvmaux.drop_sys_class('javax/mail/internet/matchEnum');
220    initjvmaux.drop_sys_class('javax/mail/search/AddressStringTerm');
221    initjvmaux.drop_sys_class('javax/mail/search/AddressTerm');
222    initjvmaux.drop_sys_class('javax/mail/search/AndTerm');
223    initjvmaux.drop_sys_class('javax/mail/search/BodyTerm');
224    initjvmaux.drop_sys_class('javax/mail/search/ComparisonTerm');
225    initjvmaux.drop_sys_class('javax/mail/search/DateTerm');
226    initjvmaux.drop_sys_class('javax/mail/search/FlagTerm');
227    initjvmaux.drop_sys_class('javax/mail/search/FromStringTerm');
228    initjvmaux.drop_sys_class('javax/mail/search/FromTerm');
229    initjvmaux.drop_sys_class('javax/mail/search/HeaderTerm');
230    initjvmaux.drop_sys_class('javax/mail/search/IntegerComparisonTerm');
231    initjvmaux.drop_sys_class('javax/mail/search/MessageIDTerm');
232    initjvmaux.drop_sys_class('javax/mail/search/MessageNumberTerm');
233    initjvmaux.drop_sys_class('javax/mail/search/NotTerm');
234    initjvmaux.drop_sys_class('javax/mail/search/OrTerm');
235    initjvmaux.drop_sys_class('javax/mail/search/ReceivedDateTerm');
236    initjvmaux.drop_sys_class('javax/mail/search/RecipientStringTerm');
237    initjvmaux.drop_sys_class('javax/mail/search/RecipientTerm');
238    initjvmaux.drop_sys_class('javax/mail/search/SearchException');
239    initjvmaux.drop_sys_class('javax/mail/search/SearchTerm');
240    initjvmaux.drop_sys_class('javax/mail/search/SentDateTerm');
241    initjvmaux.drop_sys_class('javax/mail/search/SizeTerm');
242    initjvmaux.drop_sys_class('javax/mail/search/StringTerm');
243    initjvmaux.drop_sys_class('javax/mail/search/SubjectTerm');
244    initjvmaux.drop_sys_resource('javax/net/ssl/SSLSession.classx');
245    initjvmaux.drop_sys_resource('META-INF/MANIFEST.MF');
246    initjvmaux.drop_sys_resource('META-INF/javamail.charset.map');
247    initjvmaux.drop_sys_resource('META-INF/javamail.default.address.map');
248    initjvmaux.drop_sys_resource('META-INF/javamail.default.providers');
249    initjvmaux.drop_sys_resource('META-INF/mailcap');
250    initjvmaux.drop_sys_resource('META-INF/mailcap.default');
251    initjvmaux.drop_sys_resource('META-INF/mimetypes.default');
252    initjvmaux.endstep;
253  end if; end;
254  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'DOWNGRADE_9.2.0_TO_9.0.1' and
  2           initjvmaux.startstep('JVRMJIS_COMPILER_ON') then
  3     update obj$ set status=1 where obj#=(select obj# from obj$,javasnm$
  4        where owner#=0 and type#=29 and short(+)=name and
  5        nvl(longdbcs,name)='oracle/aurora/rdbms/Compiler');
  6    commit;
  7    initjvmaux.endstep;
  8  end if; end;
  9  /

PL/SQL procedure successfully completed.

SQL> @@jvmrmdbj
SQL> -- Remove some portion of the dictionary objects created by initdbj.sql
SQL> 
SQL> -- This script must be run as a subscript of a script which sets the
SQL> -- variable jvmrmaction.
SQL> -- Possible values are
SQL> --  FULL_REMOVAL:        remove all java related objects
SQL> --  GRADE_REMOVAL:       remove java related objects for general up/downgrade
SQL> --  DOWNGRADE_x.y.z_TO_a.b.c: remove or massage system objects as appropriate
SQL> --                       when downgrading to release a.b.c
SQL> --  NONE:                do nothing
SQL> 
SQL> 
SQL> print jvmrmaction

JVMRMACTION
--------------------------------------------------------------------------------
NONE

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or
  2           (:jvmrmaction = 'GRADE_REMOVAL' and
  3            initjvmaux.startstep('JVMRMDBJ')) then
  4  
  5  initjvmaux.drp('drop package dbms_java');
  6  initjvmaux.drp('drop PUBLIC SYNONYM dbms_java');
  7  initjvmaux.drp('drop FUNCTION dbj_long_name');
  8  initjvmaux.drp('drop function "NameFromLastDDL"');
  9  initjvmaux.drp('drop PUBLIC SYNONYM "NameFromLastDDL"');
 10  initjvmaux.drp('drop FUNCTION dbj_short_name');
 11  initjvmaux.drp('drop PUBLIC SYNONYM dbj_short_name');
 12  
 13  if :jvmrmaction = 'GRADE_REMOVAL' then initjvmaux.endstep; end if;
 14  
 15  end if;end;
 16  /

PL/SQL procedure successfully completed.

SQL> @@jvmrmsec
SQL> -- Remove some portion of the dictionary objects created by initsec.sql
SQL> 
SQL> -- This script must be run as a subscript of a script which sets the
SQL> -- variable jvmrmaction.
SQL> -- Possible values are
SQL> --  FULL_REMOVAL:        remove all java related objects
SQL> --  GRADE_REMOVAL:       remove java related objects for general up/downgrade
SQL> --  DOWNGRADE_x.y.z_TO_a.b.c: remove or massage system objects as appropriate
SQL> --                       when downgrading to release a.b.c
SQL> --  NONE:                do nothing
SQL> 
SQL> print jvmrmaction

JVMRMACTION
--------------------------------------------------------------------------------
NONE

SQL> 
SQL> --- The following form will generate errors if the view dba_java_policy
SQL> --- is not yet defined, as will typically be the case when this script is
SQL> --- called from initsec.  These errors can be ignored.
SQL> 
SQL> begin if :jvmrmaction = 'DOWNGRADE_8.1.7_TO_8.1.6' then
  2  
  3  if initjvmaux.startstep('REMOVE_JAVA_DEPLOY_PERMISSIONS') then
  4  
  5  --- remove JAVA_DEPLOY permissions
  6  initjvmaux.exec('
  7  declare
  8    CURSOR D is
  9      select SEQ from dba_java_policy where GRANTEE = ''JAVA_DEPLOY'' ;
 10    ROW integer;
 11  begin
 12    open D;
 13    loop
 14      fetch D into row;
 15      exit when D%NOTFOUND;
 16      -- dbms_output.put_line(row);
 17      dbms_java.disable_permission(row);
 18      dbms_java.delete_permission(row);
 19    end loop;
 20  end;
 21  ');
 22  
 23  
 24  initjvmaux.endstep; end if;
 25  
 26  end if; end;
 27  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'DOWNGRADE_10.1.0_TO_9.2.0' then
  2  
  3  if initjvmaux.startstep('REMOVE_JAVA_UTIL_LOGGING_LOGGINGPERM') then
  4    initjvmaux.exec('
  5      declare
  6        CURSOR D is
  7          select SEQ from dba_java_policy where
  8            ( name like ''%java.util.logging.LoggingPermission%'' and
  9              type_name like ''%.PolicyTablePermission'' ) or
 10            type_name = ''java.util.logging.LoggingPermission'' order by type_name;
 11        ROW integer;
 12      begin
 13        open D;
 14        loop
 15          fetch D into row;
 16          exit when D%NOTFOUND;
 17          -- dbms_output.put_line(row);
 18          dbms_java.disable_permission(row);
 19          dbms_java.delete_permission(row);
 20        end loop;
 21      end;
 22        ');
 23  
 24    initjvmaux.endstep;
 25  end if;
 26  
 27  if initjvmaux.startstep('REMOVE_JAVAX_SECURITY_AUTH_AUTHPERM') then
 28    initjvmaux.exec('
 29      declare
 30        CURSOR D is
 31          select SEQ from dba_java_policy where
 32            ( name like ''%javax.security.auth.AuthPermission%'' and
 33              type_name like ''%.PolicyTablePermission'' ) or
 34            type_name = ''javax.security.auth.AuthPermission'' order by type_name;
 35        ROW integer;
 36      begin
 37        open D;
 38        loop
 39          fetch D into row;
 40          exit when D%NOTFOUND;
 41          -- dbms_output.put_line(row);
 42          dbms_java.disable_permission(row);
 43          dbms_java.delete_permission(row);
 44        end loop;
 45      end;
 46        ');
 47  
 48    initjvmaux.endstep;
 49  end if;
 50  
 51  if initjvmaux.startstep('REMOVE_JAVA_AWT_AWTPERMISSION') then
 52    initjvmaux.exec('
 53      declare
 54        CURSOR D is
 55          select SEQ from dba_java_policy where
 56            ( name like ''%java.awt.AWTPermission%'' and
 57              type_name like ''%.PolicyTablePermission'' ) or
 58            type_name = ''java.awt.AWTPermission'' order by type_name;
 59        ROW integer;
 60      begin
 61        open D;
 62        loop
 63          fetch D into row;
 64          exit when D%NOTFOUND;
 65          -- dbms_output.put_line(row);
 66          dbms_java.disable_permission(row);
 67          dbms_java.delete_permission(row);
 68        end loop;
 69      end;
 70        ');
 71  
 72    initjvmaux.endstep;
 73  end if;
 74  
 75  if initjvmaux.startstep('REMOVE_JAVAX_NET_SSL_SSLPERMISSION') then
 76    initjvmaux.exec('
 77      declare
 78        CURSOR D is
 79          select SEQ from dba_java_policy where
 80            ( name like ''%javax.net.ssl.SSLPermission%'' and
 81              type_name like ''%.PolicyTablePermission'' ) or
 82            type_name = ''javax.net.ssl.SSLPermission'' order by type_name;
 83        ROW integer;
 84      begin
 85        open D;
 86        loop
 87          fetch D into row;
 88          exit when D%NOTFOUND;
 89          -- dbms_output.put_line(row);
 90          dbms_java.disable_permission(row);
 91          dbms_java.delete_permission(row);
 92        end loop;
 93      end;
 94        ');
 95  
 96    initjvmaux.endstep;
 97  end if;
 98  
 99  if initjvmaux.startstep('REMOVE_JAVA_SECURITY_ALLPERMISSION') then
100    initjvmaux.exec('
101      declare
102        CURSOR D is
103          select SEQ from dba_java_policy where
104            ( name like ''%java.security.AllPermission%'' and
105              type_name like ''%.PolicyTablePermission'' ) or
106              type_name = ''java.security.AllPermission'' order by type_name;
107        ROW integer;
108      begin
109        open D;
110        loop
111          fetch D into row;
112          exit when D%NOTFOUND;
113          -- dbms_output.put_line(row);
114          dbms_java.disable_permission(row);
115          dbms_java.delete_permission(row);
116        end loop;
117      end;
118        ');
119  
120    initjvmaux.endstep;
121  end if;
122  end if;end;
123  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'DOWNGRADE_9.2.0_TO_9.0.1' then
  2  
  3  if initjvmaux.startstep('REMOVE_JAVA_DEPLOY_FILE_PERMISSIONS') then
  4  
  5    initjvmaux.exec('
  6    begin
  7    dbms_java.revoke_permission( ''JAVA_DEPLOY'', ''SYS:java.io.FilePermission'', ''javavm/admin/*'', ''write'' );
  8    dbms_java.revoke_permission( ''JAVA_DEPLOY'', ''SYS:java.io.FilePermission'', ''javavm/deploy/*'', ''read'' );
  9    end;
 10    ');
 11  
 12    initjvmaux.endstep;
 13  
 14  end if;
 15  
 16  if initjvmaux.startstep('REMOVE_SQLPERMISSION_PERMISSIONS') then
 17  
 18    --- remove SQLPermission related rows
 19    initjvmaux.exec('
 20      declare
 21        CURSOR D is
 22          select SEQ from dba_java_policy where
 23            ( name like ''%java.sql.SQLPermission%'' and
 24              type_name like ''%.PolicyTablePermission'' ) or
 25            type_name = ''java.sql.SQLPermission'' order by type_name;
 26        ROW integer;
 27      begin
 28        open D;
 29        loop
 30          fetch D into row;
 31          exit when D%NOTFOUND;
 32          -- dbms_output.put_line(row);
 33          dbms_java.disable_permission(row);
 34          dbms_java.delete_permission(row);
 35        end loop;
 36      end;
 37        ');
 38  
 39    initjvmaux.endstep; end if;
 40  
 41  end if; end;
 42  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or
  2           (:jvmrmaction = 'DOWNGRADE_8.1.7_TO_8.1.6' and
  3            initjvmaux.startstep('DROP_817_SECURITY_TABLES_ETC')) then
  4  
  5  initjvmaux.drp('drop TABLE java$policy$shared$table');
  6  initjvmaux.drp('drop ROLE java_deploy');
  7  
  8  if :jvmrmaction = 'DOWNGRADE_8.1.7_TO_8.1.6' then initjvmaux.endstep; end if;
  9  
 10  end if;end;
 11  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or
  2           (:jvmrmaction = 'DOWNGRADE_8.1.6_TO_8.1.5' and
  3            initjvmaux.startstep('DROP_816_SECURITY_TABLES_ETC')) then
  4  
  5  initjvmaux.drp('drop TABLE java$policy$');
  6  initjvmaux.drp('drop SEQUENCE java$policy$sequence$');
  7  initjvmaux.drp('drop VIEW dba_java_policy');
  8  initjvmaux.drp('drop PUBLIC SYNONYM dba_java_policy');
  9  initjvmaux.drp('drop VIEW user_java_policy');
 10  initjvmaux.drp('drop PUBLIC SYNONYM user_java_policy');
 11  initjvmaux.drp('drop ROLE java_admin');
 12  
 13  if :jvmrmaction = 'DOWNGRADE_8.1.6_TO_8.1.5' then initjvmaux.endstep; end if;
 14  
 15  end if;end;
 16  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' then
  2  
  3  -- We go through and drop all shared data objects with names
  4  -- beginning with JAVA$POLICY$SHARED$
  5  
  6  initjvmaux.exec('delete from obj$ where type#=56 and name like ''JAVA$POLICY$SHARED$%''');
  7  
  8  end if;end;
  9  /

PL/SQL procedure successfully completed.

SQL> @@jvmrmxa
SQL> -- Remove some portion of the dictionary objects created by initxa.sql
SQL> 
SQL> -- This script must be run as a subscript of a script which sets the
SQL> -- variable jvmrmaction.
SQL> -- Possible values are
SQL> --  FULL_REMOVAL:        remove all java related objects
SQL> --  GRADE_REMOVAL:       remove java related objects for general up/downgrade
SQL> --  DOWNGRADE_x.y.z_TO_a.b.c: remove or massage system objects as appropriate
SQL> --                       when downgrading to release a.b.c
SQL> --  NONE:                do nothing
SQL> 
SQL> print jvmrmaction

JVMRMACTION
--------------------------------------------------------------------------------
NONE

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or
  2           (:jvmrmaction = 'GRADE_REMOVAL' and
  3            initjvmaux.startstep('JVMRMXA')) then
  4  
  5  initjvmaux.drp('drop package JAVA_XA');
  6  initjvmaux.drp('drop PUBLIC SYNONYM JAVA_XA');
  7  
  8  if :jvmrmaction = 'GRADE_REMOVAL' then initjvmaux.endstep; end if;
  9  
 10  end if;end;
 11  /

PL/SQL procedure successfully completed.

SQL> @@jvmrmprefs
SQL> -- Remove some portion of the dictionary objects created by initprefs.sql
SQL> 
SQL> -- This script must be run as a subscript of a script which sets the
SQL> -- variable jvmrmaction.
SQL> -- Possible values are
SQL> --  FULL_REMOVAL:        remove all java related objects
SQL> --  GRADE_REMOVAL:       remove java related objects for general up/downgrade
SQL> --  DOWNGRADE_x.y.z_TO_a.b.c: remove or massage system objects as appropriate
SQL> --                       when downgrading to release a.b.c
SQL> --  NONE:                do nothing
SQL> 
SQL> print jvmrmaction

JVMRMACTION
--------------------------------------------------------------------------------
NONE

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or
  2           ((:jvmrmaction = 'GRADE_REMOVAL' or
  3           :jvmrmaction = 'DOWNGRADE_10.1.0_TO_9.2.0') and
  4            initjvmaux.startstep('JVMRMPREFS')) then
  5  
  6  initjvmaux.drp('drop table JAVA$PREFS$');
  7  initjvmaux.drp('drop sequence JAVA$PREFS$SEQ$');
  8  
  9  if :jvmrmaction = 'GRADE_REMOVAL' or
 10     :jvmrmaction = 'DOWNGRADE_10.1.0_TO_9.2.0'
 11     then initjvmaux.endstep; end if;
 12  
 13  end if;end;
 14  /

PL/SQL procedure successfully completed.

SQL> 
SQL> 
SQL> 
SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or :jvmrmaction = 'DOWNGRADE_10.1.0_TO_9.2.0' then
  2  initjvmaux.drp('drop package sqljutl2');
  3  initjvmaux.drp('drop package utl_dbws');
  4  end if; end;
  5  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or :jvmrmaction = 'DOWNGRADE_10.2.0_TO_10.1.0' then
  2  initjvmaux.drp('drop package jvmfcb');
  3  initjvmaux.drp('drop package dbms_jvm_exp_perms');
  4  initjvmaux.drp('drop public synonym dbms_jvm_exp_perms');
  5  end if; end;
  6  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or :jvmrmaction = 'DOWNGRADE_11.1.0_TO_10.2.0' then
  2  initjvmaux.drp('drop table javajar$');
  3  initjvmaux.drp('drop table javajarobjects$');
  4  initjvmaux.drp('drop table java$jvm$runtime$parameters');
  5  initjvmaux.drp('drop table java$mc$');
  6  initjvmaux.drp('drop table java$compiler$options');
  7  initjvmaux.drp('drop table java$jvm$rjbc');
  8  initjvmaux.drp('drop package jvmrjbc');
  9  end if; end;
 10  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' or :jvmrmaction = 'DOWNGRADE_11.2.0_TO_11.0.0' then
  2  initjvmaux.drp('drop table java$method$metadata');
  3  initjvmaux.drp('drop table java$mc$deps');
  4  initjvmaux.drp('drop package dbms_java_definers');
  5  initjvmaux.drp('drop table javanegdeps$');
  6  initjvmaux.drp('drop table java$runtime$exec$user$');
  7  end if; end;
  8  /

PL/SQL procedure successfully completed.

SQL> 
SQL> /*
SQL>   The following statements containing calls to rmjvm may generate errors
SQL>   if java has never been installed.  Such errors are harmless and may be
SQL>   ignored.  If java has been installed, these statements may take tens
SQL>   of minutes to run.
SQL> */
SQL> 
SQL> begin if :jvmrmaction = 'FULL_REMOVAL' then
  2    rmjvm.run(true);
  3    initjvmaux.endaction;
  4    dbms_registry.removed('JAVAVM');
  5  end if;end;
  6  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'GRADE_REMOVAL' and :jvmudaction = 'DOWNGRADE' then
  2    if initjvmaux.startstep('RMJVM_RUN') then
  3      rmjvm.run(false);
  4    initjvmaux.endstep; end if;
  5  end if;end;
  6  /

PL/SQL procedure successfully completed.

SQL> 
SQL> declare trash varchar2(30);
  2  begin if :jvmrmaction = 'GRADE_REMOVAL' and
  3           :jvmudaction = 'DOWNGRADE' then
  4    if initjvmaux.startstep('DOWNGRADE_VERSION') then
  5    if :jvmudsubaction = 'DOWNGRADE_11.2.0_TO_11.1.0' or
  6       :jvmudsubaction = 'DOWNGRADE_11.2.0_TO_10.2.0' or
  7       :jvmudsubaction = 'DOWNGRADE_11.2.0_TO_10.1.0'
  8    then
  9      null;
 10    elsif :jvmudsubaction = 'DOWNGRADE_11.2.0_TO_9.2.0' or
 11          :jvmudsubaction = 'DOWNGRADE_11.2.0_TO_9.0.1' then
 12      trash := dbms_java_test.funcall('-downgrade_version',' ',28, 0);
 13      trash := dbms_java_test.funcall('-downgrade_version',' ',29, 6);
 14      trash := dbms_java_test.funcall('-downgrade_version',' ',30, 1);
 15    else
 16      trash := dbms_java_test.funcall('-downgrade_version',' ',29, 4);
 17    end if;
 18    initjvmaux.endstep; end if;
 19  end if;end;
 20  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'NONE' then
  2    initjvmaux.endaction;
  3    initjvmaux.setloaded;
  4   end if;
  5  end;
  6  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction = 'NONE' then
  2     if dbms_java.full_ncomp_enabled = 'OK' then null; end if;
  3   end if;
  4  end;
  5  /

PL/SQL procedure successfully completed.

SQL> 
SQL> begin if :jvmrmaction != 'NONE' then
  2    dbms_output.put_line('drop package initjvmaux');
  3    execute immediate 'drop package initjvmaux';
  4    dbms_output.put_line('drop package rmjvm');
  5    execute immediate 'drop package rmjvm';
  6    dbms_output.put_line('drop table java$rmjvm$aux');
  7    execute immediate 'drop table java$rmjvm$aux';
  8    dbms_output.put_line('drop table java$rmjvm$aux2');
  9    execute immediate 'drop table java$rmjvm$aux2';
 10    dbms_output.put_line('#### Done backing out of java installation.');
 11   end if;
 12  end;
 13  /

PL/SQL procedure successfully completed.

SQL> 
SQL> 
SQL> @/u01/app/oracle/product/11.2.0.4/db_1/xdk/admin/initxml.sql;
SQL> Rem
SQL> Rem $Header: xdk/admin/initxml.sql /st_xdk_11.2.0/1 2013/03/01 15:06:05 mjaeger Exp $
SQL> Rem
SQL> Rem initxml.sql
SQL> Rem
SQL> Rem Copyright (c) 1999, 2013, Oracle and/or its affiliates.
SQL> Rem All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      initxml.sql - INITialize (load) XML components in the database
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      Loads xml components into the the database
SQL> Rem
SQL> Rem    NOTES
SQL> Rem
SQL> Rem MODIFIED (MM/DD/YY)
SQL> Rem mjaeger   02/26/13 - bug 16357699: cosmetic changes, diagnosibility
SQL> Rem kmuthiah  03/23/05 - check for errors in xquery
SQL> Rem kmuthiah  02/23/05 - load xquery.jar
SQL> Rem kkarun    05/31/04 - update for unified dom
SQL> Rem kkarun    05/12/04 - update for 10g
SQL> Rem mjaeger   09/18/03 - bug 3015638: load XSU jar, check XSU classes
SQL> Rem kkarun    06/05/03 - fix bug 2973904
SQL> Rem kkarun    04/16/03 - update pkg list
SQL> Rem kkarun    03/25/03 - add -install
SQL> Rem kkarun    03/25/03 - use dbms_registry vars
SQL> Rem kkarun    11/12/02 - update version
SQL> Rem kkarun    09/26/02 - remove classgen
SQL> Rem kkarun    05/30/02 - remove plsql
SQL> Rem tyu       03/18/02 - call dbmsxsu.sql after xsu12.jar.
SQL> Rem bcchang   03/15/02 - Create xsu packages.
SQL> Rem kkarun    02/13/02 - update version
SQL> Rem kkarun    12/05/01 - update to use registry
SQL> Rem kkarun    05/18/01 - update xsu path
SQL> Rem kkarun    04/04/01 - add xsu
SQL> Rem kkarun    01/29/01 - Fix paths
SQL> Rem kkarun    04/07/00 - update initxml.sql
SQL> Rem nramakri  10/21/99 - Created
SQL> Rem
SQL> 
SQL> -- Turn on options so that we can see the output from -verbose.
SQL> set serveroutput on size unlimited;
SQL> CALL dbms_java.set_output(1000000);

Call completed.

SQL> 
SQL> EXECUTE dbms_registry.loading('XML', 'Oracle XDK', 'xmlvalidate');

PL/SQL procedure successfully completed.

SQL> 
SQL> -- The following is a kludge, because the servlet.jar and xdb.jar files
SQL> -- are part of the XDB component, and they shouldn't get loaded
SQL> -- by the XML component (aka XDK).
SQL> -- But the problem is that XSU (part of XDK)
SQL> -- (as well as other parts of the XDK for Java)
SQL> -- depends on the XMLType, and that is part of XDB.
SQL> -- Ideally what we want is a separate jar file
SQL> -- to load the XMLType and nothing else,
SQL> -- so that we don't have to load the entire XDB here.
SQL> -- As of rdbms version 10.1.0.2, this bit of the XDB
SQL> -- will _not_ get loaded again when catjava.sql calls catxdbj.sql
SQL> -- (it has been commented out).
SQL> -- Please note that in rdbms version 9.2.0,
SQL> -- we loaded servlet.jar and xdb.jar in file initxml.sql,
SQL> -- so it _is_ a proven method.
SQL> -- xmlparserv2.jar depends on XMLType.class from xdb.jar
SQL> 
SQL> -- The undocumented flag "-install" is supposed to cause loadjava
SQL> -- to ignore any classes that are in classes.bin
SQL> -- (i.e., classes that belong to the Java runtime in the database).
SQL> 
SQL> create or replace procedure xdk_load_jar(jar varchar2) is
  2    cmd varchar2(1000);
  3  begin
  4    cmd := '-verbose -resolve -grant PUBLIC -synonym -install ' || jar;
  5    dbms_java.loadjava(cmd);
  6  end;
  7  /

Procedure created.

SQL> 
SQL> show errors;
No errors.
SQL> 
SQL> CALL xdk_load_jar('rdbms/jlib/servlet.jar');
arguments: '-kprb' '-verbose' '-resolve' '-grant' 'PUBLIC' '-synonym' '-install'
'rdbms/jlib/servlet.jar'
creating : resource META-INF/MANIFEST.MF
creating : class javax/servlet/GenericServlet
creating : class javax/servlet/RequestDispatcher
creating : class javax/servlet/Servlet
creating : class javax/servlet/ServletConfig
creating : class javax/servlet/ServletContext
creating : class javax/servlet/ServletException
creating : class javax/servlet/ServletInputStream
creating : class javax/servlet/ServletOutputStream
creating : class javax/servlet/ServletRequest
creating : class javax/servlet/ServletResponse
creating : class javax/servlet/SingleThreadModel
creating : class javax/servlet/UnavailableException
creating : resource javax/servlet/LocalStrings.properties
creating : class javax/servlet/http/Cookie
creating : class javax/servlet/http/HttpServlet
creating : class javax/servlet/http/HttpServletRequest
creating : class javax/servlet/http/HttpServletResponse
creating : class javax/servlet/http/HttpSession
creating : class javax/servlet/http/HttpSessionBindingEvent
creating : class javax/servlet/http/HttpSessionBindingListener
creating : class javax/servlet/http/HttpSessionContext
creating : class javax/servlet/http/HttpUtils
creating : class javax/servlet/http/NoBodyOutputStream
creating : class javax/servlet/http/NoBodyResponse
creating : resource javax/servlet/http/LocalStrings.properties
creating : class javax/servlet/jsp/HttpJspPage
creating : class javax/servlet/jsp/JspEngineInfo
creating : class javax/servlet/jsp/JspException
creating : class javax/servlet/jsp/JspFactory
creating : class javax/servlet/jsp/JspPage
creating : class javax/servlet/jsp/JspTagException
creating : class javax/servlet/jsp/JspWriter
creating : class javax/servlet/jsp/PageContext
creating : class javax/servlet/jsp/tagext/BodyContent
creating : class javax/servlet/jsp/tagext/BodyTag
creating : class javax/servlet/jsp/tagext/BodyTagSupport
creating : class javax/servlet/jsp/tagext/Tag
creating : class javax/servlet/jsp/tagext/TagAttributeInfo
creating : class javax/servlet/jsp/tagext/TagData
creating : class javax/servlet/jsp/tagext/TagExtraInfo
creating : class javax/servlet/jsp/tagext/TagInfo
creating : class javax/servlet/jsp/tagext/TagLibraryInfo
creating : class javax/servlet/jsp/tagext/TagSupport
creating : class javax/servlet/jsp/tagext/VariableInfo
granting : execute on resource META-INF/MANIFEST.MF to PUBLIC
skipping : resource META-INF/MANIFEST.MF
granting : execute on class javax/servlet/GenericServlet to PUBLIC
resolving: class javax/servlet/GenericServlet
synonym  : javax/servlet/GenericServlet
granting : execute on class javax/servlet/RequestDispatcher to PUBLIC
skipping : class javax/servlet/RequestDispatcher
synonym  : javax/servlet/RequestDispatcher
granting : execute on class javax/servlet/Servlet to PUBLIC
skipping : class javax/servlet/Servlet
synonym  : javax/servlet/Servlet
granting : execute on class javax/servlet/ServletConfig to PUBLIC
skipping : class javax/servlet/ServletConfig
synonym  : javax/servlet/ServletConfig
granting : execute on class javax/servlet/ServletContext to PUBLIC
skipping : class javax/servlet/ServletContext
synonym  : javax/servlet/ServletContext
granting : execute on class javax/servlet/ServletException to PUBLIC
skipping : class javax/servlet/ServletException
synonym  : javax/servlet/ServletException
granting : execute on class javax/servlet/ServletInputStream to PUBLIC
skipping : class javax/servlet/ServletInputStream
synonym  : javax/servlet/ServletInputStream
granting : execute on class javax/servlet/ServletOutputStream to PUBLIC
skipping : class javax/servlet/ServletOutputStream
synonym  : javax/servlet/ServletOutputStream
granting : execute on class javax/servlet/ServletRequest to PUBLIC
skipping : class javax/servlet/ServletRequest
synonym  : javax/servlet/ServletRequest
granting : execute on class javax/servlet/ServletResponse to PUBLIC
skipping : class javax/servlet/ServletResponse
synonym  : javax/servlet/ServletResponse
granting : execute on class javax/servlet/SingleThreadModel to PUBLIC
resolving: class javax/servlet/SingleThreadModel
synonym  : javax/servlet/SingleThreadModel
granting : execute on class javax/servlet/UnavailableException to PUBLIC
resolving: class javax/servlet/UnavailableException
synonym  : javax/servlet/UnavailableException
granting : execute on resource javax/servlet/LocalStrings.properties to PUBLIC
skipping : resource javax/servlet/LocalStrings.properties
granting : execute on class javax/servlet/http/Cookie to PUBLIC
resolving: class javax/servlet/http/Cookie
synonym  : javax/servlet/http/Cookie
granting : execute on class javax/servlet/http/HttpServlet to PUBLIC
resolving: class javax/servlet/http/HttpServlet
synonym  : javax/servlet/http/HttpServlet
granting : execute on class javax/servlet/http/HttpServletRequest to PUBLIC
skipping : class javax/servlet/http/HttpServletRequest
synonym  : javax/servlet/http/HttpServletRequest
granting : execute on class javax/servlet/http/HttpServletResponse to PUBLIC
skipping : class javax/servlet/http/HttpServletResponse
synonym  : javax/servlet/http/HttpServletResponse
granting : execute on class javax/servlet/http/HttpSession to PUBLIC
skipping : class javax/servlet/http/HttpSession
synonym  : javax/servlet/http/HttpSession
granting : execute on class javax/servlet/http/HttpSessionBindingEvent to PUBLIC
resolving: class javax/servlet/http/HttpSessionBindingEvent
synonym  : javax/servlet/http/HttpSessionBindingEvent
granting : execute on class javax/servlet/http/HttpSessionBindingListener to
PUBLIC
resolving: class javax/servlet/http/HttpSessionBindingListener
synonym  : javax/servlet/http/HttpSessionBindingListener
granting : execute on class javax/servlet/http/HttpSessionContext to PUBLIC
skipping : class javax/servlet/http/HttpSessionContext
synonym  : javax/servlet/http/HttpSessionContext
granting : execute on class javax/servlet/http/HttpUtils to PUBLIC
resolving: class javax/servlet/http/HttpUtils
synonym  : javax/servlet/http/HttpUtils
granting : execute on class javax/servlet/http/NoBodyOutputStream to PUBLIC
skipping : class javax/servlet/http/NoBodyOutputStream
synonym  : javax/servlet/http/NoBodyOutputStream
granting : execute on class javax/servlet/http/NoBodyResponse to PUBLIC
skipping : class javax/servlet/http/NoBodyResponse
synonym  : javax/servlet/http/NoBodyResponse
granting : execute on resource javax/servlet/http/LocalStrings.properties to
PUBLIC
skipping : resource javax/servlet/http/LocalStrings.properties
granting : execute on class javax/servlet/jsp/HttpJspPage to PUBLIC
resolving: class javax/servlet/jsp/HttpJspPage
synonym  : javax/servlet/jsp/HttpJspPage
granting : execute on class javax/servlet/jsp/JspEngineInfo to PUBLIC
resolving: class javax/servlet/jsp/JspEngineInfo
synonym  : javax/servlet/jsp/JspEngineInfo
granting : execute on class javax/servlet/jsp/JspException to PUBLIC
resolving: class javax/servlet/jsp/JspException
synonym  : javax/servlet/jsp/JspException
granting : execute on class javax/servlet/jsp/JspFactory to PUBLIC
resolving: class javax/servlet/jsp/JspFactory
synonym  : javax/servlet/jsp/JspFactory
granting : execute on class javax/servlet/jsp/JspPage to PUBLIC
skipping : class javax/servlet/jsp/JspPage
synonym  : javax/servlet/jsp/JspPage
granting : execute on class javax/servlet/jsp/JspTagException to PUBLIC
resolving: class javax/servlet/jsp/JspTagException
synonym  : javax/servlet/jsp/JspTagException
granting : execute on class javax/servlet/jsp/JspWriter to PUBLIC
skipping : class javax/servlet/jsp/JspWriter
synonym  : javax/servlet/jsp/JspWriter
granting : execute on class javax/servlet/jsp/PageContext to PUBLIC
skipping : class javax/servlet/jsp/PageContext
synonym  : javax/servlet/jsp/PageContext
granting : execute on class javax/servlet/jsp/tagext/BodyContent to PUBLIC
skipping : class javax/servlet/jsp/tagext/BodyContent
synonym  : javax/servlet/jsp/tagext/BodyContent
granting : execute on class javax/servlet/jsp/tagext/BodyTag to PUBLIC
resolving: class javax/servlet/jsp/tagext/BodyTag
synonym  : javax/servlet/jsp/tagext/BodyTag
granting : execute on class javax/servlet/jsp/tagext/BodyTagSupport to PUBLIC
resolving: class javax/servlet/jsp/tagext/BodyTagSupport
synonym  : javax/servlet/jsp/tagext/BodyTagSupport
granting : execute on class javax/servlet/jsp/tagext/Tag to PUBLIC
skipping : class javax/servlet/jsp/tagext/Tag
synonym  : javax/servlet/jsp/tagext/Tag
granting : execute on class javax/servlet/jsp/tagext/TagAttributeInfo to PUBLIC
resolving: class javax/servlet/jsp/tagext/TagAttributeInfo
synonym  : javax/servlet/jsp/tagext/TagAttributeInfo
granting : execute on class javax/servlet/jsp/tagext/TagData to PUBLIC
resolving: class javax/servlet/jsp/tagext/TagData
synonym  : javax/servlet/jsp/tagext/TagData
granting : execute on class javax/servlet/jsp/tagext/TagExtraInfo to PUBLIC
resolving: class javax/servlet/jsp/tagext/TagExtraInfo
synonym  : javax/servlet/jsp/tagext/TagExtraInfo
granting : execute on class javax/servlet/jsp/tagext/TagInfo to PUBLIC
skipping : class javax/servlet/jsp/tagext/TagInfo
synonym  : javax/servlet/jsp/tagext/TagInfo
granting : execute on class javax/servlet/jsp/tagext/TagLibraryInfo to PUBLIC
skipping : class javax/servlet/jsp/tagext/TagLibraryInfo
synonym  : javax/servlet/jsp/tagext/TagLibraryInfo
granting : execute on class javax/servlet/jsp/tagext/TagSupport to PUBLIC
skipping : class javax/servlet/jsp/tagext/TagSupport
synonym  : javax/servlet/jsp/tagext/TagSupport
granting : execute on class javax/servlet/jsp/tagext/VariableInfo to PUBLIC
skipping : class javax/servlet/jsp/tagext/VariableInfo
synonym  : javax/servlet/jsp/tagext/VariableInfo
Classes Loaded: 42
Resources Loaded: 3
Sources Loaded: 0
Published Interfaces: 0
Classes generated: 0
Classes skipped: 0
Synonyms Created: 42
Errors: 0

Call completed.

SQL> 
SQL> CALL xdk_load_jar('lib/xmlparserv2.jar rdbms/jlib/xdb.jar');
arguments: '-kprb' '-verbose' '-resolve' '-grant' 'PUBLIC' '-synonym' '-install'
'lib/xmlparserv2.jar' 'rdbms/jlib/xdb.jar'
creating : resource META-INF/INDEX.LIST
creating : resource META-INF/MANIFEST.MF
creating : resource META-INF/services/javax.xml.parsers.DocumentBuilderFactory
creating : resource META-INF/services/javax.xml.parsers.SAXParserFactory
creating : resource META-INF/services/javax.xml.transform.TransformerFactory
creating : class org/w3c/dom/validation/CharacterDataEditVAL
creating : class org/w3c/dom/validation/DocumentEditVAL
creating : class org/w3c/dom/validation/ElementEditVAL
creating : class org/w3c/dom/validation/ExceptionVAL
creating : class org/w3c/dom/validation/NodeEditVAL
creating : class oracle/xml/xqxp/XQException
creating : class oracle/xml/binxml/BinXMLConstants
creating : class oracle/xml/binxml/BinXMLDecodeReader$BinXMLLocator
creating : class oracle/xml/binxml/BinXMLDecodeReader$DecodeElem
creating : class oracle/xml/binxml/BinXMLDecodeReader$DecodeStream
creating : class oracle/xml/binxml/BinXMLDecodeReader$ElemStack
creating : class oracle/xml/binxml/BinXMLDecodeReader$MarkInfo
creating : class oracle/xml/binxml/BinXMLDecodeReader$MutableLong
creating : class oracle/xml/binxml/BinXMLDecodeReader$PrefixInfo
creating : class oracle/xml/binxml/BinXMLDecodeReader
creating : class oracle/xml/binxml/BinXMLDecoder
creating : class oracle/xml/binxml/BinXMLDecoderImpl
creating : class oracle/xml/binxml/BinXMLEncoder
creating : class oracle/xml/binxml/BinXMLEncoderImpl$1
creating : class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLElement
creating : class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLEncBuffer
creating : class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLPageWriter
creating : class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLPrefix
creating : class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLSectionState
creating : class oracle/xml/binxml/BinXMLEncoderImpl$myLong
creating : class oracle/xml/binxml/BinXMLEncoderImpl
creating : class oracle/xml/binxml/BinXMLException
creating : class oracle/xml/binxml/BinXMLFormat
creating : class oracle/xml/binxml/BinXMLInfosetReader$Locator
creating : class oracle/xml/binxml/BinXMLInfosetReader$LocatorArray
creating : class oracle/xml/binxml/BinXMLInfosetReader$LocatorArraySchema
creating : class oracle/xml/binxml/BinXMLInfosetReader$LocatorSchema
creating : class oracle/xml/binxml/BinXMLInfosetReader
creating : class oracle/xml/binxml/BinXMLInfosetWriter
creating : class oracle/xml/binxml/BinXMLJDBCUtil
creating : class oracle/xml/binxml/BinXMLJDBCUtil4Oracle
creating : class oracle/xml/binxml/BinXMLMetadataProvider
creating : class oracle/xml/binxml/BinXMLMetadataProviderFactory
creating : class oracle/xml/binxml/BinXMLNamespaceToken
creating : class oracle/xml/binxml/BinXMLOpcode
creating : class oracle/xml/binxml/BinXMLPageOffset
creating : class oracle/xml/binxml/BinXMLProcessor
creating : class oracle/xml/binxml/BinXMLProcessorFactory
creating : class oracle/xml/binxml/BinXMLProcessorImpl
creating : class oracle/xml/binxml/BinXMLProperty
creating : class oracle/xml/binxml/BinXMLQNameToken
creating : class oracle/xml/binxml/BinXMLSchLocTag
creating : class oracle/xml/binxml/BinXMLSchema
creating : class oracle/xml/binxml/BinXMLSchemaAnnotationBuilder$BXProperty
creating : class oracle/xml/binxml/BinXMLSchemaAnnotationBuilder
creating : class oracle/xml/binxml/BinXMLSchemaAnnotator
creating : class oracle/xml/binxml/BinXMLSchemaResolver
creating : class oracle/xml/binxml/BinXMLSerializer$DecodeThread
creating : class oracle/xml/binxml/BinXMLSerializer
creating : class oracle/xml/binxml/BinXMLStream
creating : class oracle/xml/binxml/BinXMLStreamImpl
creating : class oracle/xml/binxml/BinXMLToken
creating : class oracle/xml/binxml/BinXMLTokenList
creating : class oracle/xml/binxml/BinXMLTokenManager
creating : class oracle/xml/binxml/BinXMLUtil
creating : class oracle/xml/binxml/BinXMLVocabId
creating : class oracle/xml/binxml/BinXMLVocabularyManager
creating : class oracle/xml/binxml/BinXMLXDBSchemaEntityResolver
creating : class oracle/xml/binxml/DBBinXMLMetadataProvider
creating : class oracle/xml/binxml/DBBinXMLMetadataProviderImpl
creating : class oracle/xml/xpath/AdditiveExpr
creating : class oracle/xml/xpath/AndExpr
creating : class oracle/xml/xpath/CachedExpr
creating : class oracle/xml/xpath/CastableAsExpr
creating : class oracle/xml/xpath/ComparisonExpr
creating : class oracle/xml/xpath/ExprSingle
creating : class oracle/xml/xpath/ForExpr
creating : class oracle/xml/xpath/IfExpr
creating : class oracle/xml/xpath/InstanceOfExpr
creating : class oracle/xml/xpath/IntersectExceptExpr
creating : class oracle/xml/xpath/JXPath
creating : class oracle/xml/xpath/JXPathContext$JXFunction
creating : class oracle/xml/xpath/JXPathContext
creating : class oracle/xml/xpath/JXPathExpression
creating : class oracle/xml/xpath/JXPathFactory
creating : class oracle/xml/xpath/JXPathFunction
creating : class oracle/xml/xpath/OrExpr
creating : class oracle/xml/xpath/PathExpr
creating : class oracle/xml/xpath/QuantifiedExpr
creating : class oracle/xml/xpath/RangeExpr
creating : class oracle/xml/xpath/StreamingSequence
creating : class oracle/xml/xpath/TreatExpr
creating : class oracle/xml/xpath/UnaryExpr
creating : class oracle/xml/xpath/XPathAncestorAxis
creating : class oracle/xml/xpath/XPathAncestorOrSelfAxis
creating : class oracle/xml/xpath/XPathAttributeAxis
creating : class oracle/xml/xpath/XPathAxis
creating : class oracle/xml/xpath/XPathCastExpr
creating : class oracle/xml/xpath/XPathChildAxis
creating : class oracle/xml/xpath/XPathCompatibiltyExpr
creating : class oracle/xml/xpath/XPathConstantExpr
creating : class oracle/xml/xpath/XPathContext
creating : class oracle/xml/xpath/XPathContextItemExpr
creating : class oracle/xml/xpath/XPathConvertAsExpr
creating : class oracle/xml/xpath/XPathDescOrSelfAxis
creating : class oracle/xml/xpath/XPathDescendantAxis
creating : class oracle/xml/xpath/XPathError
creating : class oracle/xml/xpath/XPathException
creating : class oracle/xml/xpath/XPathExtFunction
creating : class oracle/xml/xpath/XPathFilterExpr
creating : class oracle/xml/xpath/XPathFollowingAxis
creating : class oracle/xml/xpath/XPathFollowingSiblingAxis
creating : class oracle/xml/xpath/XPathFunctionCall
creating : class oracle/xml/xpath/XPathItem
creating : class oracle/xml/xpath/XPathNamespaceAxis
creating : class oracle/xml/xpath/XPathParentAxis
creating : class oracle/xml/xpath/XPathPrecedingAxis
creating : class oracle/xml/xpath/XPathPrecedingSiblingAxis
creating : class oracle/xml/xpath/XPathPredicate
creating : class oracle/xml/xpath/XPathRuntimeContext
creating : class oracle/xml/xpath/XPathSelfAxis
creating : class oracle/xml/xpath/XPathSeqType
creating : class oracle/xml/xpath/XPathSequence
creating : class oracle/xml/xpath/XPathStep
creating : class oracle/xml/xpath/XPathVarReference
creating : class oracle/xml/xpath/XPathXSLFunction
creating : class oracle/xml/xpath/XSLExpr
creating : class oracle/xml/xpath/XSLExprBase
creating : class oracle/xml/xpath/XSLExprConstants
creating : class oracle/xml/xpath/XSLExtFunctions
creating : class oracle/xml/xpath/XSLNodeSetExpr
creating : class oracle/xml/xpath/XSLParseString
creating : class oracle/xml/xslt/WildCard
creating : class oracle/xml/xslt/XMLStreamFilter$Property
creating : class oracle/xml/xslt/XMLStreamFilter
creating : class oracle/xml/xslt/XSLApplyImport
creating : class oracle/xml/xslt/XSLApplyTemplates
creating : class oracle/xml/xslt/XSLAttribute
creating : class oracle/xml/xslt/XSLAttributeSet
creating : class oracle/xml/xslt/XSLBuilder
creating : class oracle/xml/xslt/XSLCallTemplate
creating : class oracle/xml/xslt/XSLCharacterMap
creating : class oracle/xml/xslt/XSLCondition
creating : class oracle/xml/xslt/XSLConstants
creating : class oracle/xml/xslt/XSLCopy
creating : class oracle/xml/xslt/XSLCopyOf
creating : class oracle/xml/xslt/XSLDocument
creating : class oracle/xml/xslt/XSLDocumentBuilder
creating : class oracle/xml/xslt/XSLElement
creating : class oracle/xml/xslt/XSLEventHandler
creating : class oracle/xml/xslt/XSLException
creating : class oracle/xml/xslt/XSLFallback
creating : class oracle/xml/xslt/XSLForEach
creating : class oracle/xml/xslt/XSLForEachGroup
creating : class oracle/xml/xslt/XSLFunction
creating : class oracle/xml/xslt/XSLFunctionDS
creating : class oracle/xml/xslt/XSLKey
creating : class oracle/xml/xslt/XSLMiscElements
creating : class oracle/xml/xslt/XSLNamespace
creating : class oracle/xml/xslt/XSLNamespace2
creating : class oracle/xml/xslt/XSLNextMatch
creating : class oracle/xml/xslt/XSLNode$AttrValueTmpl
creating : class oracle/xml/xslt/XSLNode$EndElement
creating : class oracle/xml/xslt/XSLNode$UpdateVar
creating : class oracle/xml/xslt/XSLNode
creating : class oracle/xml/xslt/XSLNumber
creating : class oracle/xml/xslt/XSLOtherElements
creating : class oracle/xml/xslt/XSLOutput
creating : class oracle/xml/xslt/XSLOutputCharacter
creating : class oracle/xml/xslt/XSLPerfSort
creating : class oracle/xml/xslt/XSLProcessor$XSLTVersion
creating : class oracle/xml/xslt/XSLProcessor
creating : class oracle/xml/xslt/XSLResultDocument
creating : class oracle/xml/xslt/XSLResultElement
creating : class oracle/xml/xslt/XSLSAXPrintDriver
creating : class oracle/xml/xslt/XSLSequence
creating : class oracle/xml/xslt/XSLSort
creating : class oracle/xml/xslt/XSLSortKey
creating : class oracle/xml/xslt/XSLSourceContext
creating : class oracle/xml/xslt/XSLSpaceElem
creating : class oracle/xml/xslt/XSLStylesheet$dfstruct
creating : class oracle/xml/xslt/XSLStylesheet
creating : class oracle/xml/xslt/XSLTContext
creating : class oracle/xml/xslt/XSLTemplate
creating : class oracle/xml/xslt/XSLText
creating : class oracle/xml/xslt/XSLValueOf
creating : class oracle/xml/xslt/XSLVariable
creating : class oracle/xml/util/ArrayPool
creating : class oracle/xml/util/FastVector
creating : class oracle/xml/util/HashInt$Entry
creating : class oracle/xml/util/HashInt
creating : class oracle/xml/util/MaskingThread
creating : class oracle/xml/util/NSName
creating : class oracle/xml/util/NSNameImpl
creating : class oracle/xml/util/OraURI
creating : class oracle/xml/util/OraURIException
creating : class oracle/xml/util/OraURIUtil
creating : class oracle/xml/util/PasswordField
creating : class oracle/xml/util/Queue
creating : class oracle/xml/util/QxName
creating : class oracle/xml/util/QxNameHash$WeakValue
creating : class oracle/xml/util/QxNameHash
creating : class oracle/xml/util/StringHashtable$Entry
creating : class oracle/xml/util/StringHashtable
creating : class oracle/xml/util/UnicodeUtil
creating : class oracle/xml/util/XMLCompatible
creating : class oracle/xml/util/XMLError
creating : class oracle/xml/util/XMLException
creating : class oracle/xml/util/XMLProperties
creating : class oracle/xml/util/XMLUtil$1
creating : class oracle/xml/util/XMLUtil$2
creating : class oracle/xml/util/XMLUtil
creating : class oracle/xml/jdwp/Field
creating : class oracle/xml/jdwp/LineTable
creating : class oracle/xml/jdwp/VariableTable
creating : class oracle/xml/jdwp/XSLDebugProp
creating : class oracle/xml/jdwp/XSLJDWPArrayReference
creating : class oracle/xml/jdwp/XSLJDWPBreakpointEvent
creating : class oracle/xml/jdwp/XSLJDWPClassMatchEventRequest
creating : class oracle/xml/jdwp/XSLJDWPClassPrepareEvent
creating : class oracle/xml/jdwp/XSLJDWPClassType
creating : class oracle/xml/jdwp/XSLJDWPCommandSet
creating : class oracle/xml/jdwp/XSLJDWPConstants
creating : class oracle/xml/jdwp/XSLJDWPDebugger
creating : class oracle/xml/jdwp/XSLJDWPError
creating : class oracle/xml/jdwp/XSLJDWPEvent
creating : class oracle/xml/jdwp/XSLJDWPEventManager
creating : class oracle/xml/jdwp/XSLJDWPEventRequest
creating : class oracle/xml/jdwp/XSLJDWPEventRequestGroup
creating : class oracle/xml/jdwp/XSLJDWPEventRequestManager
creating : class oracle/xml/jdwp/XSLJDWPEventValue
creating : class oracle/xml/jdwp/XSLJDWPEventValue4ContextNode
creating : class oracle/xml/jdwp/XSLJDWPEvents
creating : class oracle/xml/jdwp/XSLJDWPException
creating : class oracle/xml/jdwp/XSLJDWPExceptionEvent
creating : class oracle/xml/jdwp/XSLJDWPFieldAccessEvent
creating : class oracle/xml/jdwp/XSLJDWPFieldModificationEvent
creating : class oracle/xml/jdwp/XSLJDWPFieldOnlyEventRequest
creating : class oracle/xml/jdwp/XSLJDWPLocation
creating : class oracle/xml/jdwp/XSLJDWPLocationOnlyEventRequest
creating : class oracle/xml/jdwp/XSLJDWPMethod
creating : class oracle/xml/jdwp/XSLJDWPMethodEntryEvent
creating : class oracle/xml/jdwp/XSLJDWPMethodExitEvent
creating : class oracle/xml/jdwp/XSLJDWPNode
creating : class oracle/xml/jdwp/XSLJDWPObjectReference
creating : class oracle/xml/jdwp/XSLJDWPOutQueue
creating : class oracle/xml/jdwp/XSLJDWPPacket
creating : class oracle/xml/jdwp/XSLJDWPPacketStream
creating : class oracle/xml/jdwp/XSLJDWPPacketValue
creating : class oracle/xml/jdwp/XSLJDWPReferenceType
creating : class oracle/xml/jdwp/XSLJDWPSingleStepEvent
creating : class oracle/xml/jdwp/XSLJDWPSockReader
creating : class oracle/xml/jdwp/XSLJDWPSockWriter
creating : class oracle/xml/jdwp/XSLJDWPSocketConn
creating : class oracle/xml/jdwp/XSLJDWPStackFrame
creating : class oracle/xml/jdwp/XSLJDWPStepEventRequest
creating : class oracle/xml/jdwp/XSLJDWPString
creating : class oracle/xml/jdwp/XSLJDWPStringReference
creating : class oracle/xml/jdwp/XSLJDWPThreadDeathEvent
creating : class oracle/xml/jdwp/XSLJDWPThreadGroupReference
creating : class oracle/xml/jdwp/XSLJDWPThreadReference
creating : class oracle/xml/jdwp/XSLJDWPThreadStartEvent
creating : class oracle/xml/jdwp/XSLJDWPUtil
creating : class oracle/xml/jdwp/XSLJDWPVMDeathEvent
creating : class oracle/xml/jdwp/XSLJDWPVMStartEvent
creating : class oracle/xml/jdwp/XSLJDWPVirtualMachine
creating : class oracle/xml/async/DOMBuilder
creating : class oracle/xml/async/DOMBuilderBeanInfo
creating : class oracle/xml/async/DOMBuilderConstants
creating : class oracle/xml/async/DOMBuilderErrorEvent
creating : class oracle/xml/async/DOMBuilderErrorListener
creating : class oracle/xml/async/DOMBuilderEvent
creating : class oracle/xml/async/DOMBuilderListener
creating : class oracle/xml/async/ResourceManager
creating : class oracle/xml/async/SAXBuilder
creating : class oracle/xml/async/XSLTransformer
creating : class oracle/xml/async/XSLTransformerBeanInfo
creating : class oracle/xml/async/XSLTransformerConstants
creating : class oracle/xml/async/XSLTransformerErrorEvent
creating : class oracle/xml/async/XSLTransformerErrorListener
creating : class oracle/xml/async/XSLTransformerEvent
creating : class oracle/xml/async/XSLTransformerListener
creating : resource oracle/xml/async/dombld16c.gif
creating : resource oracle/xml/async/dombld16m.gif
creating : resource oracle/xml/async/dombld32c.gif
creating : resource oracle/xml/async/dombld32m.gif
creating : resource oracle/xml/async/xmltrans16c.gif
creating : resource oracle/xml/async/xmltrans16m.gif
creating : resource oracle/xml/async/xmltrans32c.gif
creating : resource oracle/xml/async/xmltrans32m.gif
creating : class oracle/xml/jaxp/JXDocumentBuilder
creating : class oracle/xml/jaxp/JXDocumentBuilderFactory
creating : class oracle/xml/jaxp/JXEntityResolver
creating : class oracle/xml/jaxp/JXSAXData
creating : class oracle/xml/jaxp/JXSAXParser
creating : class oracle/xml/jaxp/JXSAXParserFactory
creating : class oracle/xml/jaxp/JXSAXTransformerFactory$1
creating : class oracle/xml/jaxp/JXSAXTransformerFactory
creating : class oracle/xml/jaxp/JXTransformer$1
creating : class oracle/xml/jaxp/JXTransformer
creating : class oracle/xml/jaxp/JXTransformerHandler
creating : class oracle/xml/jaxp/JXUtil
creating : class oracle/xml/jaxp/JXXMLFilter
creating : class oracle/xml/scalable/AbstractPageManager$PageId
creating : class oracle/xml/scalable/AbstractPageManager
creating : class oracle/xml/scalable/BinaryStream$ArrayPagedIO
creating : class oracle/xml/scalable/BinaryStream$BlobPagedIO
creating : class oracle/xml/scalable/BinaryStream$FilePagedIO
creating : class oracle/xml/scalable/BinaryStream$MemoryPagedIO
creating : class oracle/xml/scalable/BinaryStream$ObjectPagedIO
creating : class oracle/xml/scalable/BinaryStream$PagedIO
creating : class oracle/xml/scalable/BinaryStream$StreamPagedIO
creating : class oracle/xml/scalable/BinaryStream
creating : class oracle/xml/scalable/BlobPageManager
creating : class oracle/xml/scalable/FilePageManager
creating : class oracle/xml/scalable/InfosetReader$Offset
creating : class oracle/xml/scalable/InfosetReader
creating : class oracle/xml/scalable/InfosetWriter
creating : class oracle/xml/scalable/PageManager$PageId
creating : class oracle/xml/scalable/PageManager
creating : class oracle/xml/scalable/PageManagerPool
creating : class oracle/xml/scalable/StreamWriter
creating : class oracle/xml/scalable/StreamingXPath$StepNode
creating : class oracle/xml/scalable/StreamingXPath
creating : class oracle/xml/comp/CXMLCodeSpace
creating : class oracle/xml/comp/CXMLConstants
creating : class oracle/xml/comp/CXMLContext
creating : class oracle/xml/comp/CXMLHandlerBase
creating : class oracle/xml/comp/CXMLParser
creating : class oracle/xml/comp/CXMLReader$Offset
creating : class oracle/xml/comp/CXMLReader$TypeInfo
creating : class oracle/xml/comp/CXMLReader
creating : class oracle/xml/comp/CXMLStream
creating : class oracle/xml/comp/CXMLWriter
creating : class oracle/xml/parser/v2/AttrDecl
creating : class oracle/xml/parser/v2/BlobPageManager
creating : class oracle/xml/parser/v2/CMChoice
creating : class oracle/xml/parser/v2/CMLeaf
creating : class oracle/xml/parser/v2/CMNode
creating : class oracle/xml/parser/v2/CMNodeSeq
creating : class oracle/xml/parser/v2/CMPlus
creating : class oracle/xml/parser/v2/CMQuestionMark
creating : class oracle/xml/parser/v2/CMStar
creating : class oracle/xml/parser/v2/CMXMLNode
creating : class oracle/xml/parser/v2/CharData
creating : class oracle/xml/parser/v2/ContentModel
creating : class oracle/xml/parser/v2/ContentModelType
creating : class oracle/xml/parser/v2/DOMLocator
creating : class oracle/xml/parser/v2/DOMParser
creating : class oracle/xml/parser/v2/DTD
creating : class oracle/xml/parser/v2/DTD2SchemaBuilder
creating : class oracle/xml/parser/v2/DTD2SchemaConstants
creating : class oracle/xml/parser/v2/DTDBuilder
creating : class oracle/xml/parser/v2/DTDDecl
creating : class oracle/xml/parser/v2/DefaultXMLDocumentHandler
creating : class oracle/xml/parser/v2/DocumentBuilder
creating : class oracle/xml/parser/v2/ElementDecl
creating : class oracle/xml/parser/v2/FilePageManager
creating : class oracle/xml/parser/v2/NSName
creating : class oracle/xml/parser/v2/NSResolver
creating : class oracle/xml/parser/v2/NameCheck
creating : class oracle/xml/parser/v2/NodeFactory$NFDocument
creating : class oracle/xml/parser/v2/NodeFactory
creating : class oracle/xml/parser/v2/NodeReadHandler
creating : class oracle/xml/parser/v2/NodeReference
creating : class oracle/xml/parser/v2/NonValidatingParser
creating : class oracle/xml/parser/v2/ObjectBuilder
creating : class oracle/xml/parser/v2/PagedNodeList
creating : class oracle/xml/parser/v2/ParserState
creating : class oracle/xml/parser/v2/PrintDriver
creating : class oracle/xml/parser/v2/SAXAttrList
creating : class oracle/xml/parser/v2/SAXParser
creating : class oracle/xml/parser/v2/ScalableDOMPrintDriver
creating : class oracle/xml/parser/v2/TypedAttributes
creating : class oracle/xml/parser/v2/ValidatingParser
creating : class oracle/xml/parser/v2/XMLAttr
creating : class oracle/xml/parser/v2/XMLAttrList
creating : class oracle/xml/parser/v2/XMLByteReader
creating : class oracle/xml/parser/v2/XMLCDATA
creating : class oracle/xml/parser/v2/XMLCharReader
creating : class oracle/xml/parser/v2/XMLComment
creating : class oracle/xml/parser/v2/XMLConstants
creating : class oracle/xml/parser/v2/XMLContentHandler
creating : class oracle/xml/parser/v2/XMLDOMConfiguration
creating : class oracle/xml/parser/v2/XMLDOMEvent
creating : class oracle/xml/parser/v2/XMLDOMException
creating : class oracle/xml/parser/v2/XMLDOMImplementation
creating : class oracle/xml/parser/v2/XMLDOMImplementationSource$1
creating : class
oracle/xml/parser/v2/XMLDOMImplementationSource$XMLDOMImplementationList
creating : class oracle/xml/parser/v2/XMLDOMImplementationSource
creating : class oracle/xml/parser/v2/XMLDOMMutationEvent
creating : class oracle/xml/parser/v2/XMLDOMStringList
creating : class oracle/xml/parser/v2/XMLDOMUserData
creating : class oracle/xml/parser/v2/XMLDebugInfo
creating : class oracle/xml/parser/v2/XMLDeclPI
creating : class oracle/xml/parser/v2/XMLDocument$NodeList_cache
creating : class oracle/xml/parser/v2/XMLDocument
creating : class oracle/xml/parser/v2/XMLDocumentFragment
creating : class oracle/xml/parser/v2/XMLDocumentHandler
creating : class oracle/xml/parser/v2/XMLElement
creating : class oracle/xml/parser/v2/XMLEntity
creating : class oracle/xml/parser/v2/XMLEntityReference
creating : class oracle/xml/parser/v2/XMLError
creating : class oracle/xml/parser/v2/XMLExternalReader
creating : class oracle/xml/parser/v2/XMLLSDocumentBuilder$LSNodeFactorySkip
creating : class oracle/xml/parser/v2/XMLLSDocumentBuilder
creating : class oracle/xml/parser/v2/XMLLSInput
creating : class oracle/xml/parser/v2/XMLLSLoadEvent
creating : class oracle/xml/parser/v2/XMLLSOutput
creating : class oracle/xml/parser/v2/XMLLSParser
creating : class oracle/xml/parser/v2/XMLLSProgressEvent
creating : class oracle/xml/parser/v2/XMLLSSerializer
creating : class oracle/xml/parser/v2/XMLLocator
creating : class oracle/xml/parser/v2/XMLMultiHandler
creating : class oracle/xml/parser/v2/XMLNSNode
creating : class oracle/xml/parser/v2/XMLNameList
creating : class oracle/xml/parser/v2/XMLNode$1
creating : class oracle/xml/parser/v2/XMLNode$2
creating : class oracle/xml/parser/v2/XMLNode$3
creating : class oracle/xml/parser/v2/XMLNode
creating : class oracle/xml/parser/v2/XMLNodeInputStream
creating : class oracle/xml/parser/v2/XMLNodeIterator
creating : class oracle/xml/parser/v2/XMLNodeList
creating : class oracle/xml/parser/v2/XMLNodeOutputStream
creating : class oracle/xml/parser/v2/XMLNodeReader
creating : class oracle/xml/parser/v2/XMLNodeWriter
creating : class oracle/xml/parser/v2/XMLNotation
creating : class oracle/xml/parser/v2/XMLObjectInputStream
creating : class oracle/xml/parser/v2/XMLOutputStream
creating : class oracle/xml/parser/v2/XMLPI
creating : class oracle/xml/parser/v2/XMLParseException
creating : class oracle/xml/parser/v2/XMLParser
creating : class oracle/xml/parser/v2/XMLPrintDriver
creating : class oracle/xml/parser/v2/XMLRange
creating : class oracle/xml/parser/v2/XMLRangeEvent
creating : class oracle/xml/parser/v2/XMLRangeException
creating : class oracle/xml/parser/v2/XMLReader
creating : class oracle/xml/parser/v2/XMLSAXSerializer
creating : class oracle/xml/parser/v2/XMLText
creating : class oracle/xml/parser/v2/XMLToken
creating : class oracle/xml/parser/v2/XMLTokenizer
creating : class oracle/xml/parser/v2/XMLTraversalEvent
creating : class oracle/xml/parser/v2/XMLTreeWalker
creating : class oracle/xml/parser/v2/XMLTypeInfo
creating : class oracle/xml/parser/v2/XMLUCS2Reader
creating : class oracle/xml/parser/v2/XMLUCS4Reader
creating : class oracle/xml/parser/v2/XMLUTF8Reader
creating : class oracle/xml/parser/v2/XMLUtil
creating : class oracle/xml/parser/v2/XSLException
creating : class oracle/xml/parser/v2/XSLExtensionElement
creating : class oracle/xml/parser/v2/XSLProcessor$XSLTVersion
creating : class oracle/xml/parser/v2/XSLProcessor
creating : class oracle/xml/parser/v2/XSLStylesheet
creating : class oracle/xml/parser/v2/XSLTContext
creating : class oracle/xml/parser/v2/oraxml
creating : class oracle/xml/parser/v2/oraxsl
creating : class oracle/xml/parser/v2/oraxslDriver
creating : class oracle/xml/mesg/XMLResourceBundle
creating : resource .xdk_version_11.2.0.3.0_production
creating : class oracle/xml/parser/schema/SchemaResolver
creating : class oracle/xml/parser/schema/XMLSchema$BuildState
creating : class oracle/xml/parser/schema/XMLSchema
creating : class oracle/xml/parser/schema/XMLSchemaNode
creating : class oracle/xml/parser/schema/XSDAnalyzerContext
creating : class oracle/xml/parser/schema/XSDAnnotation
creating : class oracle/xml/parser/schema/XSDAny
creating : class oracle/xml/parser/schema/XSDAttrGroup
creating : class oracle/xml/parser/schema/XSDAttribute
creating : class oracle/xml/parser/schema/XSDBuilder
creating : class oracle/xml/parser/schema/XSDCatClass
creating : class oracle/xml/parser/schema/XSDCharClass
creating : class oracle/xml/parser/schema/XSDComplexType
creating : class oracle/xml/parser/schema/XSDComponent
creating : class oracle/xml/parser/schema/XSDConstantValues
creating : class oracle/xml/parser/schema/XSDConstants
creating : class oracle/xml/parser/schema/XSDConstrainingFacet
creating : class oracle/xml/parser/schema/XSDDataValue
creating : class oracle/xml/parser/schema/XSDElement
creating : class oracle/xml/parser/schema/XSDEscClass
creating : class oracle/xml/parser/schema/XSDException
creating : class oracle/xml/parser/schema/XSDGroup
creating : class oracle/xml/parser/schema/XSDIdConstraintTable$NodeTable
creating : class oracle/xml/parser/schema/XSDIdConstraintTable
creating : class oracle/xml/parser/schema/XSDIdentity
creating : class oracle/xml/parser/schema/XSDInputSource
creating : class oracle/xml/parser/schema/XSDNegClass
creating : class oracle/xml/parser/schema/XSDNode
creating : class oracle/xml/parser/schema/XSDNotation
creating : class oracle/xml/parser/schema/XSDParser
creating : class oracle/xml/parser/schema/XSDParticleNode
creating : class oracle/xml/parser/schema/XSDPatternImpl
creating : class oracle/xml/parser/schema/XSDRangeClass
creating : class oracle/xml/parser/schema/XSDRegexCompiler
creating : class oracle/xml/parser/schema/XSDRegexProgram
creating : class oracle/xml/parser/schema/XSDRegexVM
creating : class oracle/xml/parser/schema/XSDSchemaDefaults
creating : class oracle/xml/parser/schema/XSDSimpleType
creating : class oracle/xml/parser/schema/XSDSubtractionClass
creating : class oracle/xml/parser/schema/XSDTypeConstants
creating : class oracle/xml/parser/schema/XSDValidator$1
creating : class oracle/xml/parser/schema/XSDValidator$State
creating : class oracle/xml/parser/schema/XSDValidator
creating : class oracle/xml/xqxp/datamodel/DistinctArrayList
creating : class oracle/xml/xqxp/datamodel/FSAllGroupType
creating : class oracle/xml/xqxp/datamodel/FSChoiceType
creating : class oracle/xml/xqxp/datamodel/FSMultiArgType
creating : class oracle/xml/xqxp/datamodel/FSNoneType
creating : class oracle/xml/xqxp/datamodel/FSPrimeChoiceType
creating : class oracle/xml/xqxp/datamodel/FSSequenceType
creating : class oracle/xml/xqxp/datamodel/FSType
creating : class oracle/xml/xqxp/datamodel/FSTypeUtil
creating : class oracle/xml/xqxp/datamodel/OXMLBuiltInType
creating : class oracle/xml/xqxp/datamodel/OXMLConstants
creating : class oracle/xml/xqxp/datamodel/OXMLItem
creating : class oracle/xml/xqxp/datamodel/OXMLSequence
creating : class oracle/xml/xqxp/datamodel/OXMLSequenceType
creating : class oracle/xml/xqxp/datamodel/OXMLSequenceTypeAllowChildren
creating : class oracle/xml/xqxp/datamodel/XMLItem
creating : class oracle/xml/xqxp/datamodel/XMLItemConstants
creating : class oracle/xml/xqxp/datamodel/XMLSequence
creating : class oracle/xml/xqxp/functions/OXMLFunction
creating : class oracle/xml/xqxp/functions/OXMLFunctionContext
creating : class oracle/xml/xqxp/functions/OXMLFunctionLibrary
creating : class oracle/xml/xqxp/functions/OXMLFunctionNSResolver
creating : class oracle/xml/xqxp/functions/OXMLFunctionNSResolverFactory
creating : class oracle/xml/xqxp/functions/OXMLSQLExprFunction
creating : class oracle/xml/xqxp/functions/builtIns/Abs
creating : class oracle/xml/xqxp/functions/builtIns/Avg
creating : class oracle/xml/xqxp/functions/builtIns/BaseURI
creating : class oracle/xml/xqxp/functions/builtIns/Boolean
creating : class oracle/xml/xqxp/functions/builtIns/Ceiling
creating : class oracle/xml/xqxp/functions/builtIns/CodepointEqual
creating : class oracle/xml/xqxp/functions/builtIns/CodepointsToString
creating : class oracle/xml/xqxp/functions/builtIns/Collation
creating : class oracle/xml/xqxp/functions/builtIns/Collection
creating : class oracle/xml/xqxp/functions/builtIns/Compare
creating : class oracle/xml/xqxp/functions/builtIns/Concat
creating : class oracle/xml/xqxp/functions/builtIns/Contains
creating : class oracle/xml/xqxp/functions/builtIns/ContextItem
creating : class oracle/xml/xqxp/functions/builtIns/Count
creating : class oracle/xml/xqxp/functions/builtIns/CurDate
creating : class oracle/xml/xqxp/functions/builtIns/CurDateTime
creating : class oracle/xml/xqxp/functions/builtIns/CurTime
creating : class oracle/xml/xqxp/functions/builtIns/Data
creating : class oracle/xml/xqxp/functions/builtIns/DeepEqual
creating : class oracle/xml/xqxp/functions/builtIns/DistinctNode
creating : class
oracle/xml/xqxp/functions/builtIns/DistinctValue$ItemTypeComparator
creating : class
oracle/xml/xqxp/functions/builtIns/DistinctValue$ItemTypeValueMap
creating : class
oracle/xml/xqxp/functions/builtIns/DistinctValue$ItemValueComparator
creating : class oracle/xml/xqxp/functions/builtIns/DistinctValue
creating : class oracle/xml/xqxp/functions/builtIns/Doc
creating : class oracle/xml/xqxp/functions/builtIns/DocumentURI
creating : class oracle/xml/xqxp/functions/builtIns/Empty
creating : class oracle/xml/xqxp/functions/builtIns/EncodeForURI
creating : class oracle/xml/xqxp/functions/builtIns/EndsWith
creating : class oracle/xml/xqxp/functions/builtIns/Error
creating : class oracle/xml/xqxp/functions/builtIns/EscapeHtmlURI
creating : class oracle/xml/xqxp/functions/builtIns/Exists
creating : class oracle/xml/xqxp/functions/builtIns/ExpandQName
creating : class oracle/xml/xqxp/functions/builtIns/FNAccessors
creating : class oracle/xml/xqxp/functions/builtIns/FNAdjustTimezone
creating : class oracle/xml/xqxp/functions/builtIns/FNBooleans
creating : class oracle/xml/xqxp/functions/builtIns/FNContexts
creating : class oracle/xml/xqxp/functions/builtIns/FNDateTime
creating : class oracle/xml/xqxp/functions/builtIns/FNDateTimeDuration
creating : class oracle/xml/xqxp/functions/builtIns/FNFunctionLibrary$1
creating : class oracle/xml/xqxp/functions/builtIns/FNFunctionLibrary$Key
creating : class oracle/xml/xqxp/functions/builtIns/FNFunctionLibrary
creating : class oracle/xml/xqxp/functions/builtIns/FNNodes
creating : class oracle/xml/xqxp/functions/builtIns/FNNumerics
creating : class oracle/xml/xqxp/functions/builtIns/FNQNames
creating : class oracle/xml/xqxp/functions/builtIns/FNSequences
creating : class oracle/xml/xqxp/functions/builtIns/FNString
creating : class oracle/xml/xqxp/functions/builtIns/FNStrings
creating : class oracle/xml/xqxp/functions/builtIns/FNUtil
creating : class oracle/xml/xqxp/functions/builtIns/False
creating : class oracle/xml/xqxp/functions/builtIns/Floor
creating : class oracle/xml/xqxp/functions/builtIns/ID$DocumentOrderComparator
creating : class oracle/xml/xqxp/functions/builtIns/ID
creating : class oracle/xml/xqxp/functions/builtIns/IDRef
creating : class oracle/xml/xqxp/functions/builtIns/IRIToURI
creating : class oracle/xml/xqxp/functions/builtIns/InScopeNS
creating : class oracle/xml/xqxp/functions/builtIns/IndexOf
creating : class oracle/xml/xqxp/functions/builtIns/Input
creating : class oracle/xml/xqxp/functions/builtIns/InsertBefore
creating : class oracle/xml/xqxp/functions/builtIns/ItemAt
creating : class oracle/xml/xqxp/functions/builtIns/Lang
creating : class oracle/xml/xqxp/functions/builtIns/Last
creating : class oracle/xml/xqxp/functions/builtIns/LocalName
creating : class oracle/xml/xqxp/functions/builtIns/LocalNameFromQName
creating : class oracle/xml/xqxp/functions/builtIns/LowerCase
creating : class oracle/xml/xqxp/functions/builtIns/Max
creating : class oracle/xml/xqxp/functions/builtIns/Min
creating : class oracle/xml/xqxp/functions/builtIns/NSFromQName
creating : class oracle/xml/xqxp/functions/builtIns/NSURI
creating : class oracle/xml/xqxp/functions/builtIns/NSURIForPrefix
creating : class oracle/xml/xqxp/functions/builtIns/Name
creating : class oracle/xml/xqxp/functions/builtIns/Nilled
creating : class oracle/xml/xqxp/functions/builtIns/NodeIdentical
creating : class oracle/xml/xqxp/functions/builtIns/NodeKind
creating : class oracle/xml/xqxp/functions/builtIns/NodeName
creating : class oracle/xml/xqxp/functions/builtIns/NormalizeSpace
creating : class oracle/xml/xqxp/functions/builtIns/NormalizeUnicode
creating : class oracle/xml/xqxp/functions/builtIns/Not
creating : class oracle/xml/xqxp/functions/builtIns/Number
creating : class oracle/xml/xqxp/functions/builtIns/One
creating : class oracle/xml/xqxp/functions/builtIns/OneOrMore
creating : class oracle/xml/xqxp/functions/builtIns/Position
creating : class oracle/xml/xqxp/functions/builtIns/PrefixFromQName
creating : class oracle/xml/xqxp/functions/builtIns/Remove
creating : class oracle/xml/xqxp/functions/builtIns/ResolveQName
creating : class oracle/xml/xqxp/functions/builtIns/ResolveURI
creating : class oracle/xml/xqxp/functions/builtIns/Reverse
creating : class oracle/xml/xqxp/functions/builtIns/Root
creating : class oracle/xml/xqxp/functions/builtIns/Round
creating : class oracle/xml/xqxp/functions/builtIns/RoundHalfToEven
creating : class oracle/xml/xqxp/functions/builtIns/StartsWith
creating : class oracle/xml/xqxp/functions/builtIns/StaticBaseURI
creating : class oracle/xml/xqxp/functions/builtIns/StringJoin
creating : class oracle/xml/xqxp/functions/builtIns/StringLength
creating : class oracle/xml/xqxp/functions/builtIns/StringPad
creating : class oracle/xml/xqxp/functions/builtIns/StringToCodepoints
creating : class oracle/xml/xqxp/functions/builtIns/Subsequence
creating : class oracle/xml/xqxp/functions/builtIns/Substring
creating : class oracle/xml/xqxp/functions/builtIns/SubstringAfter
creating : class oracle/xml/xqxp/functions/builtIns/SubstringBefore
creating : class oracle/xml/xqxp/functions/builtIns/Sum
creating : class oracle/xml/xqxp/functions/builtIns/Timezone
creating : class oracle/xml/xqxp/functions/builtIns/Trace
creating : class oracle/xml/xqxp/functions/builtIns/Translate
creating : class oracle/xml/xqxp/functions/builtIns/True
creating : class oracle/xml/xqxp/functions/builtIns/Unordered
creating : class oracle/xml/xqxp/functions/builtIns/UpperCase
creating : class oracle/xml/xqxp/functions/builtIns/XDTFunction
creating : class oracle/xml/xqxp/functions/builtIns/XDTFunctionLibrary
creating : class oracle/xml/xqxp/functions/builtIns/XSFunction
creating : class oracle/xml/xqxp/functions/builtIns/XSFunctionLibrary
creating : class oracle/xml/xqxp/functions/builtIns/ZeroOrOne
creating : class oracle/xml/xqxp/functions/builtIns/FNDateTimeSubtract
creating : class oracle/xml/xqxp/functions/builtIns/FNMatches
creating : class oracle/xml/xqxp/functions/builtIns/FNPatternMatch
creating : class oracle/xml/xqxp/functions/builtIns/FNReplace
creating : class oracle/xml/xqxp/functions/builtIns/FNTokenize
creating : class oracle/xdb/BinXMLTestEncDec
creating : class oracle/xdb/RealInputStream
creating : class oracle/xdb/SoftHashMap$1
creating : class oracle/xdb/SoftHashMap$Entry
creating : class oracle/xdb/SoftHashMap$EntrySet$1
creating : class oracle/xdb/SoftHashMap$EntrySet
creating : class oracle/xdb/SoftHashMap$SoftKey
creating : class oracle/xdb/SoftHashMap
creating : class oracle/xdb/XDBError
creating : resource oracle/xdb/XDBMessages.properties
creating : resource oracle/xdb/XDBMessages_en_US.properties
creating : class oracle/xdb/XDBOutputStream
creating : class oracle/xdb/XMLType
creating : class oracle/xdb/XMLTypeFactory
creating : class oracle/xdb/bean/XMLTypeBean
creating : class oracle/xdb/dom/XDBNotImplementedException
creating : class oracle/xdb/dom/XDBDomImplementation
creating : class oracle/xdb/dom/XDBDocument
creating : class oracle/xdb/dom/XDBNode
creating : class oracle/xdb/dom/XDBDOMException
creating : class oracle/xdb/dom/XDBDocFragment
creating : class oracle/xdb/dom/XDBDocumentType
creating : class oracle/xdb/dom/XDBEntity
creating : class oracle/xdb/dom/XDBNotation
creating : class oracle/xdb/dom/XDBElement
creating : class oracle/xdb/dom/XDBNodeList
creating : class oracle/xdb/dom/XDBNamedNodeMap
creating : class oracle/xdb/dom/XDBAttribute
creating : class oracle/xdb/dom/XDBCData
creating : class oracle/xdb/dom/XDBText
creating : class oracle/xdb/dom/XDBCharData
creating : class oracle/xdb/dom/XDBComment
creating : class oracle/xdb/dom/XDBEntityReference
creating : class oracle/xdb/dom/XDBProcInst
creating : class oracle/xdb/dom/XDBBinaryDocument
creating : class oracle/xdb/event/XDBInvalidOperationException
creating : class oracle/xdb/event/XDBBasicEventListener
creating : class oracle/xdb/event/XDBRepositoryEventListener
creating : class oracle/xdb/event/XDBRepositoryEvent
creating : class oracle/xdb/event/XDBEvent
creating : class oracle/xdb/event/XDBPath
creating : class oracle/xdb/event/XDBHandlerList
creating : class oracle/xdb/event/XDBLink
creating : class oracle/xdb/event/XDBLock
creating : class oracle/xdb/event/XDBHandler
creating : class oracle/xdb/event/XDBRenderStream
creating : class oracle/xdb/event/XDBEventDispatcher
creating : class oracle/xdb/servlet/XDBStream
creating : class oracle/xdb/servlet/XDBCookie
creating : class oracle/xdb/servlet/XDBServletConfig
creating : class oracle/xdb/servlet/ArrayEnumeration
creating : class oracle/xdb/servlet/XDBServletContext
creating : class oracle/xdb/servlet/XDBServletRequest$ParamNames
creating : class oracle/xdb/servlet/XDBServletRequest
creating : class oracle/xdb/servlet/XDBRequestStream
creating : class oracle/xdb/servlet/XDBPrincipal
creating : class oracle/xdb/servlet/XDBServletResponse$XDBServletWriter
creating : class oracle/xdb/servlet/XDBServletResponse
creating : class oracle/xdb/servlet/XDBServletContainer
creating : class oracle/xdb/spi/XDBResource
creating : class oracle/xdb/spi/Resource
creating : class oracle/xdb/spi/XDBContextFactory
creating : class oracle/xdb/spi/XDBResourceContext
creating : class oracle/xdb/spi/XDBNameParser
creating : class oracle/xdb/spi/XDBNamingEnumeration
granting : execute on resource META-INF/INDEX.LIST to PUBLIC
skipping : resource META-INF/INDEX.LIST
granting : execute on resource META-INF/MANIFEST.MF to PUBLIC
skipping : resource META-INF/MANIFEST.MF
granting : execute on resource
META-INF/services/javax.xml.parsers.DocumentBuilderFactory to PUBLIC
skipping : resource META-INF/services/javax.xml.parsers.DocumentBuilderFactory
granting : execute on resource
META-INF/services/javax.xml.parsers.SAXParserFactory to PUBLIC
skipping : resource META-INF/services/javax.xml.parsers.SAXParserFactory
granting : execute on resource
META-INF/services/javax.xml.transform.TransformerFactory to PUBLIC
skipping : resource META-INF/services/javax.xml.transform.TransformerFactory
granting : execute on class org/w3c/dom/validation/CharacterDataEditVAL to
PUBLIC
resolving: class org/w3c/dom/validation/CharacterDataEditVAL
synonym  : org/w3c/dom/validation/CharacterDataEditVAL
granting : execute on class org/w3c/dom/validation/DocumentEditVAL to PUBLIC
resolving: class org/w3c/dom/validation/DocumentEditVAL
synonym  : org/w3c/dom/validation/DocumentEditVAL
granting : execute on class org/w3c/dom/validation/ElementEditVAL to PUBLIC
resolving: class org/w3c/dom/validation/ElementEditVAL
synonym  : org/w3c/dom/validation/ElementEditVAL
granting : execute on class org/w3c/dom/validation/ExceptionVAL to PUBLIC
skipping : class org/w3c/dom/validation/ExceptionVAL
synonym  : org/w3c/dom/validation/ExceptionVAL
granting : execute on class org/w3c/dom/validation/NodeEditVAL to PUBLIC
skipping : class org/w3c/dom/validation/NodeEditVAL
synonym  : org/w3c/dom/validation/NodeEditVAL
granting : execute on class oracle/xml/xqxp/XQException to PUBLIC
resolving: class oracle/xml/xqxp/XQException
synonym  : oracle/xml/xqxp/XQException
granting : execute on class oracle/xml/binxml/BinXMLConstants to PUBLIC
resolving: class oracle/xml/binxml/BinXMLConstants
synonym  : oracle/xml/binxml/BinXMLConstants
granting : execute on class oracle/xml/binxml/BinXMLDecodeReader$BinXMLLocator
to PUBLIC
resolving: class oracle/xml/binxml/BinXMLDecodeReader$BinXMLLocator
synonym  : oracle/xml/binxml/BinXMLDecodeReader$BinXMLLocator
granting : execute on class oracle/xml/binxml/BinXMLDecodeReader$DecodeElem to
PUBLIC
skipping : class oracle/xml/binxml/BinXMLDecodeReader$DecodeElem
synonym  : oracle/xml/binxml/BinXMLDecodeReader$DecodeElem
granting : execute on class oracle/xml/binxml/BinXMLDecodeReader$DecodeStream to
PUBLIC
skipping : class oracle/xml/binxml/BinXMLDecodeReader$DecodeStream
synonym  : oracle/xml/binxml/BinXMLDecodeReader$DecodeStream
granting : execute on class oracle/xml/binxml/BinXMLDecodeReader$ElemStack to
PUBLIC
skipping : class oracle/xml/binxml/BinXMLDecodeReader$ElemStack
synonym  : oracle/xml/binxml/BinXMLDecodeReader$ElemStack
granting : execute on class oracle/xml/binxml/BinXMLDecodeReader$MarkInfo to
PUBLIC
skipping : class oracle/xml/binxml/BinXMLDecodeReader$MarkInfo
synonym  : oracle/xml/binxml/BinXMLDecodeReader$MarkInfo
granting : execute on class oracle/xml/binxml/BinXMLDecodeReader$MutableLong to
PUBLIC
skipping : class oracle/xml/binxml/BinXMLDecodeReader$MutableLong
synonym  : oracle/xml/binxml/BinXMLDecodeReader$MutableLong
granting : execute on class oracle/xml/binxml/BinXMLDecodeReader$PrefixInfo to
PUBLIC
skipping : class oracle/xml/binxml/BinXMLDecodeReader$PrefixInfo
synonym  : oracle/xml/binxml/BinXMLDecodeReader$PrefixInfo
granting : execute on class oracle/xml/binxml/BinXMLDecodeReader to PUBLIC
skipping : class oracle/xml/binxml/BinXMLDecodeReader
synonym  : oracle/xml/binxml/BinXMLDecodeReader
granting : execute on class oracle/xml/binxml/BinXMLDecoder to PUBLIC
skipping : class oracle/xml/binxml/BinXMLDecoder
synonym  : oracle/xml/binxml/BinXMLDecoder
granting : execute on class oracle/xml/binxml/BinXMLDecoderImpl to PUBLIC
skipping : class oracle/xml/binxml/BinXMLDecoderImpl
synonym  : oracle/xml/binxml/BinXMLDecoderImpl
granting : execute on class oracle/xml/binxml/BinXMLEncoder to PUBLIC
skipping : class oracle/xml/binxml/BinXMLEncoder
synonym  : oracle/xml/binxml/BinXMLEncoder
granting : execute on class oracle/xml/binxml/BinXMLEncoderImpl$1 to PUBLIC
skipping : class oracle/xml/binxml/BinXMLEncoderImpl$1
synonym  : oracle/xml/binxml/BinXMLEncoderImpl$1
granting : execute on class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLElement to
PUBLIC
skipping : class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLElement
synonym  : oracle/xml/binxml/BinXMLEncoderImpl$BinXMLElement
granting : execute on class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLEncBuffer
to PUBLIC
skipping : class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLEncBuffer
synonym  : oracle/xml/binxml/BinXMLEncoderImpl$BinXMLEncBuffer
granting : execute on class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLPageWriter
to PUBLIC
skipping : class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLPageWriter
synonym  : oracle/xml/binxml/BinXMLEncoderImpl$BinXMLPageWriter
granting : execute on class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLPrefix to
PUBLIC
skipping : class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLPrefix
synonym  : oracle/xml/binxml/BinXMLEncoderImpl$BinXMLPrefix
granting : execute on class
oracle/xml/binxml/BinXMLEncoderImpl$BinXMLSectionState to PUBLIC
skipping : class oracle/xml/binxml/BinXMLEncoderImpl$BinXMLSectionState
synonym  : oracle/xml/binxml/BinXMLEncoderImpl$BinXMLSectionState
granting : execute on class oracle/xml/binxml/BinXMLEncoderImpl$myLong to PUBLIC
skipping : class oracle/xml/binxml/BinXMLEncoderImpl$myLong
synonym  : oracle/xml/binxml/BinXMLEncoderImpl$myLong
granting : execute on class oracle/xml/binxml/BinXMLEncoderImpl to PUBLIC
skipping : class oracle/xml/binxml/BinXMLEncoderImpl
synonym  : oracle/xml/binxml/BinXMLEncoderImpl
granting : execute on class oracle/xml/binxml/BinXMLException to PUBLIC
skipping : class oracle/xml/binxml/BinXMLException
synonym  : oracle/xml/binxml/BinXMLException
granting : execute on class oracle/xml/binxml/BinXMLFormat to PUBLIC
skipping : class oracle/xml/binxml/BinXMLFormat
synonym  : oracle/xml/binxml/BinXMLFormat
granting : execute on class oracle/xml/binxml/BinXMLInfosetReader$Locator to
PUBLIC
skipping : class oracle/xml/binxml/BinXMLInfosetReader$Locator
synonym  : oracle/xml/binxml/BinXMLInfosetReader$Locator
granting : execute on class oracle/xml/binxml/BinXMLInfosetReader$LocatorArray
to PUBLIC
skipping : class oracle/xml/binxml/BinXMLInfosetReader$LocatorArray
synonym  : oracle/xml/binxml/BinXMLInfosetReader$LocatorArray
granting : execute on class
oracle/xml/binxml/BinXMLInfosetReader$LocatorArraySchema to PUBLIC
skipping : class oracle/xml/binxml/BinXMLInfosetReader$LocatorArraySchema
synonym  : oracle/xml/binxml/BinXMLInfosetReader$LocatorArraySchema
granting : execute on class oracle/xml/binxml/BinXMLInfosetReader$LocatorSchema
to PUBLIC
skipping : class oracle/xml/binxml/BinXMLInfosetReader$LocatorSchema
synonym  : oracle/xml/binxml/BinXMLInfosetReader$LocatorSchema
granting : execute on class oracle/xml/binxml/BinXMLInfosetReader to PUBLIC
skipping : class oracle/xml/binxml/BinXMLInfosetReader
synonym  : oracle/xml/binxml/BinXMLInfosetReader
granting : execute on class oracle/xml/binxml/BinXMLInfosetWriter to PUBLIC
skipping : class oracle/xml/binxml/BinXMLInfosetWriter
synonym  : oracle/xml/binxml/BinXMLInfosetWriter
granting : execute on class oracle/xml/binxml/BinXMLJDBCUtil to PUBLIC
resolving: class oracle/xml/binxml/BinXMLJDBCUtil
synonym  : oracle/xml/binxml/BinXMLJDBCUtil
granting : execute on class oracle/xml/binxml/BinXMLJDBCUtil4Oracle to PUBLIC
resolving: class oracle/xml/binxml/BinXMLJDBCUtil4Oracle
synonym  : oracle/xml/binxml/BinXMLJDBCUtil4Oracle
granting : execute on class oracle/xml/binxml/BinXMLMetadataProvider to PUBLIC
skipping : class oracle/xml/binxml/BinXMLMetadataProvider
synonym  : oracle/xml/binxml/BinXMLMetadataProvider
granting : execute on class oracle/xml/binxml/BinXMLMetadataProviderFactory to
PUBLIC
skipping : class oracle/xml/binxml/BinXMLMetadataProviderFactory
synonym  : oracle/xml/binxml/BinXMLMetadataProviderFactory
granting : execute on class oracle/xml/binxml/BinXMLNamespaceToken to PUBLIC
skipping : class oracle/xml/binxml/BinXMLNamespaceToken
synonym  : oracle/xml/binxml/BinXMLNamespaceToken
granting : execute on class oracle/xml/binxml/BinXMLOpcode to PUBLIC
skipping : class oracle/xml/binxml/BinXMLOpcode
synonym  : oracle/xml/binxml/BinXMLOpcode
granting : execute on class oracle/xml/binxml/BinXMLPageOffset to PUBLIC
resolving: class oracle/xml/binxml/BinXMLPageOffset
synonym  : oracle/xml/binxml/BinXMLPageOffset
granting : execute on class oracle/xml/binxml/BinXMLProcessor to PUBLIC
skipping : class oracle/xml/binxml/BinXMLProcessor
synonym  : oracle/xml/binxml/BinXMLProcessor
granting : execute on class oracle/xml/binxml/BinXMLProcessorFactory to PUBLIC
skipping : class oracle/xml/binxml/BinXMLProcessorFactory
synonym  : oracle/xml/binxml/BinXMLProcessorFactory
granting : execute on class oracle/xml/binxml/BinXMLProcessorImpl to PUBLIC
skipping : class oracle/xml/binxml/BinXMLProcessorImpl
synonym  : oracle/xml/binxml/BinXMLProcessorImpl
granting : execute on class oracle/xml/binxml/BinXMLProperty to PUBLIC
skipping : class oracle/xml/binxml/BinXMLProperty
synonym  : oracle/xml/binxml/BinXMLProperty
granting : execute on class oracle/xml/binxml/BinXMLQNameToken to PUBLIC
skipping : class oracle/xml/binxml/BinXMLQNameToken
synonym  : oracle/xml/binxml/BinXMLQNameToken
granting : execute on class oracle/xml/binxml/BinXMLSchLocTag to PUBLIC
skipping : class oracle/xml/binxml/BinXMLSchLocTag
synonym  : oracle/xml/binxml/BinXMLSchLocTag
granting : execute on class oracle/xml/binxml/BinXMLSchema to PUBLIC
skipping : class oracle/xml/binxml/BinXMLSchema
synonym  : oracle/xml/binxml/BinXMLSchema
granting : execute on class
oracle/xml/binxml/BinXMLSchemaAnnotationBuilder$BXProperty to PUBLIC
skipping : class oracle/xml/binxml/BinXMLSchemaAnnotationBuilder$BXProperty
synonym  : oracle/xml/binxml/BinXMLSchemaAnnotationBuilder$BXProperty
granting : execute on class oracle/xml/binxml/BinXMLSchemaAnnotationBuilder to
PUBLIC
skipping : class oracle/xml/binxml/BinXMLSchemaAnnotationBuilder
synonym  : oracle/xml/binxml/BinXMLSchemaAnnotationBuilder
granting : execute on class oracle/xml/binxml/BinXMLSchemaAnnotator to PUBLIC
skipping : class oracle/xml/binxml/BinXMLSchemaAnnotator
synonym  : oracle/xml/binxml/BinXMLSchemaAnnotator
granting : execute on class oracle/xml/binxml/BinXMLSchemaResolver to PUBLIC
skipping : class oracle/xml/binxml/BinXMLSchemaResolver
synonym  : oracle/xml/binxml/BinXMLSchemaResolver
granting : execute on class oracle/xml/binxml/BinXMLSerializer$DecodeThread to
PUBLIC
skipping : class oracle/xml/binxml/BinXMLSerializer$DecodeThread
synonym  : oracle/xml/binxml/BinXMLSerializer$DecodeThread
granting : execute on class oracle/xml/binxml/BinXMLSerializer to PUBLIC
skipping : class oracle/xml/binxml/BinXMLSerializer
synonym  : oracle/xml/binxml/BinXMLSerializer
granting : execute on class oracle/xml/binxml/BinXMLStream to PUBLIC
skipping : class oracle/xml/binxml/BinXMLStream
synonym  : oracle/xml/binxml/BinXMLStream
granting : execute on class oracle/xml/binxml/BinXMLStreamImpl to PUBLIC
skipping : class oracle/xml/binxml/BinXMLStreamImpl
synonym  : oracle/xml/binxml/BinXMLStreamImpl
granting : execute on class oracle/xml/binxml/BinXMLToken to PUBLIC
skipping : class oracle/xml/binxml/BinXMLToken
synonym  : oracle/xml/binxml/BinXMLToken
granting : execute on class oracle/xml/binxml/BinXMLTokenList to PUBLIC
skipping : class oracle/xml/binxml/BinXMLTokenList
synonym  : oracle/xml/binxml/BinXMLTokenList
granting : execute on class oracle/xml/binxml/BinXMLTokenManager to PUBLIC
skipping : class oracle/xml/binxml/BinXMLTokenManager
synonym  : oracle/xml/binxml/BinXMLTokenManager
granting : execute on class oracle/xml/binxml/BinXMLUtil to PUBLIC
skipping : class oracle/xml/binxml/BinXMLUtil
synonym  : oracle/xml/binxml/BinXMLUtil
granting : execute on class oracle/xml/binxml/BinXMLVocabId to PUBLIC
skipping : class oracle/xml/binxml/BinXMLVocabId
synonym  : oracle/xml/binxml/BinXMLVocabId
granting : execute on class oracle/xml/binxml/BinXMLVocabularyManager to PUBLIC
skipping : class oracle/xml/binxml/BinXMLVocabularyManager
synonym  : oracle/xml/binxml/BinXMLVocabularyManager
granting : execute on class oracle/xml/binxml/BinXMLXDBSchemaEntityResolver to
PUBLIC
skipping : class oracle/xml/binxml/BinXMLXDBSchemaEntityResolver
synonym  : oracle/xml/binxml/BinXMLXDBSchemaEntityResolver
granting : execute on class oracle/xml/binxml/DBBinXMLMetadataProvider to PUBLIC
skipping : class oracle/xml/binxml/DBBinXMLMetadataProvider
synonym  : oracle/xml/binxml/DBBinXMLMetadataProvider
granting : execute on class oracle/xml/binxml/DBBinXMLMetadataProviderImpl to
PUBLIC
skipping : class oracle/xml/binxml/DBBinXMLMetadataProviderImpl
synonym  : oracle/xml/binxml/DBBinXMLMetadataProviderImpl
granting : execute on class oracle/xml/xpath/AdditiveExpr to PUBLIC
skipping : class oracle/xml/xpath/AdditiveExpr
synonym  : oracle/xml/xpath/AdditiveExpr
granting : execute on class oracle/xml/xpath/AndExpr to PUBLIC
skipping : class oracle/xml/xpath/AndExpr
synonym  : oracle/xml/xpath/AndExpr
granting : execute on class oracle/xml/xpath/CachedExpr to PUBLIC
skipping : class oracle/xml/xpath/CachedExpr
synonym  : oracle/xml/xpath/CachedExpr
granting : execute on class oracle/xml/xpath/CastableAsExpr to PUBLIC
skipping : class oracle/xml/xpath/CastableAsExpr
synonym  : oracle/xml/xpath/CastableAsExpr
granting : execute on class oracle/xml/xpath/ComparisonExpr to PUBLIC
skipping : class oracle/xml/xpath/ComparisonExpr
synonym  : oracle/xml/xpath/ComparisonExpr
granting : execute on class oracle/xml/xpath/ExprSingle to PUBLIC
skipping : class oracle/xml/xpath/ExprSingle
synonym  : oracle/xml/xpath/ExprSingle
granting : execute on class oracle/xml/xpath/ForExpr to PUBLIC
skipping : class oracle/xml/xpath/ForExpr
synonym  : oracle/xml/xpath/ForExpr
granting : execute on class oracle/xml/xpath/IfExpr to PUBLIC
skipping : class oracle/xml/xpath/IfExpr
synonym  : oracle/xml/xpath/IfExpr
granting : execute on class oracle/xml/xpath/InstanceOfExpr to PUBLIC
skipping : class oracle/xml/xpath/InstanceOfExpr
synonym  : oracle/xml/xpath/InstanceOfExpr
granting : execute on class oracle/xml/xpath/IntersectExceptExpr to PUBLIC
skipping : class oracle/xml/xpath/IntersectExceptExpr
synonym  : oracle/xml/xpath/IntersectExceptExpr
granting : execute on class oracle/xml/xpath/JXPath to PUBLIC
resolving: class oracle/xml/xpath/JXPath
synonym  : oracle/xml/xpath/JXPath
granting : execute on class oracle/xml/xpath/JXPathContext$JXFunction to PUBLIC
skipping : class oracle/xml/xpath/JXPathContext$JXFunction
synonym  : oracle/xml/xpath/JXPathContext$JXFunction
granting : execute on class oracle/xml/xpath/JXPathContext to PUBLIC
skipping : class oracle/xml/xpath/JXPathContext
synonym  : oracle/xml/xpath/JXPathContext
granting : execute on class oracle/xml/xpath/JXPathExpression to PUBLIC
skipping : class oracle/xml/xpath/JXPathExpression
synonym  : oracle/xml/xpath/JXPathExpression
granting : execute on class oracle/xml/xpath/JXPathFactory to PUBLIC
resolving: class oracle/xml/xpath/JXPathFactory
synonym  : oracle/xml/xpath/JXPathFactory
granting : execute on class oracle/xml/xpath/JXPathFunction to PUBLIC
skipping : class oracle/xml/xpath/JXPathFunction
synonym  : oracle/xml/xpath/JXPathFunction
granting : execute on class oracle/xml/xpath/OrExpr to PUBLIC
skipping : class oracle/xml/xpath/OrExpr
synonym  : oracle/xml/xpath/OrExpr
granting : execute on class oracle/xml/xpath/PathExpr to PUBLIC
skipping : class oracle/xml/xpath/PathExpr
synonym  : oracle/xml/xpath/PathExpr
granting : execute on class oracle/xml/xpath/QuantifiedExpr to PUBLIC
skipping : class oracle/xml/xpath/QuantifiedExpr
synonym  : oracle/xml/xpath/QuantifiedExpr
granting : execute on class oracle/xml/xpath/RangeExpr to PUBLIC
skipping : class oracle/xml/xpath/RangeExpr
synonym  : oracle/xml/xpath/RangeExpr
granting : execute on class oracle/xml/xpath/StreamingSequence to PUBLIC
skipping : class oracle/xml/xpath/StreamingSequence
synonym  : oracle/xml/xpath/StreamingSequence
granting : execute on class oracle/xml/xpath/TreatExpr to PUBLIC
skipping : class oracle/xml/xpath/TreatExpr
synonym  : oracle/xml/xpath/TreatExpr
granting : execute on class oracle/xml/xpath/UnaryExpr to PUBLIC
skipping : class oracle/xml/xpath/UnaryExpr
synonym  : oracle/xml/xpath/UnaryExpr
granting : execute on class oracle/xml/xpath/XPathAncestorAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathAncestorAxis
synonym  : oracle/xml/xpath/XPathAncestorAxis
granting : execute on class oracle/xml/xpath/XPathAncestorOrSelfAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathAncestorOrSelfAxis
synonym  : oracle/xml/xpath/XPathAncestorOrSelfAxis
granting : execute on class oracle/xml/xpath/XPathAttributeAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathAttributeAxis
synonym  : oracle/xml/xpath/XPathAttributeAxis
granting : execute on class oracle/xml/xpath/XPathAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathAxis
synonym  : oracle/xml/xpath/XPathAxis
granting : execute on class oracle/xml/xpath/XPathCastExpr to PUBLIC
skipping : class oracle/xml/xpath/XPathCastExpr
synonym  : oracle/xml/xpath/XPathCastExpr
granting : execute on class oracle/xml/xpath/XPathChildAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathChildAxis
synonym  : oracle/xml/xpath/XPathChildAxis
granting : execute on class oracle/xml/xpath/XPathCompatibiltyExpr to PUBLIC
skipping : class oracle/xml/xpath/XPathCompatibiltyExpr
synonym  : oracle/xml/xpath/XPathCompatibiltyExpr
granting : execute on class oracle/xml/xpath/XPathConstantExpr to PUBLIC
skipping : class oracle/xml/xpath/XPathConstantExpr
synonym  : oracle/xml/xpath/XPathConstantExpr
granting : execute on class oracle/xml/xpath/XPathContext to PUBLIC
skipping : class oracle/xml/xpath/XPathContext
synonym  : oracle/xml/xpath/XPathContext
granting : execute on class oracle/xml/xpath/XPathContextItemExpr to PUBLIC
skipping : class oracle/xml/xpath/XPathContextItemExpr
synonym  : oracle/xml/xpath/XPathContextItemExpr
granting : execute on class oracle/xml/xpath/XPathConvertAsExpr to PUBLIC
skipping : class oracle/xml/xpath/XPathConvertAsExpr
synonym  : oracle/xml/xpath/XPathConvertAsExpr
granting : execute on class oracle/xml/xpath/XPathDescOrSelfAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathDescOrSelfAxis
synonym  : oracle/xml/xpath/XPathDescOrSelfAxis
granting : execute on class oracle/xml/xpath/XPathDescendantAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathDescendantAxis
synonym  : oracle/xml/xpath/XPathDescendantAxis
granting : execute on class oracle/xml/xpath/XPathError to PUBLIC
skipping : class oracle/xml/xpath/XPathError
synonym  : oracle/xml/xpath/XPathError
granting : execute on class oracle/xml/xpath/XPathException to PUBLIC
skipping : class oracle/xml/xpath/XPathException
synonym  : oracle/xml/xpath/XPathException
granting : execute on class oracle/xml/xpath/XPathExtFunction to PUBLIC
skipping : class oracle/xml/xpath/XPathExtFunction
synonym  : oracle/xml/xpath/XPathExtFunction
granting : execute on class oracle/xml/xpath/XPathFilterExpr to PUBLIC
skipping : class oracle/xml/xpath/XPathFilterExpr
synonym  : oracle/xml/xpath/XPathFilterExpr
granting : execute on class oracle/xml/xpath/XPathFollowingAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathFollowingAxis
synonym  : oracle/xml/xpath/XPathFollowingAxis
granting : execute on class oracle/xml/xpath/XPathFollowingSiblingAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathFollowingSiblingAxis
synonym  : oracle/xml/xpath/XPathFollowingSiblingAxis
granting : execute on class oracle/xml/xpath/XPathFunctionCall to PUBLIC
skipping : class oracle/xml/xpath/XPathFunctionCall
synonym  : oracle/xml/xpath/XPathFunctionCall
granting : execute on class oracle/xml/xpath/XPathItem to PUBLIC
skipping : class oracle/xml/xpath/XPathItem
synonym  : oracle/xml/xpath/XPathItem
granting : execute on class oracle/xml/xpath/XPathNamespaceAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathNamespaceAxis
synonym  : oracle/xml/xpath/XPathNamespaceAxis
granting : execute on class oracle/xml/xpath/XPathParentAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathParentAxis
synonym  : oracle/xml/xpath/XPathParentAxis
granting : execute on class oracle/xml/xpath/XPathPrecedingAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathPrecedingAxis
synonym  : oracle/xml/xpath/XPathPrecedingAxis
granting : execute on class oracle/xml/xpath/XPathPrecedingSiblingAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathPrecedingSiblingAxis
synonym  : oracle/xml/xpath/XPathPrecedingSiblingAxis
granting : execute on class oracle/xml/xpath/XPathPredicate to PUBLIC
skipping : class oracle/xml/xpath/XPathPredicate
synonym  : oracle/xml/xpath/XPathPredicate
granting : execute on class oracle/xml/xpath/XPathRuntimeContext to PUBLIC
skipping : class oracle/xml/xpath/XPathRuntimeContext
synonym  : oracle/xml/xpath/XPathRuntimeContext
granting : execute on class oracle/xml/xpath/XPathSelfAxis to PUBLIC
skipping : class oracle/xml/xpath/XPathSelfAxis
synonym  : oracle/xml/xpath/XPathSelfAxis
granting : execute on class oracle/xml/xpath/XPathSeqType to PUBLIC
skipping : class oracle/xml/xpath/XPathSeqType
synonym  : oracle/xml/xpath/XPathSeqType
granting : execute on class oracle/xml/xpath/XPathSequence to PUBLIC
skipping : class oracle/xml/xpath/XPathSequence
synonym  : oracle/xml/xpath/XPathSequence
granting : execute on class oracle/xml/xpath/XPathStep to PUBLIC
skipping : class oracle/xml/xpath/XPathStep
synonym  : oracle/xml/xpath/XPathStep
granting : execute on class oracle/xml/xpath/XPathVarReference to PUBLIC
skipping : class oracle/xml/xpath/XPathVarReference
synonym  : oracle/xml/xpath/XPathVarReference
granting : execute on class oracle/xml/xpath/XPathXSLFunction to PUBLIC
skipping : class oracle/xml/xpath/XPathXSLFunction
synonym  : oracle/xml/xpath/XPathXSLFunction
granting : execute on class oracle/xml/xpath/XSLExpr to PUBLIC
skipping : class oracle/xml/xpath/XSLExpr
synonym  : oracle/xml/xpath/XSLExpr
granting : execute on class oracle/xml/xpath/XSLExprBase to PUBLIC
skipping : class oracle/xml/xpath/XSLExprBase
synonym  : oracle/xml/xpath/XSLExprBase
granting : execute on class oracle/xml/xpath/XSLExprConstants to PUBLIC
skipping : class oracle/xml/xpath/XSLExprConstants
synonym  : oracle/xml/xpath/XSLExprConstants
granting : execute on class oracle/xml/xpath/XSLExtFunctions to PUBLIC
skipping : class oracle/xml/xpath/XSLExtFunctions
synonym  : oracle/xml/xpath/XSLExtFunctions
granting : execute on class oracle/xml/xpath/XSLNodeSetExpr to PUBLIC
skipping : class oracle/xml/xpath/XSLNodeSetExpr
synonym  : oracle/xml/xpath/XSLNodeSetExpr
granting : execute on class oracle/xml/xpath/XSLParseString to PUBLIC
skipping : class oracle/xml/xpath/XSLParseString
synonym  : oracle/xml/xpath/XSLParseString
granting : execute on class oracle/xml/xslt/WildCard to PUBLIC
skipping : class oracle/xml/xslt/WildCard
synonym  : oracle/xml/xslt/WildCard
granting : execute on class oracle/xml/xslt/XMLStreamFilter$Property to PUBLIC
skipping : class oracle/xml/xslt/XMLStreamFilter$Property
synonym  : oracle/xml/xslt/XMLStreamFilter$Property
granting : execute on class oracle/xml/xslt/XMLStreamFilter to PUBLIC
skipping : class oracle/xml/xslt/XMLStreamFilter
synonym  : oracle/xml/xslt/XMLStreamFilter
granting : execute on class oracle/xml/xslt/XSLApplyImport to PUBLIC
skipping : class oracle/xml/xslt/XSLApplyImport
synonym  : oracle/xml/xslt/XSLApplyImport
granting : execute on class oracle/xml/xslt/XSLApplyTemplates to PUBLIC
skipping : class oracle/xml/xslt/XSLApplyTemplates
synonym  : oracle/xml/xslt/XSLApplyTemplates
granting : execute on class oracle/xml/xslt/XSLAttribute to PUBLIC
skipping : class oracle/xml/xslt/XSLAttribute
synonym  : oracle/xml/xslt/XSLAttribute
granting : execute on class oracle/xml/xslt/XSLAttributeSet to PUBLIC
skipping : class oracle/xml/xslt/XSLAttributeSet
synonym  : oracle/xml/xslt/XSLAttributeSet
granting : execute on class oracle/xml/xslt/XSLBuilder to PUBLIC
skipping : class oracle/xml/xslt/XSLBuilder
synonym  : oracle/xml/xslt/XSLBuilder
granting : execute on class oracle/xml/xslt/XSLCallTemplate to PUBLIC
skipping : class oracle/xml/xslt/XSLCallTemplate
synonym  : oracle/xml/xslt/XSLCallTemplate
granting : execute on class oracle/xml/xslt/XSLCharacterMap to PUBLIC
skipping : class oracle/xml/xslt/XSLCharacterMap
synonym  : oracle/xml/xslt/XSLCharacterMap
granting : execute on class oracle/xml/xslt/XSLCondition to PUBLIC
skipping : class oracle/xml/xslt/XSLCondition
synonym  : oracle/xml/xslt/XSLCondition
granting : execute on class oracle/xml/xslt/XSLConstants to PUBLIC
skipping : class oracle/xml/xslt/XSLConstants
synonym  : oracle/xml/xslt/XSLConstants
granting : execute on class oracle/xml/xslt/XSLCopy to PUBLIC
skipping : class oracle/xml/xslt/XSLCopy
synonym  : oracle/xml/xslt/XSLCopy
granting : execute on class oracle/xml/xslt/XSLCopyOf to PUBLIC
skipping : class oracle/xml/xslt/XSLCopyOf
synonym  : oracle/xml/xslt/XSLCopyOf
granting : execute on class oracle/xml/xslt/XSLDocument to PUBLIC
skipping : class oracle/xml/xslt/XSLDocument
synonym  : oracle/xml/xslt/XSLDocument
granting : execute on class oracle/xml/xslt/XSLDocumentBuilder to PUBLIC
skipping : class oracle/xml/xslt/XSLDocumentBuilder
synonym  : oracle/xml/xslt/XSLDocumentBuilder
granting : execute on class oracle/xml/xslt/XSLElement to PUBLIC
skipping : class oracle/xml/xslt/XSLElement
synonym  : oracle/xml/xslt/XSLElement
granting : execute on class oracle/xml/xslt/XSLEventHandler to PUBLIC
skipping : class oracle/xml/xslt/XSLEventHandler
synonym  : oracle/xml/xslt/XSLEventHandler
granting : execute on class oracle/xml/xslt/XSLException to PUBLIC
skipping : class oracle/xml/xslt/XSLException
synonym  : oracle/xml/xslt/XSLException
granting : execute on class oracle/xml/xslt/XSLFallback to PUBLIC
skipping : class oracle/xml/xslt/XSLFallback
synonym  : oracle/xml/xslt/XSLFallback
granting : execute on class oracle/xml/xslt/XSLForEach to PUBLIC
skipping : class oracle/xml/xslt/XSLForEach
synonym  : oracle/xml/xslt/XSLForEach
granting : execute on class oracle/xml/xslt/XSLForEachGroup to PUBLIC
skipping : class oracle/xml/xslt/XSLForEachGroup
synonym  : oracle/xml/xslt/XSLForEachGroup
granting : execute on class oracle/xml/xslt/XSLFunction to PUBLIC
skipping : class oracle/xml/xslt/XSLFunction
synonym  : oracle/xml/xslt/XSLFunction
granting : execute on class oracle/xml/xslt/XSLFunctionDS to PUBLIC
skipping : class oracle/xml/xslt/XSLFunctionDS
synonym  : oracle/xml/xslt/XSLFunctionDS
granting : execute on class oracle/xml/xslt/XSLKey to PUBLIC
skipping : class oracle/xml/xslt/XSLKey
synonym  : oracle/xml/xslt/XSLKey
granting : execute on class oracle/xml/xslt/XSLMiscElements to PUBLIC
skipping : class oracle/xml/xslt/XSLMiscElements
synonym  : oracle/xml/xslt/XSLMiscElements
granting : execute on class oracle/xml/xslt/XSLNamespace to PUBLIC
skipping : class oracle/xml/xslt/XSLNamespace
synonym  : oracle/xml/xslt/XSLNamespace
granting : execute on class oracle/xml/xslt/XSLNamespace2 to PUBLIC
skipping : class oracle/xml/xslt/XSLNamespace2
synonym  : oracle/xml/xslt/XSLNamespace2
granting : execute on class oracle/xml/xslt/XSLNextMatch to PUBLIC
skipping : class oracle/xml/xslt/XSLNextMatch
synonym  : oracle/xml/xslt/XSLNextMatch
granting : execute on class oracle/xml/xslt/XSLNode$AttrValueTmpl to PUBLIC
skipping : class oracle/xml/xslt/XSLNode$AttrValueTmpl
synonym  : oracle/xml/xslt/XSLNode$AttrValueTmpl
granting : execute on class oracle/xml/xslt/XSLNode$EndElement to PUBLIC
skipping : class oracle/xml/xslt/XSLNode$EndElement
synonym  : oracle/xml/xslt/XSLNode$EndElement
granting : execute on class oracle/xml/xslt/XSLNode$UpdateVar to PUBLIC
skipping : class oracle/xml/xslt/XSLNode$UpdateVar
synonym  : oracle/xml/xslt/XSLNode$UpdateVar
granting : execute on class oracle/xml/xslt/XSLNode to PUBLIC
skipping : class oracle/xml/xslt/XSLNode
synonym  : oracle/xml/xslt/XSLNode
granting : execute on class oracle/xml/xslt/XSLNumber to PUBLIC
skipping : class oracle/xml/xslt/XSLNumber
synonym  : oracle/xml/xslt/XSLNumber
granting : execute on class oracle/xml/xslt/XSLOtherElements to PUBLIC
skipping : class oracle/xml/xslt/XSLOtherElements
synonym  : oracle/xml/xslt/XSLOtherElements
granting : execute on class oracle/xml/xslt/XSLOutput to PUBLIC
skipping : class oracle/xml/xslt/XSLOutput
synonym  : oracle/xml/xslt/XSLOutput
granting : execute on class oracle/xml/xslt/XSLOutputCharacter to PUBLIC
skipping : class oracle/xml/xslt/XSLOutputCharacter
synonym  : oracle/xml/xslt/XSLOutputCharacter
granting : execute on class oracle/xml/xslt/XSLPerfSort to PUBLIC
skipping : class oracle/xml/xslt/XSLPerfSort
synonym  : oracle/xml/xslt/XSLPerfSort
granting : execute on class oracle/xml/xslt/XSLProcessor$XSLTVersion to PUBLIC
skipping : class oracle/xml/xslt/XSLProcessor$XSLTVersion
synonym  : oracle/xml/xslt/XSLProcessor$XSLTVersion
granting : execute on class oracle/xml/xslt/XSLProcessor to PUBLIC
skipping : class oracle/xml/xslt/XSLProcessor
synonym  : oracle/xml/xslt/XSLProcessor
granting : execute on class oracle/xml/xslt/XSLResultDocument to PUBLIC
skipping : class oracle/xml/xslt/XSLResultDocument
synonym  : oracle/xml/xslt/XSLResultDocument
granting : execute on class oracle/xml/xslt/XSLResultElement to PUBLIC
skipping : class oracle/xml/xslt/XSLResultElement
synonym  : oracle/xml/xslt/XSLResultElement
granting : execute on class oracle/xml/xslt/XSLSAXPrintDriver to PUBLIC
skipping : class oracle/xml/xslt/XSLSAXPrintDriver
synonym  : oracle/xml/xslt/XSLSAXPrintDriver
granting : execute on class oracle/xml/xslt/XSLSequence to PUBLIC
skipping : class oracle/xml/xslt/XSLSequence
synonym  : oracle/xml/xslt/XSLSequence
granting : execute on class oracle/xml/xslt/XSLSort to PUBLIC
skipping : class oracle/xml/xslt/XSLSort
synonym  : oracle/xml/xslt/XSLSort
granting : execute on class oracle/xml/xslt/XSLSortKey to PUBLIC
skipping : class oracle/xml/xslt/XSLSortKey
synonym  : oracle/xml/xslt/XSLSortKey
granting : execute on class oracle/xml/xslt/XSLSourceContext to PUBLIC
skipping : class oracle/xml/xslt/XSLSourceContext
synonym  : oracle/xml/xslt/XSLSourceContext
granting : execute on class oracle/xml/xslt/XSLSpaceElem to PUBLIC
skipping : class oracle/xml/xslt/XSLSpaceElem
synonym  : oracle/xml/xslt/XSLSpaceElem
granting : execute on class oracle/xml/xslt/XSLStylesheet$dfstruct to PUBLIC
skipping : class oracle/xml/xslt/XSLStylesheet$dfstruct
synonym  : oracle/xml/xslt/XSLStylesheet$dfstruct
granting : execute on class oracle/xml/xslt/XSLStylesheet to PUBLIC
skipping : class oracle/xml/xslt/XSLStylesheet
synonym  : oracle/xml/xslt/XSLStylesheet
granting : execute on class oracle/xml/xslt/XSLTContext to PUBLIC
skipping : class oracle/xml/xslt/XSLTContext
synonym  : oracle/xml/xslt/XSLTContext
granting : execute on class oracle/xml/xslt/XSLTemplate to PUBLIC
skipping : class oracle/xml/xslt/XSLTemplate
synonym  : oracle/xml/xslt/XSLTemplate
granting : execute on class oracle/xml/xslt/XSLText to PUBLIC
skipping : class oracle/xml/xslt/XSLText
synonym  : oracle/xml/xslt/XSLText
granting : execute on class oracle/xml/xslt/XSLValueOf to PUBLIC
skipping : class oracle/xml/xslt/XSLValueOf
synonym  : oracle/xml/xslt/XSLValueOf
granting : execute on class oracle/xml/xslt/XSLVariable to PUBLIC
skipping : class oracle/xml/xslt/XSLVariable
synonym  : oracle/xml/xslt/XSLVariable
granting : execute on class oracle/xml/util/ArrayPool to PUBLIC
skipping : class oracle/xml/util/ArrayPool
synonym  : oracle/xml/util/ArrayPool
granting : execute on class oracle/xml/util/FastVector to PUBLIC
skipping : class oracle/xml/util/FastVector
synonym  : oracle/xml/util/FastVector
granting : execute on class oracle/xml/util/HashInt$Entry to PUBLIC
resolving: class oracle/xml/util/HashInt$Entry
synonym  : oracle/xml/util/HashInt$Entry
granting : execute on class oracle/xml/util/HashInt to PUBLIC
skipping : class oracle/xml/util/HashInt
synonym  : oracle/xml/util/HashInt
granting : execute on class oracle/xml/util/MaskingThread to PUBLIC
resolving: class oracle/xml/util/MaskingThread
synonym  : oracle/xml/util/MaskingThread
granting : execute on class oracle/xml/util/NSName to PUBLIC
skipping : class oracle/xml/util/NSName
synonym  : oracle/xml/util/NSName
granting : execute on class oracle/xml/util/NSNameImpl to PUBLIC
skipping : class oracle/xml/util/NSNameImpl
synonym  : oracle/xml/util/NSNameImpl
granting : execute on class oracle/xml/util/OraURI to PUBLIC
skipping : class oracle/xml/util/OraURI
synonym  : oracle/xml/util/OraURI
granting : execute on class oracle/xml/util/OraURIException to PUBLIC
skipping : class oracle/xml/util/OraURIException
synonym  : oracle/xml/util/OraURIException
granting : execute on class oracle/xml/util/OraURIUtil to PUBLIC
skipping : class oracle/xml/util/OraURIUtil
synonym  : oracle/xml/util/OraURIUtil
granting : execute on class oracle/xml/util/PasswordField to PUBLIC
resolving: class oracle/xml/util/PasswordField
synonym  : oracle/xml/util/PasswordField
granting : execute on class oracle/xml/util/Queue to PUBLIC
resolving: class oracle/xml/util/Queue
synonym  : oracle/xml/util/Queue
granting : execute on class oracle/xml/util/QxName to PUBLIC
skipping : class oracle/xml/util/QxName
synonym  : oracle/xml/util/QxName
granting : execute on class oracle/xml/util/QxNameHash$WeakValue to PUBLIC
skipping : class oracle/xml/util/QxNameHash$WeakValue
synonym  : oracle/xml/util/QxNameHash$WeakValue
granting : execute on class oracle/xml/util/QxNameHash to PUBLIC
skipping : class oracle/xml/util/QxNameHash
synonym  : oracle/xml/util/QxNameHash
granting : execute on class oracle/xml/util/StringHashtable$Entry to PUBLIC
skipping : class oracle/xml/util/StringHashtable$Entry
synonym  : oracle/xml/util/StringHashtable$Entry
granting : execute on class oracle/xml/util/StringHashtable to PUBLIC
skipping : class oracle/xml/util/StringHashtable
synonym  : oracle/xml/util/StringHashtable
granting : execute on class oracle/xml/util/UnicodeUtil to PUBLIC
skipping : class oracle/xml/util/UnicodeUtil
synonym  : oracle/xml/util/UnicodeUtil
granting : execute on class oracle/xml/util/XMLCompatible to PUBLIC
skipping : class oracle/xml/util/XMLCompatible
synonym  : oracle/xml/util/XMLCompatible
granting : execute on class oracle/xml/util/XMLError to PUBLIC
skipping : class oracle/xml/util/XMLError
synonym  : oracle/xml/util/XMLError
granting : execute on class oracle/xml/util/XMLException to PUBLIC
skipping : class oracle/xml/util/XMLException
synonym  : oracle/xml/util/XMLException
granting : execute on class oracle/xml/util/XMLProperties to PUBLIC
skipping : class oracle/xml/util/XMLProperties
synonym  : oracle/xml/util/XMLProperties
granting : execute on class oracle/xml/util/XMLUtil$1 to PUBLIC
skipping : class oracle/xml/util/XMLUtil$1
synonym  : oracle/xml/util/XMLUtil$1
granting : execute on class oracle/xml/util/XMLUtil$2 to PUBLIC
skipping : class oracle/xml/util/XMLUtil$2
synonym  : oracle/xml/util/XMLUtil$2
granting : execute on class oracle/xml/util/XMLUtil to PUBLIC
skipping : class oracle/xml/util/XMLUtil
synonym  : oracle/xml/util/XMLUtil
granting : execute on class oracle/xml/jdwp/Field to PUBLIC
skipping : class oracle/xml/jdwp/Field
synonym  : oracle/xml/jdwp/Field
granting : execute on class oracle/xml/jdwp/LineTable to PUBLIC
skipping : class oracle/xml/jdwp/LineTable
synonym  : oracle/xml/jdwp/LineTable
granting : execute on class oracle/xml/jdwp/VariableTable to PUBLIC
skipping : class oracle/xml/jdwp/VariableTable
synonym  : oracle/xml/jdwp/VariableTable
granting : execute on class oracle/xml/jdwp/XSLDebugProp to PUBLIC
skipping : class oracle/xml/jdwp/XSLDebugProp
synonym  : oracle/xml/jdwp/XSLDebugProp
granting : execute on class oracle/xml/jdwp/XSLJDWPArrayReference to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPArrayReference
synonym  : oracle/xml/jdwp/XSLJDWPArrayReference
granting : execute on class oracle/xml/jdwp/XSLJDWPBreakpointEvent to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPBreakpointEvent
synonym  : oracle/xml/jdwp/XSLJDWPBreakpointEvent
granting : execute on class oracle/xml/jdwp/XSLJDWPClassMatchEventRequest to
PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPClassMatchEventRequest
synonym  : oracle/xml/jdwp/XSLJDWPClassMatchEventRequest
granting : execute on class oracle/xml/jdwp/XSLJDWPClassPrepareEvent to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPClassPrepareEvent
synonym  : oracle/xml/jdwp/XSLJDWPClassPrepareEvent
granting : execute on class oracle/xml/jdwp/XSLJDWPClassType to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPClassType
synonym  : oracle/xml/jdwp/XSLJDWPClassType
granting : execute on class oracle/xml/jdwp/XSLJDWPCommandSet to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPCommandSet
synonym  : oracle/xml/jdwp/XSLJDWPCommandSet
granting : execute on class oracle/xml/jdwp/XSLJDWPConstants to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPConstants
synonym  : oracle/xml/jdwp/XSLJDWPConstants
granting : execute on class oracle/xml/jdwp/XSLJDWPDebugger to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPDebugger
synonym  : oracle/xml/jdwp/XSLJDWPDebugger
granting : execute on class oracle/xml/jdwp/XSLJDWPError to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPError
synonym  : oracle/xml/jdwp/XSLJDWPError
granting : execute on class oracle/xml/jdwp/XSLJDWPEvent to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPEvent
synonym  : oracle/xml/jdwp/XSLJDWPEvent
granting : execute on class oracle/xml/jdwp/XSLJDWPEventManager to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPEventManager
synonym  : oracle/xml/jdwp/XSLJDWPEventManager
granting : execute on class oracle/xml/jdwp/XSLJDWPEventRequest to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPEventRequest
synonym  : oracle/xml/jdwp/XSLJDWPEventRequest
granting : execute on class oracle/xml/jdwp/XSLJDWPEventRequestGroup to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPEventRequestGroup
synonym  : oracle/xml/jdwp/XSLJDWPEventRequestGroup
granting : execute on class oracle/xml/jdwp/XSLJDWPEventRequestManager to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPEventRequestManager
synonym  : oracle/xml/jdwp/XSLJDWPEventRequestManager
granting : execute on class oracle/xml/jdwp/XSLJDWPEventValue to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPEventValue
synonym  : oracle/xml/jdwp/XSLJDWPEventValue
granting : execute on class oracle/xml/jdwp/XSLJDWPEventValue4ContextNode to
PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPEventValue4ContextNode
synonym  : oracle/xml/jdwp/XSLJDWPEventValue4ContextNode
granting : execute on class oracle/xml/jdwp/XSLJDWPEvents to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPEvents
synonym  : oracle/xml/jdwp/XSLJDWPEvents
granting : execute on class oracle/xml/jdwp/XSLJDWPException to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPException
synonym  : oracle/xml/jdwp/XSLJDWPException
granting : execute on class oracle/xml/jdwp/XSLJDWPExceptionEvent to PUBLIC
resolving: class oracle/xml/jdwp/XSLJDWPExceptionEvent
synonym  : oracle/xml/jdwp/XSLJDWPExceptionEvent
granting : execute on class oracle/xml/jdwp/XSLJDWPFieldAccessEvent to PUBLIC
resolving: class oracle/xml/jdwp/XSLJDWPFieldAccessEvent
synonym  : oracle/xml/jdwp/XSLJDWPFieldAccessEvent
granting : execute on class oracle/xml/jdwp/XSLJDWPFieldModificationEvent to
PUBLIC
resolving: class oracle/xml/jdwp/XSLJDWPFieldModificationEvent
synonym  : oracle/xml/jdwp/XSLJDWPFieldModificationEvent
granting : execute on class oracle/xml/jdwp/XSLJDWPFieldOnlyEventRequest to
PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPFieldOnlyEventRequest
synonym  : oracle/xml/jdwp/XSLJDWPFieldOnlyEventRequest
granting : execute on class oracle/xml/jdwp/XSLJDWPLocation to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPLocation
synonym  : oracle/xml/jdwp/XSLJDWPLocation
granting : execute on class oracle/xml/jdwp/XSLJDWPLocationOnlyEventRequest to
PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPLocationOnlyEventRequest
synonym  : oracle/xml/jdwp/XSLJDWPLocationOnlyEventRequest
granting : execute on class oracle/xml/jdwp/XSLJDWPMethod to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPMethod
synonym  : oracle/xml/jdwp/XSLJDWPMethod
granting : execute on class oracle/xml/jdwp/XSLJDWPMethodEntryEvent to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPMethodEntryEvent
synonym  : oracle/xml/jdwp/XSLJDWPMethodEntryEvent
granting : execute on class oracle/xml/jdwp/XSLJDWPMethodExitEvent to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPMethodExitEvent
synonym  : oracle/xml/jdwp/XSLJDWPMethodExitEvent
granting : execute on class oracle/xml/jdwp/XSLJDWPNode to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPNode
synonym  : oracle/xml/jdwp/XSLJDWPNode
granting : execute on class oracle/xml/jdwp/XSLJDWPObjectReference to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPObjectReference
synonym  : oracle/xml/jdwp/XSLJDWPObjectReference
granting : execute on class oracle/xml/jdwp/XSLJDWPOutQueue to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPOutQueue
synonym  : oracle/xml/jdwp/XSLJDWPOutQueue
granting : execute on class oracle/xml/jdwp/XSLJDWPPacket to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPPacket
synonym  : oracle/xml/jdwp/XSLJDWPPacket
granting : execute on class oracle/xml/jdwp/XSLJDWPPacketStream to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPPacketStream
synonym  : oracle/xml/jdwp/XSLJDWPPacketStream
granting : execute on class oracle/xml/jdwp/XSLJDWPPacketValue to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPPacketValue
synonym  : oracle/xml/jdwp/XSLJDWPPacketValue
granting : execute on class oracle/xml/jdwp/XSLJDWPReferenceType to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPReferenceType
synonym  : oracle/xml/jdwp/XSLJDWPReferenceType
granting : execute on class oracle/xml/jdwp/XSLJDWPSingleStepEvent to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPSingleStepEvent
synonym  : oracle/xml/jdwp/XSLJDWPSingleStepEvent
granting : execute on class oracle/xml/jdwp/XSLJDWPSockReader to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPSockReader
synonym  : oracle/xml/jdwp/XSLJDWPSockReader
granting : execute on class oracle/xml/jdwp/XSLJDWPSockWriter to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPSockWriter
synonym  : oracle/xml/jdwp/XSLJDWPSockWriter
granting : execute on class oracle/xml/jdwp/XSLJDWPSocketConn to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPSocketConn
synonym  : oracle/xml/jdwp/XSLJDWPSocketConn
granting : execute on class oracle/xml/jdwp/XSLJDWPStackFrame to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPStackFrame
synonym  : oracle/xml/jdwp/XSLJDWPStackFrame
granting : execute on class oracle/xml/jdwp/XSLJDWPStepEventRequest to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPStepEventRequest
synonym  : oracle/xml/jdwp/XSLJDWPStepEventRequest
granting : execute on class oracle/xml/jdwp/XSLJDWPString to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPString
synonym  : oracle/xml/jdwp/XSLJDWPString
granting : execute on class oracle/xml/jdwp/XSLJDWPStringReference to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPStringReference
synonym  : oracle/xml/jdwp/XSLJDWPStringReference
granting : execute on class oracle/xml/jdwp/XSLJDWPThreadDeathEvent to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPThreadDeathEvent
synonym  : oracle/xml/jdwp/XSLJDWPThreadDeathEvent
granting : execute on class oracle/xml/jdwp/XSLJDWPThreadGroupReference to
PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPThreadGroupReference
synonym  : oracle/xml/jdwp/XSLJDWPThreadGroupReference
granting : execute on class oracle/xml/jdwp/XSLJDWPThreadReference to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPThreadReference
synonym  : oracle/xml/jdwp/XSLJDWPThreadReference
granting : execute on class oracle/xml/jdwp/XSLJDWPThreadStartEvent to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPThreadStartEvent
synonym  : oracle/xml/jdwp/XSLJDWPThreadStartEvent
granting : execute on class oracle/xml/jdwp/XSLJDWPUtil to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPUtil
synonym  : oracle/xml/jdwp/XSLJDWPUtil
granting : execute on class oracle/xml/jdwp/XSLJDWPVMDeathEvent to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPVMDeathEvent
synonym  : oracle/xml/jdwp/XSLJDWPVMDeathEvent
granting : execute on class oracle/xml/jdwp/XSLJDWPVMStartEvent to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPVMStartEvent
synonym  : oracle/xml/jdwp/XSLJDWPVMStartEvent
granting : execute on class oracle/xml/jdwp/XSLJDWPVirtualMachine to PUBLIC
skipping : class oracle/xml/jdwp/XSLJDWPVirtualMachine
synonym  : oracle/xml/jdwp/XSLJDWPVirtualMachine
granting : execute on class oracle/xml/async/DOMBuilder to PUBLIC
resolving: class oracle/xml/async/DOMBuilder
synonym  : oracle/xml/async/DOMBuilder
granting : execute on class oracle/xml/async/DOMBuilderBeanInfo to PUBLIC
resolving: class oracle/xml/async/DOMBuilderBeanInfo
synonym  : oracle/xml/async/DOMBuilderBeanInfo
granting : execute on class oracle/xml/async/DOMBuilderConstants to PUBLIC
skipping : class oracle/xml/async/DOMBuilderConstants
synonym  : oracle/xml/async/DOMBuilderConstants
granting : execute on class oracle/xml/async/DOMBuilderErrorEvent to PUBLIC
skipping : class oracle/xml/async/DOMBuilderErrorEvent
synonym  : oracle/xml/async/DOMBuilderErrorEvent
granting : execute on class oracle/xml/async/DOMBuilderErrorListener to PUBLIC
skipping : class oracle/xml/async/DOMBuilderErrorListener
synonym  : oracle/xml/async/DOMBuilderErrorListener
granting : execute on class oracle/xml/async/DOMBuilderEvent to PUBLIC
skipping : class oracle/xml/async/DOMBuilderEvent
synonym  : oracle/xml/async/DOMBuilderEvent
granting : execute on class oracle/xml/async/DOMBuilderListener to PUBLIC
skipping : class oracle/xml/async/DOMBuilderListener
synonym  : oracle/xml/async/DOMBuilderListener
granting : execute on class oracle/xml/async/ResourceManager to PUBLIC
resolving: class oracle/xml/async/ResourceManager
synonym  : oracle/xml/async/ResourceManager
granting : execute on class oracle/xml/async/SAXBuilder to PUBLIC
skipping : class oracle/xml/async/SAXBuilder
synonym  : oracle/xml/async/SAXBuilder
granting : execute on class oracle/xml/async/XSLTransformer to PUBLIC
resolving: class oracle/xml/async/XSLTransformer
synonym  : oracle/xml/async/XSLTransformer
granting : execute on class oracle/xml/async/XSLTransformerBeanInfo to PUBLIC
resolving: class oracle/xml/async/XSLTransformerBeanInfo
synonym  : oracle/xml/async/XSLTransformerBeanInfo
granting : execute on class oracle/xml/async/XSLTransformerConstants to PUBLIC
skipping : class oracle/xml/async/XSLTransformerConstants
synonym  : oracle/xml/async/XSLTransformerConstants
granting : execute on class oracle/xml/async/XSLTransformerErrorEvent to PUBLIC
skipping : class oracle/xml/async/XSLTransformerErrorEvent
synonym  : oracle/xml/async/XSLTransformerErrorEvent
granting : execute on class oracle/xml/async/XSLTransformerErrorListener to
PUBLIC
skipping : class oracle/xml/async/XSLTransformerErrorListener
synonym  : oracle/xml/async/XSLTransformerErrorListener
granting : execute on class oracle/xml/async/XSLTransformerEvent to PUBLIC
skipping : class oracle/xml/async/XSLTransformerEvent
synonym  : oracle/xml/async/XSLTransformerEvent
granting : execute on class oracle/xml/async/XSLTransformerListener to PUBLIC
skipping : class oracle/xml/async/XSLTransformerListener
synonym  : oracle/xml/async/XSLTransformerListener
granting : execute on resource oracle/xml/async/dombld16c.gif to PUBLIC
skipping : resource oracle/xml/async/dombld16c.gif
granting : execute on resource oracle/xml/async/dombld16m.gif to PUBLIC
skipping : resource oracle/xml/async/dombld16m.gif
granting : execute on resource oracle/xml/async/dombld32c.gif to PUBLIC
skipping : resource oracle/xml/async/dombld32c.gif
granting : execute on resource oracle/xml/async/dombld32m.gif to PUBLIC
skipping : resource oracle/xml/async/dombld32m.gif
granting : execute on resource oracle/xml/async/xmltrans16c.gif to PUBLIC
skipping : resource oracle/xml/async/xmltrans16c.gif
granting : execute on resource oracle/xml/async/xmltrans16m.gif to PUBLIC
skipping : resource oracle/xml/async/xmltrans16m.gif
granting : execute on resource oracle/xml/async/xmltrans32c.gif to PUBLIC
skipping : resource oracle/xml/async/xmltrans32c.gif
granting : execute on resource oracle/xml/async/xmltrans32m.gif to PUBLIC
skipping : resource oracle/xml/async/xmltrans32m.gif
granting : execute on class oracle/xml/jaxp/JXDocumentBuilder to PUBLIC
resolving: class oracle/xml/jaxp/JXDocumentBuilder
synonym  : oracle/xml/jaxp/JXDocumentBuilder
granting : execute on class oracle/xml/jaxp/JXDocumentBuilderFactory to PUBLIC
resolving: class oracle/xml/jaxp/JXDocumentBuilderFactory
synonym  : oracle/xml/jaxp/JXDocumentBuilderFactory
granting : execute on class oracle/xml/jaxp/JXEntityResolver to PUBLIC
skipping : class oracle/xml/jaxp/JXEntityResolver
synonym  : oracle/xml/jaxp/JXEntityResolver
granting : execute on class oracle/xml/jaxp/JXSAXData to PUBLIC
resolving: class oracle/xml/jaxp/JXSAXData
synonym  : oracle/xml/jaxp/JXSAXData
granting : execute on class oracle/xml/jaxp/JXSAXParser to PUBLIC
resolving: class oracle/xml/jaxp/JXSAXParser
synonym  : oracle/xml/jaxp/JXSAXParser
granting : execute on class oracle/xml/jaxp/JXSAXParserFactory to PUBLIC
resolving: class oracle/xml/jaxp/JXSAXParserFactory
synonym  : oracle/xml/jaxp/JXSAXParserFactory
granting : execute on class oracle/xml/jaxp/JXSAXTransformerFactory$1 to PUBLIC
resolving: class oracle/xml/jaxp/JXSAXTransformerFactory$1
synonym  : oracle/xml/jaxp/JXSAXTransformerFactory$1
granting : execute on class oracle/xml/jaxp/JXSAXTransformerFactory to PUBLIC
skipping : class oracle/xml/jaxp/JXSAXTransformerFactory
synonym  : oracle/xml/jaxp/JXSAXTransformerFactory
granting : execute on class oracle/xml/jaxp/JXTransformer$1 to PUBLIC
skipping : class oracle/xml/jaxp/JXTransformer$1
synonym  : oracle/xml/jaxp/JXTransformer$1
granting : execute on class oracle/xml/jaxp/JXTransformer to PUBLIC
skipping : class oracle/xml/jaxp/JXTransformer
synonym  : oracle/xml/jaxp/JXTransformer
granting : execute on class oracle/xml/jaxp/JXTransformerHandler to PUBLIC
skipping : class oracle/xml/jaxp/JXTransformerHandler
synonym  : oracle/xml/jaxp/JXTransformerHandler
granting : execute on class oracle/xml/jaxp/JXUtil to PUBLIC
skipping : class oracle/xml/jaxp/JXUtil
synonym  : oracle/xml/jaxp/JXUtil
granting : execute on class oracle/xml/jaxp/JXXMLFilter to PUBLIC
skipping : class oracle/xml/jaxp/JXXMLFilter
synonym  : oracle/xml/jaxp/JXXMLFilter
granting : execute on class oracle/xml/scalable/AbstractPageManager$PageId to
PUBLIC
resolving: class oracle/xml/scalable/AbstractPageManager$PageId
synonym  : oracle/xml/scalable/AbstractPageManager$PageId
granting : execute on class oracle/xml/scalable/AbstractPageManager to PUBLIC
skipping : class oracle/xml/scalable/AbstractPageManager
synonym  : oracle/xml/scalable/AbstractPageManager
granting : execute on class oracle/xml/scalable/BinaryStream$ArrayPagedIO to
PUBLIC
skipping : class oracle/xml/scalable/BinaryStream$ArrayPagedIO
synonym  : oracle/xml/scalable/BinaryStream$ArrayPagedIO
granting : execute on class oracle/xml/scalable/BinaryStream$BlobPagedIO to
PUBLIC
skipping : class oracle/xml/scalable/BinaryStream$BlobPagedIO
synonym  : oracle/xml/scalable/BinaryStream$BlobPagedIO
granting : execute on class oracle/xml/scalable/BinaryStream$FilePagedIO to
PUBLIC
skipping : class oracle/xml/scalable/BinaryStream$FilePagedIO
synonym  : oracle/xml/scalable/BinaryStream$FilePagedIO
granting : execute on class oracle/xml/scalable/BinaryStream$MemoryPagedIO to
PUBLIC
skipping : class oracle/xml/scalable/BinaryStream$MemoryPagedIO
synonym  : oracle/xml/scalable/BinaryStream$MemoryPagedIO
granting : execute on class oracle/xml/scalable/BinaryStream$ObjectPagedIO to
PUBLIC
skipping : class oracle/xml/scalable/BinaryStream$ObjectPagedIO
synonym  : oracle/xml/scalable/BinaryStream$ObjectPagedIO
granting : execute on class oracle/xml/scalable/BinaryStream$PagedIO to PUBLIC
skipping : class oracle/xml/scalable/BinaryStream$PagedIO
synonym  : oracle/xml/scalable/BinaryStream$PagedIO
granting : execute on class oracle/xml/scalable/BinaryStream$StreamPagedIO to
PUBLIC
skipping : class oracle/xml/scalable/BinaryStream$StreamPagedIO
synonym  : oracle/xml/scalable/BinaryStream$StreamPagedIO
granting : execute on class oracle/xml/scalable/BinaryStream to PUBLIC
skipping : class oracle/xml/scalable/BinaryStream
synonym  : oracle/xml/scalable/BinaryStream
granting : execute on class oracle/xml/scalable/BlobPageManager to PUBLIC
resolving: class oracle/xml/scalable/BlobPageManager
synonym  : oracle/xml/scalable/BlobPageManager
granting : execute on class oracle/xml/scalable/FilePageManager to PUBLIC
resolving: class oracle/xml/scalable/FilePageManager
synonym  : oracle/xml/scalable/FilePageManager
granting : execute on class oracle/xml/scalable/InfosetReader$Offset to PUBLIC
skipping : class oracle/xml/scalable/InfosetReader$Offset
synonym  : oracle/xml/scalable/InfosetReader$Offset
granting : execute on class oracle/xml/scalable/InfosetReader to PUBLIC
skipping : class oracle/xml/scalable/InfosetReader
synonym  : oracle/xml/scalable/InfosetReader
granting : execute on class oracle/xml/scalable/InfosetWriter to PUBLIC
skipping : class oracle/xml/scalable/InfosetWriter
synonym  : oracle/xml/scalable/InfosetWriter
granting : execute on class oracle/xml/scalable/PageManager$PageId to PUBLIC
skipping : class oracle/xml/scalable/PageManager$PageId
synonym  : oracle/xml/scalable/PageManager$PageId
granting : execute on class oracle/xml/scalable/PageManager to PUBLIC
skipping : class oracle/xml/scalable/PageManager
synonym  : oracle/xml/scalable/PageManager
granting : execute on class oracle/xml/scalable/PageManagerPool to PUBLIC
skipping : class oracle/xml/scalable/PageManagerPool
synonym  : oracle/xml/scalable/PageManagerPool
granting : execute on class oracle/xml/scalable/StreamWriter to PUBLIC
skipping : class oracle/xml/scalable/StreamWriter
synonym  : oracle/xml/scalable/StreamWriter
granting : execute on class oracle/xml/scalable/StreamingXPath$StepNode to
PUBLIC
skipping : class oracle/xml/scalable/StreamingXPath$StepNode
synonym  : oracle/xml/scalable/StreamingXPath$StepNode
granting : execute on class oracle/xml/scalable/StreamingXPath to PUBLIC
skipping : class oracle/xml/scalable/StreamingXPath
synonym  : oracle/xml/scalable/StreamingXPath
granting : execute on class oracle/xml/comp/CXMLCodeSpace to PUBLIC
skipping : class oracle/xml/comp/CXMLCodeSpace
synonym  : oracle/xml/comp/CXMLCodeSpace
granting : execute on class oracle/xml/comp/CXMLConstants to PUBLIC
skipping : class oracle/xml/comp/CXMLConstants
synonym  : oracle/xml/comp/CXMLConstants
granting : execute on class oracle/xml/comp/CXMLContext to PUBLIC
skipping : class oracle/xml/comp/CXMLContext
synonym  : oracle/xml/comp/CXMLContext
granting : execute on class oracle/xml/comp/CXMLHandlerBase to PUBLIC
skipping : class oracle/xml/comp/CXMLHandlerBase
synonym  : oracle/xml/comp/CXMLHandlerBase
granting : execute on class oracle/xml/comp/CXMLParser to PUBLIC
resolving: class oracle/xml/comp/CXMLParser
synonym  : oracle/xml/comp/CXMLParser
granting : execute on class oracle/xml/comp/CXMLReader$Offset to PUBLIC
skipping : class oracle/xml/comp/CXMLReader$Offset
synonym  : oracle/xml/comp/CXMLReader$Offset
granting : execute on class oracle/xml/comp/CXMLReader$TypeInfo to PUBLIC
skipping : class oracle/xml/comp/CXMLReader$TypeInfo
synonym  : oracle/xml/comp/CXMLReader$TypeInfo
granting : execute on class oracle/xml/comp/CXMLReader to PUBLIC
skipping : class oracle/xml/comp/CXMLReader
synonym  : oracle/xml/comp/CXMLReader
granting : execute on class oracle/xml/comp/CXMLStream to PUBLIC
skipping : class oracle/xml/comp/CXMLStream
synonym  : oracle/xml/comp/CXMLStream
granting : execute on class oracle/xml/comp/CXMLWriter to PUBLIC
skipping : class oracle/xml/comp/CXMLWriter
synonym  : oracle/xml/comp/CXMLWriter
granting : execute on class oracle/xml/parser/v2/AttrDecl to PUBLIC
skipping : class oracle/xml/parser/v2/AttrDecl
synonym  : oracle/xml/parser/v2/AttrDecl
granting : execute on class oracle/xml/parser/v2/BlobPageManager to PUBLIC
resolving: class oracle/xml/parser/v2/BlobPageManager
synonym  : oracle/xml/parser/v2/BlobPageManager
granting : execute on class oracle/xml/parser/v2/CMChoice to PUBLIC
skipping : class oracle/xml/parser/v2/CMChoice
synonym  : oracle/xml/parser/v2/CMChoice
granting : execute on class oracle/xml/parser/v2/CMLeaf to PUBLIC
skipping : class oracle/xml/parser/v2/CMLeaf
synonym  : oracle/xml/parser/v2/CMLeaf
granting : execute on class oracle/xml/parser/v2/CMNode to PUBLIC
skipping : class oracle/xml/parser/v2/CMNode
synonym  : oracle/xml/parser/v2/CMNode
granting : execute on class oracle/xml/parser/v2/CMNodeSeq to PUBLIC
skipping : class oracle/xml/parser/v2/CMNodeSeq
synonym  : oracle/xml/parser/v2/CMNodeSeq
granting : execute on class oracle/xml/parser/v2/CMPlus to PUBLIC
skipping : class oracle/xml/parser/v2/CMPlus
synonym  : oracle/xml/parser/v2/CMPlus
granting : execute on class oracle/xml/parser/v2/CMQuestionMark to PUBLIC
skipping : class oracle/xml/parser/v2/CMQuestionMark
synonym  : oracle/xml/parser/v2/CMQuestionMark
granting : execute on class oracle/xml/parser/v2/CMStar to PUBLIC
skipping : class oracle/xml/parser/v2/CMStar
synonym  : oracle/xml/parser/v2/CMStar
granting : execute on class oracle/xml/parser/v2/CMXMLNode to PUBLIC
skipping : class oracle/xml/parser/v2/CMXMLNode
synonym  : oracle/xml/parser/v2/CMXMLNode
granting : execute on class oracle/xml/parser/v2/CharData to PUBLIC
skipping : class oracle/xml/parser/v2/CharData
synonym  : oracle/xml/parser/v2/CharData
granting : execute on class oracle/xml/parser/v2/ContentModel to PUBLIC
skipping : class oracle/xml/parser/v2/ContentModel
synonym  : oracle/xml/parser/v2/ContentModel
granting : execute on class oracle/xml/parser/v2/ContentModelType to PUBLIC
skipping : class oracle/xml/parser/v2/ContentModelType
synonym  : oracle/xml/parser/v2/ContentModelType
granting : execute on class oracle/xml/parser/v2/DOMLocator to PUBLIC
skipping : class oracle/xml/parser/v2/DOMLocator
synonym  : oracle/xml/parser/v2/DOMLocator
granting : execute on class oracle/xml/parser/v2/DOMParser to PUBLIC
skipping : class oracle/xml/parser/v2/DOMParser
synonym  : oracle/xml/parser/v2/DOMParser
granting : execute on class oracle/xml/parser/v2/DTD to PUBLIC
skipping : class oracle/xml/parser/v2/DTD
synonym  : oracle/xml/parser/v2/DTD
granting : execute on class oracle/xml/parser/v2/DTD2SchemaBuilder to PUBLIC
skipping : class oracle/xml/parser/v2/DTD2SchemaBuilder
synonym  : oracle/xml/parser/v2/DTD2SchemaBuilder
granting : execute on class oracle/xml/parser/v2/DTD2SchemaConstants to PUBLIC
skipping : class oracle/xml/parser/v2/DTD2SchemaConstants
synonym  : oracle/xml/parser/v2/DTD2SchemaConstants
granting : execute on class oracle/xml/parser/v2/DTDBuilder to PUBLIC
skipping : class oracle/xml/parser/v2/DTDBuilder
synonym  : oracle/xml/parser/v2/DTDBuilder
granting : execute on class oracle/xml/parser/v2/DTDDecl to PUBLIC
skipping : class oracle/xml/parser/v2/DTDDecl
synonym  : oracle/xml/parser/v2/DTDDecl
granting : execute on class oracle/xml/parser/v2/DefaultXMLDocumentHandler to
PUBLIC
skipping : class oracle/xml/parser/v2/DefaultXMLDocumentHandler
synonym  : oracle/xml/parser/v2/DefaultXMLDocumentHandler
granting : execute on class oracle/xml/parser/v2/DocumentBuilder to PUBLIC
skipping : class oracle/xml/parser/v2/DocumentBuilder
synonym  : oracle/xml/parser/v2/DocumentBuilder
granting : execute on class oracle/xml/parser/v2/ElementDecl to PUBLIC
skipping : class oracle/xml/parser/v2/ElementDecl
synonym  : oracle/xml/parser/v2/ElementDecl
granting : execute on class oracle/xml/parser/v2/FilePageManager to PUBLIC
resolving: class oracle/xml/parser/v2/FilePageManager
synonym  : oracle/xml/parser/v2/FilePageManager
granting : execute on class oracle/xml/parser/v2/NSName to PUBLIC
skipping : class oracle/xml/parser/v2/NSName
synonym  : oracle/xml/parser/v2/NSName
granting : execute on class oracle/xml/parser/v2/NSResolver to PUBLIC
skipping : class oracle/xml/parser/v2/NSResolver
synonym  : oracle/xml/parser/v2/NSResolver
granting : execute on class oracle/xml/parser/v2/NameCheck to PUBLIC
skipping : class oracle/xml/parser/v2/NameCheck
synonym  : oracle/xml/parser/v2/NameCheck
granting : execute on class oracle/xml/parser/v2/NodeFactory$NFDocument to
PUBLIC
skipping : class oracle/xml/parser/v2/NodeFactory$NFDocument
synonym  : oracle/xml/parser/v2/NodeFactory$NFDocument
granting : execute on class oracle/xml/parser/v2/NodeFactory to PUBLIC
skipping : class oracle/xml/parser/v2/NodeFactory
synonym  : oracle/xml/parser/v2/NodeFactory
granting : execute on class oracle/xml/parser/v2/NodeReadHandler to PUBLIC
skipping : class oracle/xml/parser/v2/NodeReadHandler
synonym  : oracle/xml/parser/v2/NodeReadHandler
granting : execute on class oracle/xml/parser/v2/NodeReference to PUBLIC
skipping : class oracle/xml/parser/v2/NodeReference
synonym  : oracle/xml/parser/v2/NodeReference
granting : execute on class oracle/xml/parser/v2/NonValidatingParser to PUBLIC
skipping : class oracle/xml/parser/v2/NonValidatingParser
synonym  : oracle/xml/parser/v2/NonValidatingParser
granting : execute on class oracle/xml/parser/v2/ObjectBuilder to PUBLIC
resolving: class oracle/xml/parser/v2/ObjectBuilder
synonym  : oracle/xml/parser/v2/ObjectBuilder
granting : execute on class oracle/xml/parser/v2/PagedNodeList to PUBLIC
skipping : class oracle/xml/parser/v2/PagedNodeList
synonym  : oracle/xml/parser/v2/PagedNodeList
granting : execute on class oracle/xml/parser/v2/ParserState to PUBLIC
skipping : class oracle/xml/parser/v2/ParserState
synonym  : oracle/xml/parser/v2/ParserState
granting : execute on class oracle/xml/parser/v2/PrintDriver to PUBLIC
skipping : class oracle/xml/parser/v2/PrintDriver
synonym  : oracle/xml/parser/v2/PrintDriver
granting : execute on class oracle/xml/parser/v2/SAXAttrList to PUBLIC
skipping : class oracle/xml/parser/v2/SAXAttrList
synonym  : oracle/xml/parser/v2/SAXAttrList
granting : execute on class oracle/xml/parser/v2/SAXParser to PUBLIC
skipping : class oracle/xml/parser/v2/SAXParser
synonym  : oracle/xml/parser/v2/SAXParser
granting : execute on class oracle/xml/parser/v2/ScalableDOMPrintDriver to
PUBLIC
skipping : class oracle/xml/parser/v2/ScalableDOMPrintDriver
synonym  : oracle/xml/parser/v2/ScalableDOMPrintDriver
granting : execute on class oracle/xml/parser/v2/TypedAttributes to PUBLIC
skipping : class oracle/xml/parser/v2/TypedAttributes
synonym  : oracle/xml/parser/v2/TypedAttributes
granting : execute on class oracle/xml/parser/v2/ValidatingParser to PUBLIC
skipping : class oracle/xml/parser/v2/ValidatingParser
synonym  : oracle/xml/parser/v2/ValidatingParser
granting : execute on class oracle/xml/parser/v2/XMLAttr to PUBLIC
skipping : class oracle/xml/parser/v2/XMLAttr
synonym  : oracle/xml/parser/v2/XMLAttr
granting : execute on class oracle/xml/parser/v2/XMLAttrList to PUBLIC
skipping : class oracle/xml/parser/v2/XMLAttrList
synonym  : oracle/xml/parser/v2/XMLAttrList
granting : execute on class oracle/xml/parser/v2/XMLByteReader to PUBLIC
skipping : class oracle/xml/parser/v2/XMLByteReader
synonym  : oracle/xml/parser/v2/XMLByteReader
granting : execute on class oracle/xml/parser/v2/XMLCDATA to PUBLIC
skipping : class oracle/xml/parser/v2/XMLCDATA
synonym  : oracle/xml/parser/v2/XMLCDATA
granting : execute on class oracle/xml/parser/v2/XMLCharReader to PUBLIC
skipping : class oracle/xml/parser/v2/XMLCharReader
synonym  : oracle/xml/parser/v2/XMLCharReader
granting : execute on class oracle/xml/parser/v2/XMLComment to PUBLIC
skipping : class oracle/xml/parser/v2/XMLComment
synonym  : oracle/xml/parser/v2/XMLComment
granting : execute on class oracle/xml/parser/v2/XMLConstants to PUBLIC
skipping : class oracle/xml/parser/v2/XMLConstants
synonym  : oracle/xml/parser/v2/XMLConstants
granting : execute on class oracle/xml/parser/v2/XMLContentHandler to PUBLIC
skipping : class oracle/xml/parser/v2/XMLContentHandler
synonym  : oracle/xml/parser/v2/XMLContentHandler
granting : execute on class oracle/xml/parser/v2/XMLDOMConfiguration to PUBLIC
skipping : class oracle/xml/parser/v2/XMLDOMConfiguration
synonym  : oracle/xml/parser/v2/XMLDOMConfiguration
granting : execute on class oracle/xml/parser/v2/XMLDOMEvent to PUBLIC
skipping : class oracle/xml/parser/v2/XMLDOMEvent
synonym  : oracle/xml/parser/v2/XMLDOMEvent
granting : execute on class oracle/xml/parser/v2/XMLDOMException to PUBLIC
skipping : class oracle/xml/parser/v2/XMLDOMException
synonym  : oracle/xml/parser/v2/XMLDOMException
granting : execute on class oracle/xml/parser/v2/XMLDOMImplementation to PUBLIC
skipping : class oracle/xml/parser/v2/XMLDOMImplementation
synonym  : oracle/xml/parser/v2/XMLDOMImplementation
granting : execute on class oracle/xml/parser/v2/XMLDOMImplementationSource$1 to
PUBLIC
resolving: class oracle/xml/parser/v2/XMLDOMImplementationSource$1
synonym  : oracle/xml/parser/v2/XMLDOMImplementationSource$1
granting : execute on class
oracle/xml/parser/v2/XMLDOMImplementationSource$XMLDOMImplementationList to
PUBLIC
skipping : class
oracle/xml/parser/v2/XMLDOMImplementationSource$XMLDOMImplementationList
synonym  :
oracle/xml/parser/v2/XMLDOMImplementationSource$XMLDOMImplementationList
granting : execute on class oracle/xml/parser/v2/XMLDOMImplementationSource to
PUBLIC
skipping : class oracle/xml/parser/v2/XMLDOMImplementationSource
synonym  : oracle/xml/parser/v2/XMLDOMImplementationSource
granting : execute on class oracle/xml/parser/v2/XMLDOMMutationEvent to PUBLIC
skipping : class oracle/xml/parser/v2/XMLDOMMutationEvent
synonym  : oracle/xml/parser/v2/XMLDOMMutationEvent
granting : execute on class oracle/xml/parser/v2/XMLDOMStringList to PUBLIC
skipping : class oracle/xml/parser/v2/XMLDOMStringList
synonym  : oracle/xml/parser/v2/XMLDOMStringList
granting : execute on class oracle/xml/parser/v2/XMLDOMUserData to PUBLIC
skipping : class oracle/xml/parser/v2/XMLDOMUserData
synonym  : oracle/xml/parser/v2/XMLDOMUserData
granting : execute on class oracle/xml/parser/v2/XMLDebugInfo to PUBLIC
skipping : class oracle/xml/parser/v2/XMLDebugInfo
synonym  : oracle/xml/parser/v2/XMLDebugInfo
granting : execute on class oracle/xml/parser/v2/XMLDeclPI to PUBLIC
skipping : class oracle/xml/parser/v2/XMLDeclPI
synonym  : oracle/xml/parser/v2/XMLDeclPI
granting : execute on class oracle/xml/parser/v2/XMLDocument$NodeList_cache to
PUBLIC
skipping : class oracle/xml/parser/v2/XMLDocument$NodeList_cache
synonym  : oracle/xml/parser/v2/XMLDocument$NodeList_cache
granting : execute on class oracle/xml/parser/v2/XMLDocument to PUBLIC
skipping : class oracle/xml/parser/v2/XMLDocument
synonym  : oracle/xml/parser/v2/XMLDocument
granting : execute on class oracle/xml/parser/v2/XMLDocumentFragment to PUBLIC
skipping : class oracle/xml/parser/v2/XMLDocumentFragment
synonym  : oracle/xml/parser/v2/XMLDocumentFragment
granting : execute on class oracle/xml/parser/v2/XMLDocumentHandler to PUBLIC
skipping : class oracle/xml/parser/v2/XMLDocumentHandler
synonym  : oracle/xml/parser/v2/XMLDocumentHandler
granting : execute on class oracle/xml/parser/v2/XMLElement to PUBLIC
skipping : class oracle/xml/parser/v2/XMLElement
synonym  : oracle/xml/parser/v2/XMLElement
granting : execute on class oracle/xml/parser/v2/XMLEntity to PUBLIC
skipping : class oracle/xml/parser/v2/XMLEntity
synonym  : oracle/xml/parser/v2/XMLEntity
granting : execute on class oracle/xml/parser/v2/XMLEntityReference to PUBLIC
skipping : class oracle/xml/parser/v2/XMLEntityReference
synonym  : oracle/xml/parser/v2/XMLEntityReference
granting : execute on class oracle/xml/parser/v2/XMLError to PUBLIC
skipping : class oracle/xml/parser/v2/XMLError
synonym  : oracle/xml/parser/v2/XMLError
granting : execute on class oracle/xml/parser/v2/XMLExternalReader to PUBLIC
skipping : class oracle/xml/parser/v2/XMLExternalReader
synonym  : oracle/xml/parser/v2/XMLExternalReader
granting : execute on class
oracle/xml/parser/v2/XMLLSDocumentBuilder$LSNodeFactorySkip to PUBLIC
skipping : class oracle/xml/parser/v2/XMLLSDocumentBuilder$LSNodeFactorySkip
synonym  : oracle/xml/parser/v2/XMLLSDocumentBuilder$LSNodeFactorySkip
granting : execute on class oracle/xml/parser/v2/XMLLSDocumentBuilder to PUBLIC
skipping : class oracle/xml/parser/v2/XMLLSDocumentBuilder
synonym  : oracle/xml/parser/v2/XMLLSDocumentBuilder
granting : execute on class oracle/xml/parser/v2/XMLLSInput to PUBLIC
skipping : class oracle/xml/parser/v2/XMLLSInput
synonym  : oracle/xml/parser/v2/XMLLSInput
granting : execute on class oracle/xml/parser/v2/XMLLSLoadEvent to PUBLIC
skipping : class oracle/xml/parser/v2/XMLLSLoadEvent
synonym  : oracle/xml/parser/v2/XMLLSLoadEvent
granting : execute on class oracle/xml/parser/v2/XMLLSOutput to PUBLIC
skipping : class oracle/xml/parser/v2/XMLLSOutput
synonym  : oracle/xml/parser/v2/XMLLSOutput
granting : execute on class oracle/xml/parser/v2/XMLLSParser to PUBLIC
skipping : class oracle/xml/parser/v2/XMLLSParser
synonym  : oracle/xml/parser/v2/XMLLSParser
granting : execute on class oracle/xml/parser/v2/XMLLSProgressEvent to PUBLIC
resolving: class oracle/xml/parser/v2/XMLLSProgressEvent
synonym  : oracle/xml/parser/v2/XMLLSProgressEvent
granting : execute on class oracle/xml/parser/v2/XMLLSSerializer to PUBLIC
skipping : class oracle/xml/parser/v2/XMLLSSerializer
synonym  : oracle/xml/parser/v2/XMLLSSerializer
granting : execute on class oracle/xml/parser/v2/XMLLocator to PUBLIC
skipping : class oracle/xml/parser/v2/XMLLocator
synonym  : oracle/xml/parser/v2/XMLLocator
granting : execute on class oracle/xml/parser/v2/XMLMultiHandler to PUBLIC
skipping : class oracle/xml/parser/v2/XMLMultiHandler
synonym  : oracle/xml/parser/v2/XMLMultiHandler
granting : execute on class oracle/xml/parser/v2/XMLNSNode to PUBLIC
skipping : class oracle/xml/parser/v2/XMLNSNode
synonym  : oracle/xml/parser/v2/XMLNSNode
granting : execute on class oracle/xml/parser/v2/XMLNameList to PUBLIC
skipping : class oracle/xml/parser/v2/XMLNameList
synonym  : oracle/xml/parser/v2/XMLNameList
granting : execute on class oracle/xml/parser/v2/XMLNode$1 to PUBLIC
skipping : class oracle/xml/parser/v2/XMLNode$1
synonym  : oracle/xml/parser/v2/XMLNode$1
granting : execute on class oracle/xml/parser/v2/XMLNode$2 to PUBLIC
skipping : class oracle/xml/parser/v2/XMLNode$2
synonym  : oracle/xml/parser/v2/XMLNode$2
granting : execute on class oracle/xml/parser/v2/XMLNode$3 to PUBLIC
skipping : class oracle/xml/parser/v2/XMLNode$3
synonym  : oracle/xml/parser/v2/XMLNode$3
granting : execute on class oracle/xml/parser/v2/XMLNode to PUBLIC
skipping : class oracle/xml/parser/v2/XMLNode
synonym  : oracle/xml/parser/v2/XMLNode
granting : execute on class oracle/xml/parser/v2/XMLNodeInputStream to PUBLIC
skipping : class oracle/xml/parser/v2/XMLNodeInputStream
synonym  : oracle/xml/parser/v2/XMLNodeInputStream
granting : execute on class oracle/xml/parser/v2/XMLNodeIterator to PUBLIC
skipping : class oracle/xml/parser/v2/XMLNodeIterator
synonym  : oracle/xml/parser/v2/XMLNodeIterator
granting : execute on class oracle/xml/parser/v2/XMLNodeList to PUBLIC
skipping : class oracle/xml/parser/v2/XMLNodeList
synonym  : oracle/xml/parser/v2/XMLNodeList
granting : execute on class oracle/xml/parser/v2/XMLNodeOutputStream to PUBLIC
skipping : class oracle/xml/parser/v2/XMLNodeOutputStream
synonym  : oracle/xml/parser/v2/XMLNodeOutputStream
granting : execute on class oracle/xml/parser/v2/XMLNodeReader to PUBLIC
skipping : class oracle/xml/parser/v2/XMLNodeReader
synonym  : oracle/xml/parser/v2/XMLNodeReader
granting : execute on class oracle/xml/parser/v2/XMLNodeWriter to PUBLIC
skipping : class oracle/xml/parser/v2/XMLNodeWriter
synonym  : oracle/xml/parser/v2/XMLNodeWriter
granting : execute on class oracle/xml/parser/v2/XMLNotation to PUBLIC
skipping : class oracle/xml/parser/v2/XMLNotation
synonym  : oracle/xml/parser/v2/XMLNotation
granting : execute on class oracle/xml/parser/v2/XMLObjectInputStream to PUBLIC
resolving: class oracle/xml/parser/v2/XMLObjectInputStream
synonym  : oracle/xml/parser/v2/XMLObjectInputStream
granting : execute on class oracle/xml/parser/v2/XMLOutputStream to PUBLIC
skipping : class oracle/xml/parser/v2/XMLOutputStream
synonym  : oracle/xml/parser/v2/XMLOutputStream
granting : execute on class oracle/xml/parser/v2/XMLPI to PUBLIC
skipping : class oracle/xml/parser/v2/XMLPI
synonym  : oracle/xml/parser/v2/XMLPI
granting : execute on class oracle/xml/parser/v2/XMLParseException to PUBLIC
skipping : class oracle/xml/parser/v2/XMLParseException
synonym  : oracle/xml/parser/v2/XMLParseException
granting : execute on class oracle/xml/parser/v2/XMLParser to PUBLIC
skipping : class oracle/xml/parser/v2/XMLParser
synonym  : oracle/xml/parser/v2/XMLParser
granting : execute on class oracle/xml/parser/v2/XMLPrintDriver to PUBLIC
skipping : class oracle/xml/parser/v2/XMLPrintDriver
synonym  : oracle/xml/parser/v2/XMLPrintDriver
granting : execute on class oracle/xml/parser/v2/XMLRange to PUBLIC
skipping : class oracle/xml/parser/v2/XMLRange
synonym  : oracle/xml/parser/v2/XMLRange
granting : execute on class oracle/xml/parser/v2/XMLRangeEvent to PUBLIC
skipping : class oracle/xml/parser/v2/XMLRangeEvent
synonym  : oracle/xml/parser/v2/XMLRangeEvent
granting : execute on class oracle/xml/parser/v2/XMLRangeException to PUBLIC
skipping : class oracle/xml/parser/v2/XMLRangeException
synonym  : oracle/xml/parser/v2/XMLRangeException
granting : execute on class oracle/xml/parser/v2/XMLReader to PUBLIC
skipping : class oracle/xml/parser/v2/XMLReader
synonym  : oracle/xml/parser/v2/XMLReader
granting : execute on class oracle/xml/parser/v2/XMLSAXSerializer to PUBLIC
skipping : class oracle/xml/parser/v2/XMLSAXSerializer
synonym  : oracle/xml/parser/v2/XMLSAXSerializer
granting : execute on class oracle/xml/parser/v2/XMLText to PUBLIC
skipping : class oracle/xml/parser/v2/XMLText
synonym  : oracle/xml/parser/v2/XMLText
granting : execute on class oracle/xml/parser/v2/XMLToken to PUBLIC
resolving: class oracle/xml/parser/v2/XMLToken
synonym  : oracle/xml/parser/v2/XMLToken
granting : execute on class oracle/xml/parser/v2/XMLTokenizer to PUBLIC
resolving: class oracle/xml/parser/v2/XMLTokenizer
synonym  : oracle/xml/parser/v2/XMLTokenizer
granting : execute on class oracle/xml/parser/v2/XMLTraversalEvent to PUBLIC
skipping : class oracle/xml/parser/v2/XMLTraversalEvent
synonym  : oracle/xml/parser/v2/XMLTraversalEvent
granting : execute on class oracle/xml/parser/v2/XMLTreeWalker to PUBLIC
skipping : class oracle/xml/parser/v2/XMLTreeWalker
synonym  : oracle/xml/parser/v2/XMLTreeWalker
granting : execute on class oracle/xml/parser/v2/XMLTypeInfo to PUBLIC
skipping : class oracle/xml/parser/v2/XMLTypeInfo
synonym  : oracle/xml/parser/v2/XMLTypeInfo
granting : execute on class oracle/xml/parser/v2/XMLUCS2Reader to PUBLIC
skipping : class oracle/xml/parser/v2/XMLUCS2Reader
synonym  : oracle/xml/parser/v2/XMLUCS2Reader
granting : execute on class oracle/xml/parser/v2/XMLUCS4Reader to PUBLIC
skipping : class oracle/xml/parser/v2/XMLUCS4Reader
synonym  : oracle/xml/parser/v2/XMLUCS4Reader
granting : execute on class oracle/xml/parser/v2/XMLUTF8Reader to PUBLIC
skipping : class oracle/xml/parser/v2/XMLUTF8Reader
synonym  : oracle/xml/parser/v2/XMLUTF8Reader
granting : execute on class oracle/xml/parser/v2/XMLUtil to PUBLIC
skipping : class oracle/xml/parser/v2/XMLUtil
synonym  : oracle/xml/parser/v2/XMLUtil
granting : execute on class oracle/xml/parser/v2/XSLException to PUBLIC
skipping : class oracle/xml/parser/v2/XSLException
synonym  : oracle/xml/parser/v2/XSLException
granting : execute on class oracle/xml/parser/v2/XSLExtensionElement to PUBLIC
skipping : class oracle/xml/parser/v2/XSLExtensionElement
synonym  : oracle/xml/parser/v2/XSLExtensionElement
granting : execute on class oracle/xml/parser/v2/XSLProcessor$XSLTVersion to
PUBLIC
skipping : class oracle/xml/parser/v2/XSLProcessor$XSLTVersion
synonym  : oracle/xml/parser/v2/XSLProcessor$XSLTVersion
granting : execute on class oracle/xml/parser/v2/XSLProcessor to PUBLIC
skipping : class oracle/xml/parser/v2/XSLProcessor
synonym  : oracle/xml/parser/v2/XSLProcessor
granting : execute on class oracle/xml/parser/v2/XSLStylesheet to PUBLIC
skipping : class oracle/xml/parser/v2/XSLStylesheet
synonym  : oracle/xml/parser/v2/XSLStylesheet
granting : execute on class oracle/xml/parser/v2/XSLTContext to PUBLIC
skipping : class oracle/xml/parser/v2/XSLTContext
synonym  : oracle/xml/parser/v2/XSLTContext
granting : execute on class oracle/xml/parser/v2/oraxml to PUBLIC
resolving: class oracle/xml/parser/v2/oraxml
synonym  : oracle/xml/parser/v2/oraxml
granting : execute on class oracle/xml/parser/v2/oraxsl to PUBLIC
resolving: class oracle/xml/parser/v2/oraxsl
synonym  : oracle/xml/parser/v2/oraxsl
granting : execute on class oracle/xml/parser/v2/oraxslDriver to PUBLIC
skipping : class oracle/xml/parser/v2/oraxslDriver
synonym  : oracle/xml/parser/v2/oraxslDriver
granting : execute on class oracle/xml/mesg/XMLResourceBundle to PUBLIC
resolving: class oracle/xml/mesg/XMLResourceBundle
synonym  : oracle/xml/mesg/XMLResourceBundle
granting : execute on resource .xdk_version_11.2.0.3.0_production to PUBLIC
skipping : resource .xdk_version_11.2.0.3.0_production
granting : execute on class oracle/xml/parser/schema/SchemaResolver to PUBLIC
skipping : class oracle/xml/parser/schema/SchemaResolver
synonym  : oracle/xml/parser/schema/SchemaResolver
granting : execute on class oracle/xml/parser/schema/XMLSchema$BuildState to
PUBLIC
skipping : class oracle/xml/parser/schema/XMLSchema$BuildState
synonym  : oracle/xml/parser/schema/XMLSchema$BuildState
granting : execute on class oracle/xml/parser/schema/XMLSchema to PUBLIC
skipping : class oracle/xml/parser/schema/XMLSchema
synonym  : oracle/xml/parser/schema/XMLSchema
granting : execute on class oracle/xml/parser/schema/XMLSchemaNode to PUBLIC
skipping : class oracle/xml/parser/schema/XMLSchemaNode
synonym  : oracle/xml/parser/schema/XMLSchemaNode
granting : execute on class oracle/xml/parser/schema/XSDAnalyzerContext to
PUBLIC
skipping : class oracle/xml/parser/schema/XSDAnalyzerContext
synonym  : oracle/xml/parser/schema/XSDAnalyzerContext
granting : execute on class oracle/xml/parser/schema/XSDAnnotation to PUBLIC
skipping : class oracle/xml/parser/schema/XSDAnnotation
synonym  : oracle/xml/parser/schema/XSDAnnotation
granting : execute on class oracle/xml/parser/schema/XSDAny to PUBLIC
skipping : class oracle/xml/parser/schema/XSDAny
synonym  : oracle/xml/parser/schema/XSDAny
granting : execute on class oracle/xml/parser/schema/XSDAttrGroup to PUBLIC
skipping : class oracle/xml/parser/schema/XSDAttrGroup
synonym  : oracle/xml/parser/schema/XSDAttrGroup
granting : execute on class oracle/xml/parser/schema/XSDAttribute to PUBLIC
skipping : class oracle/xml/parser/schema/XSDAttribute
synonym  : oracle/xml/parser/schema/XSDAttribute
granting : execute on class oracle/xml/parser/schema/XSDBuilder to PUBLIC
skipping : class oracle/xml/parser/schema/XSDBuilder
synonym  : oracle/xml/parser/schema/XSDBuilder
granting : execute on class oracle/xml/parser/schema/XSDCatClass to PUBLIC
skipping : class oracle/xml/parser/schema/XSDCatClass
synonym  : oracle/xml/parser/schema/XSDCatClass
granting : execute on class oracle/xml/parser/schema/XSDCharClass to PUBLIC
skipping : class oracle/xml/parser/schema/XSDCharClass
synonym  : oracle/xml/parser/schema/XSDCharClass
granting : execute on class oracle/xml/parser/schema/XSDComplexType to PUBLIC
skipping : class oracle/xml/parser/schema/XSDComplexType
synonym  : oracle/xml/parser/schema/XSDComplexType
granting : execute on class oracle/xml/parser/schema/XSDComponent to PUBLIC
skipping : class oracle/xml/parser/schema/XSDComponent
synonym  : oracle/xml/parser/schema/XSDComponent
granting : execute on class oracle/xml/parser/schema/XSDConstantValues to PUBLIC
skipping : class oracle/xml/parser/schema/XSDConstantValues
synonym  : oracle/xml/parser/schema/XSDConstantValues
granting : execute on class oracle/xml/parser/schema/XSDConstants to PUBLIC
resolving: class oracle/xml/parser/schema/XSDConstants
synonym  : oracle/xml/parser/schema/XSDConstants
granting : execute on class oracle/xml/parser/schema/XSDConstrainingFacet to
PUBLIC
skipping : class oracle/xml/parser/schema/XSDConstrainingFacet
synonym  : oracle/xml/parser/schema/XSDConstrainingFacet
granting : execute on class oracle/xml/parser/schema/XSDDataValue to PUBLIC
skipping : class oracle/xml/parser/schema/XSDDataValue
synonym  : oracle/xml/parser/schema/XSDDataValue
granting : execute on class oracle/xml/parser/schema/XSDElement to PUBLIC
skipping : class oracle/xml/parser/schema/XSDElement
synonym  : oracle/xml/parser/schema/XSDElement
granting : execute on class oracle/xml/parser/schema/XSDEscClass to PUBLIC
skipping : class oracle/xml/parser/schema/XSDEscClass
synonym  : oracle/xml/parser/schema/XSDEscClass
granting : execute on class oracle/xml/parser/schema/XSDException to PUBLIC
skipping : class oracle/xml/parser/schema/XSDException
synonym  : oracle/xml/parser/schema/XSDException
granting : execute on class oracle/xml/parser/schema/XSDGroup to PUBLIC
skipping : class oracle/xml/parser/schema/XSDGroup
synonym  : oracle/xml/parser/schema/XSDGroup
granting : execute on class
oracle/xml/parser/schema/XSDIdConstraintTable$NodeTable to PUBLIC
skipping : class oracle/xml/parser/schema/XSDIdConstraintTable$NodeTable
synonym  : oracle/xml/parser/schema/XSDIdConstraintTable$NodeTable
granting : execute on class oracle/xml/parser/schema/XSDIdConstraintTable to
PUBLIC
skipping : class oracle/xml/parser/schema/XSDIdConstraintTable
synonym  : oracle/xml/parser/schema/XSDIdConstraintTable
granting : execute on class oracle/xml/parser/schema/XSDIdentity to PUBLIC
skipping : class oracle/xml/parser/schema/XSDIdentity
synonym  : oracle/xml/parser/schema/XSDIdentity
granting : execute on class oracle/xml/parser/schema/XSDInputSource to PUBLIC
skipping : class oracle/xml/parser/schema/XSDInputSource
synonym  : oracle/xml/parser/schema/XSDInputSource
granting : execute on class oracle/xml/parser/schema/XSDNegClass to PUBLIC
skipping : class oracle/xml/parser/schema/XSDNegClass
synonym  : oracle/xml/parser/schema/XSDNegClass
granting : execute on class oracle/xml/parser/schema/XSDNode to PUBLIC
skipping : class oracle/xml/parser/schema/XSDNode
synonym  : oracle/xml/parser/schema/XSDNode
granting : execute on class oracle/xml/parser/schema/XSDNotation to PUBLIC
skipping : class oracle/xml/parser/schema/XSDNotation
synonym  : oracle/xml/parser/schema/XSDNotation
granting : execute on class oracle/xml/parser/schema/XSDParser to PUBLIC
resolving: class oracle/xml/parser/schema/XSDParser
synonym  : oracle/xml/parser/schema/XSDParser
granting : execute on class oracle/xml/parser/schema/XSDParticleNode to PUBLIC
skipping : class oracle/xml/parser/schema/XSDParticleNode
synonym  : oracle/xml/parser/schema/XSDParticleNode
granting : execute on class oracle/xml/parser/schema/XSDPatternImpl to PUBLIC
skipping : class oracle/xml/parser/schema/XSDPatternImpl
synonym  : oracle/xml/parser/schema/XSDPatternImpl
granting : execute on class oracle/xml/parser/schema/XSDRangeClass to PUBLIC
skipping : class oracle/xml/parser/schema/XSDRangeClass
synonym  : oracle/xml/parser/schema/XSDRangeClass
granting : execute on class oracle/xml/parser/schema/XSDRegexCompiler to PUBLIC
skipping : class oracle/xml/parser/schema/XSDRegexCompiler
synonym  : oracle/xml/parser/schema/XSDRegexCompiler
granting : execute on class oracle/xml/parser/schema/XSDRegexProgram to PUBLIC
skipping : class oracle/xml/parser/schema/XSDRegexProgram
synonym  : oracle/xml/parser/schema/XSDRegexProgram
granting : execute on class oracle/xml/parser/schema/XSDRegexVM to PUBLIC
skipping : class oracle/xml/parser/schema/XSDRegexVM
synonym  : oracle/xml/parser/schema/XSDRegexVM
granting : execute on class oracle/xml/parser/schema/XSDSchemaDefaults to PUBLIC
skipping : class oracle/xml/parser/schema/XSDSchemaDefaults
synonym  : oracle/xml/parser/schema/XSDSchemaDefaults
granting : execute on class oracle/xml/parser/schema/XSDSimpleType to PUBLIC
skipping : class oracle/xml/parser/schema/XSDSimpleType
synonym  : oracle/xml/parser/schema/XSDSimpleType
granting : execute on class oracle/xml/parser/schema/XSDSubtractionClass to
PUBLIC
skipping : class oracle/xml/parser/schema/XSDSubtractionClass
synonym  : oracle/xml/parser/schema/XSDSubtractionClass
granting : execute on class oracle/xml/parser/schema/XSDTypeConstants to PUBLIC
skipping : class oracle/xml/parser/schema/XSDTypeConstants
synonym  : oracle/xml/parser/schema/XSDTypeConstants
granting : execute on class oracle/xml/parser/schema/XSDValidator$1 to PUBLIC
skipping : class oracle/xml/parser/schema/XSDValidator$1
synonym  : oracle/xml/parser/schema/XSDValidator$1
granting : execute on class oracle/xml/parser/schema/XSDValidator$State to
PUBLIC
skipping : class oracle/xml/parser/schema/XSDValidator$State
synonym  : oracle/xml/parser/schema/XSDValidator$State
granting : execute on class oracle/xml/parser/schema/XSDValidator to PUBLIC
skipping : class oracle/xml/parser/schema/XSDValidator
synonym  : oracle/xml/parser/schema/XSDValidator
granting : execute on class oracle/xml/xqxp/datamodel/DistinctArrayList to
PUBLIC
skipping : class oracle/xml/xqxp/datamodel/DistinctArrayList
synonym  : oracle/xml/xqxp/datamodel/DistinctArrayList
granting : execute on class oracle/xml/xqxp/datamodel/FSAllGroupType to PUBLIC
resolving: class oracle/xml/xqxp/datamodel/FSAllGroupType
synonym  : oracle/xml/xqxp/datamodel/FSAllGroupType
granting : execute on class oracle/xml/xqxp/datamodel/FSChoiceType to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/FSChoiceType
synonym  : oracle/xml/xqxp/datamodel/FSChoiceType
granting : execute on class oracle/xml/xqxp/datamodel/FSMultiArgType to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/FSMultiArgType
synonym  : oracle/xml/xqxp/datamodel/FSMultiArgType
granting : execute on class oracle/xml/xqxp/datamodel/FSNoneType to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/FSNoneType
synonym  : oracle/xml/xqxp/datamodel/FSNoneType
granting : execute on class oracle/xml/xqxp/datamodel/FSPrimeChoiceType to
PUBLIC
skipping : class oracle/xml/xqxp/datamodel/FSPrimeChoiceType
synonym  : oracle/xml/xqxp/datamodel/FSPrimeChoiceType
granting : execute on class oracle/xml/xqxp/datamodel/FSSequenceType to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/FSSequenceType
synonym  : oracle/xml/xqxp/datamodel/FSSequenceType
granting : execute on class oracle/xml/xqxp/datamodel/FSType to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/FSType
synonym  : oracle/xml/xqxp/datamodel/FSType
granting : execute on class oracle/xml/xqxp/datamodel/FSTypeUtil to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/FSTypeUtil
synonym  : oracle/xml/xqxp/datamodel/FSTypeUtil
granting : execute on class oracle/xml/xqxp/datamodel/OXMLBuiltInType to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/OXMLBuiltInType
synonym  : oracle/xml/xqxp/datamodel/OXMLBuiltInType
granting : execute on class oracle/xml/xqxp/datamodel/OXMLConstants to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/OXMLConstants
synonym  : oracle/xml/xqxp/datamodel/OXMLConstants
granting : execute on class oracle/xml/xqxp/datamodel/OXMLItem to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/OXMLItem
synonym  : oracle/xml/xqxp/datamodel/OXMLItem
granting : execute on class oracle/xml/xqxp/datamodel/OXMLSequence to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/OXMLSequence
synonym  : oracle/xml/xqxp/datamodel/OXMLSequence
granting : execute on class oracle/xml/xqxp/datamodel/OXMLSequenceType to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/OXMLSequenceType
synonym  : oracle/xml/xqxp/datamodel/OXMLSequenceType
granting : execute on class
oracle/xml/xqxp/datamodel/OXMLSequenceTypeAllowChildren to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/OXMLSequenceTypeAllowChildren
synonym  : oracle/xml/xqxp/datamodel/OXMLSequenceTypeAllowChildren
granting : execute on class oracle/xml/xqxp/datamodel/XMLItem to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/XMLItem
synonym  : oracle/xml/xqxp/datamodel/XMLItem
granting : execute on class oracle/xml/xqxp/datamodel/XMLItemConstants to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/XMLItemConstants
synonym  : oracle/xml/xqxp/datamodel/XMLItemConstants
granting : execute on class oracle/xml/xqxp/datamodel/XMLSequence to PUBLIC
skipping : class oracle/xml/xqxp/datamodel/XMLSequence
synonym  : oracle/xml/xqxp/datamodel/XMLSequence
granting : execute on class oracle/xml/xqxp/functions/OXMLFunction to PUBLIC
skipping : class oracle/xml/xqxp/functions/OXMLFunction
synonym  : oracle/xml/xqxp/functions/OXMLFunction
granting : execute on class oracle/xml/xqxp/functions/OXMLFunctionContext to
PUBLIC
skipping : class oracle/xml/xqxp/functions/OXMLFunctionContext
synonym  : oracle/xml/xqxp/functions/OXMLFunctionContext
granting : execute on class oracle/xml/xqxp/functions/OXMLFunctionLibrary to
PUBLIC
skipping : class oracle/xml/xqxp/functions/OXMLFunctionLibrary
synonym  : oracle/xml/xqxp/functions/OXMLFunctionLibrary
granting : execute on class oracle/xml/xqxp/functions/OXMLFunctionNSResolver to
PUBLIC
resolving: class oracle/xml/xqxp/functions/OXMLFunctionNSResolver
synonym  : oracle/xml/xqxp/functions/OXMLFunctionNSResolver
granting : execute on class
oracle/xml/xqxp/functions/OXMLFunctionNSResolverFactory to PUBLIC
resolving: class oracle/xml/xqxp/functions/OXMLFunctionNSResolverFactory
synonym  : oracle/xml/xqxp/functions/OXMLFunctionNSResolverFactory
granting : execute on class oracle/xml/xqxp/functions/OXMLSQLExprFunction to
PUBLIC
resolving: class oracle/xml/xqxp/functions/OXMLSQLExprFunction
synonym  : oracle/xml/xqxp/functions/OXMLSQLExprFunction
granting : execute on class oracle/xml/xqxp/functions/builtIns/Abs to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Abs
synonym  : oracle/xml/xqxp/functions/builtIns/Abs
granting : execute on class oracle/xml/xqxp/functions/builtIns/Avg to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Avg
synonym  : oracle/xml/xqxp/functions/builtIns/Avg
granting : execute on class oracle/xml/xqxp/functions/builtIns/BaseURI to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/BaseURI
synonym  : oracle/xml/xqxp/functions/builtIns/BaseURI
granting : execute on class oracle/xml/xqxp/functions/builtIns/Boolean to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Boolean
synonym  : oracle/xml/xqxp/functions/builtIns/Boolean
granting : execute on class oracle/xml/xqxp/functions/builtIns/Ceiling to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Ceiling
synonym  : oracle/xml/xqxp/functions/builtIns/Ceiling
granting : execute on class oracle/xml/xqxp/functions/builtIns/CodepointEqual to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/CodepointEqual
synonym  : oracle/xml/xqxp/functions/builtIns/CodepointEqual
granting : execute on class
oracle/xml/xqxp/functions/builtIns/CodepointsToString to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/CodepointsToString
synonym  : oracle/xml/xqxp/functions/builtIns/CodepointsToString
granting : execute on class oracle/xml/xqxp/functions/builtIns/Collation to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Collation
synonym  : oracle/xml/xqxp/functions/builtIns/Collation
granting : execute on class oracle/xml/xqxp/functions/builtIns/Collection to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Collection
synonym  : oracle/xml/xqxp/functions/builtIns/Collection
granting : execute on class oracle/xml/xqxp/functions/builtIns/Compare to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Compare
synonym  : oracle/xml/xqxp/functions/builtIns/Compare
granting : execute on class oracle/xml/xqxp/functions/builtIns/Concat to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Concat
synonym  : oracle/xml/xqxp/functions/builtIns/Concat
granting : execute on class oracle/xml/xqxp/functions/builtIns/Contains to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Contains
synonym  : oracle/xml/xqxp/functions/builtIns/Contains
granting : execute on class oracle/xml/xqxp/functions/builtIns/ContextItem to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/ContextItem
synonym  : oracle/xml/xqxp/functions/builtIns/ContextItem
granting : execute on class oracle/xml/xqxp/functions/builtIns/Count to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Count
synonym  : oracle/xml/xqxp/functions/builtIns/Count
granting : execute on class oracle/xml/xqxp/functions/builtIns/CurDate to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/CurDate
synonym  : oracle/xml/xqxp/functions/builtIns/CurDate
granting : execute on class oracle/xml/xqxp/functions/builtIns/CurDateTime to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/CurDateTime
synonym  : oracle/xml/xqxp/functions/builtIns/CurDateTime
granting : execute on class oracle/xml/xqxp/functions/builtIns/CurTime to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/CurTime
synonym  : oracle/xml/xqxp/functions/builtIns/CurTime
granting : execute on class oracle/xml/xqxp/functions/builtIns/Data to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Data
synonym  : oracle/xml/xqxp/functions/builtIns/Data
granting : execute on class oracle/xml/xqxp/functions/builtIns/DeepEqual to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/DeepEqual
synonym  : oracle/xml/xqxp/functions/builtIns/DeepEqual
granting : execute on class oracle/xml/xqxp/functions/builtIns/DistinctNode to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/DistinctNode
synonym  : oracle/xml/xqxp/functions/builtIns/DistinctNode
granting : execute on class
oracle/xml/xqxp/functions/builtIns/DistinctValue$ItemTypeComparator to PUBLIC
skipping : class
oracle/xml/xqxp/functions/builtIns/DistinctValue$ItemTypeComparator
synonym  : oracle/xml/xqxp/functions/builtIns/DistinctValue$ItemTypeComparator
granting : execute on class
oracle/xml/xqxp/functions/builtIns/DistinctValue$ItemTypeValueMap to PUBLIC
skipping : class
oracle/xml/xqxp/functions/builtIns/DistinctValue$ItemTypeValueMap
synonym  : oracle/xml/xqxp/functions/builtIns/DistinctValue$ItemTypeValueMap
granting : execute on class
oracle/xml/xqxp/functions/builtIns/DistinctValue$ItemValueComparator to PUBLIC
skipping : class
oracle/xml/xqxp/functions/builtIns/DistinctValue$ItemValueComparator
synonym  : oracle/xml/xqxp/functions/builtIns/DistinctValue$ItemValueComparator
granting : execute on class oracle/xml/xqxp/functions/builtIns/DistinctValue to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/DistinctValue
synonym  : oracle/xml/xqxp/functions/builtIns/DistinctValue
granting : execute on class oracle/xml/xqxp/functions/builtIns/Doc to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Doc
synonym  : oracle/xml/xqxp/functions/builtIns/Doc
granting : execute on class oracle/xml/xqxp/functions/builtIns/DocumentURI to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/DocumentURI
synonym  : oracle/xml/xqxp/functions/builtIns/DocumentURI
granting : execute on class oracle/xml/xqxp/functions/builtIns/Empty to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Empty
synonym  : oracle/xml/xqxp/functions/builtIns/Empty
granting : execute on class oracle/xml/xqxp/functions/builtIns/EncodeForURI to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/EncodeForURI
synonym  : oracle/xml/xqxp/functions/builtIns/EncodeForURI
granting : execute on class oracle/xml/xqxp/functions/builtIns/EndsWith to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/EndsWith
synonym  : oracle/xml/xqxp/functions/builtIns/EndsWith
granting : execute on class oracle/xml/xqxp/functions/builtIns/Error to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Error
synonym  : oracle/xml/xqxp/functions/builtIns/Error
granting : execute on class oracle/xml/xqxp/functions/builtIns/EscapeHtmlURI to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/EscapeHtmlURI
synonym  : oracle/xml/xqxp/functions/builtIns/EscapeHtmlURI
granting : execute on class oracle/xml/xqxp/functions/builtIns/Exists to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Exists
synonym  : oracle/xml/xqxp/functions/builtIns/Exists
granting : execute on class oracle/xml/xqxp/functions/builtIns/ExpandQName to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/ExpandQName
synonym  : oracle/xml/xqxp/functions/builtIns/ExpandQName
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNAccessors to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNAccessors
synonym  : oracle/xml/xqxp/functions/builtIns/FNAccessors
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNAdjustTimezone
to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNAdjustTimezone
synonym  : oracle/xml/xqxp/functions/builtIns/FNAdjustTimezone
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNBooleans to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNBooleans
synonym  : oracle/xml/xqxp/functions/builtIns/FNBooleans
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNContexts to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNContexts
synonym  : oracle/xml/xqxp/functions/builtIns/FNContexts
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNDateTime to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNDateTime
synonym  : oracle/xml/xqxp/functions/builtIns/FNDateTime
granting : execute on class
oracle/xml/xqxp/functions/builtIns/FNDateTimeDuration to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNDateTimeDuration
synonym  : oracle/xml/xqxp/functions/builtIns/FNDateTimeDuration
granting : execute on class
oracle/xml/xqxp/functions/builtIns/FNFunctionLibrary$1 to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNFunctionLibrary$1
synonym  : oracle/xml/xqxp/functions/builtIns/FNFunctionLibrary$1
granting : execute on class
oracle/xml/xqxp/functions/builtIns/FNFunctionLibrary$Key to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNFunctionLibrary$Key
synonym  : oracle/xml/xqxp/functions/builtIns/FNFunctionLibrary$Key
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNFunctionLibrary
to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNFunctionLibrary
synonym  : oracle/xml/xqxp/functions/builtIns/FNFunctionLibrary
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNNodes to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNNodes
synonym  : oracle/xml/xqxp/functions/builtIns/FNNodes
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNNumerics to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNNumerics
synonym  : oracle/xml/xqxp/functions/builtIns/FNNumerics
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNQNames to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNQNames
synonym  : oracle/xml/xqxp/functions/builtIns/FNQNames
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNSequences to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNSequences
synonym  : oracle/xml/xqxp/functions/builtIns/FNSequences
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNString to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNString
synonym  : oracle/xml/xqxp/functions/builtIns/FNString
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNStrings to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNStrings
synonym  : oracle/xml/xqxp/functions/builtIns/FNStrings
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNUtil to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNUtil
synonym  : oracle/xml/xqxp/functions/builtIns/FNUtil
granting : execute on class oracle/xml/xqxp/functions/builtIns/False to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/False
synonym  : oracle/xml/xqxp/functions/builtIns/False
granting : execute on class oracle/xml/xqxp/functions/builtIns/Floor to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Floor
synonym  : oracle/xml/xqxp/functions/builtIns/Floor
granting : execute on class
oracle/xml/xqxp/functions/builtIns/ID$DocumentOrderComparator to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/ID$DocumentOrderComparator
synonym  : oracle/xml/xqxp/functions/builtIns/ID$DocumentOrderComparator
granting : execute on class oracle/xml/xqxp/functions/builtIns/ID to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/ID
synonym  : oracle/xml/xqxp/functions/builtIns/ID
granting : execute on class oracle/xml/xqxp/functions/builtIns/IDRef to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/IDRef
synonym  : oracle/xml/xqxp/functions/builtIns/IDRef
granting : execute on class oracle/xml/xqxp/functions/builtIns/IRIToURI to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/IRIToURI
synonym  : oracle/xml/xqxp/functions/builtIns/IRIToURI
granting : execute on class oracle/xml/xqxp/functions/builtIns/InScopeNS to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/InScopeNS
synonym  : oracle/xml/xqxp/functions/builtIns/InScopeNS
granting : execute on class oracle/xml/xqxp/functions/builtIns/IndexOf to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/IndexOf
synonym  : oracle/xml/xqxp/functions/builtIns/IndexOf
granting : execute on class oracle/xml/xqxp/functions/builtIns/Input to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Input
synonym  : oracle/xml/xqxp/functions/builtIns/Input
granting : execute on class oracle/xml/xqxp/functions/builtIns/InsertBefore to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/InsertBefore
synonym  : oracle/xml/xqxp/functions/builtIns/InsertBefore
granting : execute on class oracle/xml/xqxp/functions/builtIns/ItemAt to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/ItemAt
synonym  : oracle/xml/xqxp/functions/builtIns/ItemAt
granting : execute on class oracle/xml/xqxp/functions/builtIns/Lang to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Lang
synonym  : oracle/xml/xqxp/functions/builtIns/Lang
granting : execute on class oracle/xml/xqxp/functions/builtIns/Last to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Last
synonym  : oracle/xml/xqxp/functions/builtIns/Last
granting : execute on class oracle/xml/xqxp/functions/builtIns/LocalName to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/LocalName
synonym  : oracle/xml/xqxp/functions/builtIns/LocalName
granting : execute on class
oracle/xml/xqxp/functions/builtIns/LocalNameFromQName to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/LocalNameFromQName
synonym  : oracle/xml/xqxp/functions/builtIns/LocalNameFromQName
granting : execute on class oracle/xml/xqxp/functions/builtIns/LowerCase to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/LowerCase
synonym  : oracle/xml/xqxp/functions/builtIns/LowerCase
granting : execute on class oracle/xml/xqxp/functions/builtIns/Max to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Max
synonym  : oracle/xml/xqxp/functions/builtIns/Max
granting : execute on class oracle/xml/xqxp/functions/builtIns/Min to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Min
synonym  : oracle/xml/xqxp/functions/builtIns/Min
granting : execute on class oracle/xml/xqxp/functions/builtIns/NSFromQName to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/NSFromQName
synonym  : oracle/xml/xqxp/functions/builtIns/NSFromQName
granting : execute on class oracle/xml/xqxp/functions/builtIns/NSURI to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/NSURI
synonym  : oracle/xml/xqxp/functions/builtIns/NSURI
granting : execute on class oracle/xml/xqxp/functions/builtIns/NSURIForPrefix to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/NSURIForPrefix
synonym  : oracle/xml/xqxp/functions/builtIns/NSURIForPrefix
granting : execute on class oracle/xml/xqxp/functions/builtIns/Name to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Name
synonym  : oracle/xml/xqxp/functions/builtIns/Name
granting : execute on class oracle/xml/xqxp/functions/builtIns/Nilled to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Nilled
synonym  : oracle/xml/xqxp/functions/builtIns/Nilled
granting : execute on class oracle/xml/xqxp/functions/builtIns/NodeIdentical to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/NodeIdentical
synonym  : oracle/xml/xqxp/functions/builtIns/NodeIdentical
granting : execute on class oracle/xml/xqxp/functions/builtIns/NodeKind to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/NodeKind
synonym  : oracle/xml/xqxp/functions/builtIns/NodeKind
granting : execute on class oracle/xml/xqxp/functions/builtIns/NodeName to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/NodeName
synonym  : oracle/xml/xqxp/functions/builtIns/NodeName
granting : execute on class oracle/xml/xqxp/functions/builtIns/NormalizeSpace to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/NormalizeSpace
synonym  : oracle/xml/xqxp/functions/builtIns/NormalizeSpace
granting : execute on class oracle/xml/xqxp/functions/builtIns/NormalizeUnicode
to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/NormalizeUnicode
synonym  : oracle/xml/xqxp/functions/builtIns/NormalizeUnicode
granting : execute on class oracle/xml/xqxp/functions/builtIns/Not to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Not
synonym  : oracle/xml/xqxp/functions/builtIns/Not
granting : execute on class oracle/xml/xqxp/functions/builtIns/Number to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Number
synonym  : oracle/xml/xqxp/functions/builtIns/Number
granting : execute on class oracle/xml/xqxp/functions/builtIns/One to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/One
synonym  : oracle/xml/xqxp/functions/builtIns/One
granting : execute on class oracle/xml/xqxp/functions/builtIns/OneOrMore to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/OneOrMore
synonym  : oracle/xml/xqxp/functions/builtIns/OneOrMore
granting : execute on class oracle/xml/xqxp/functions/builtIns/Position to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Position
synonym  : oracle/xml/xqxp/functions/builtIns/Position
granting : execute on class oracle/xml/xqxp/functions/builtIns/PrefixFromQName
to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/PrefixFromQName
synonym  : oracle/xml/xqxp/functions/builtIns/PrefixFromQName
granting : execute on class oracle/xml/xqxp/functions/builtIns/Remove to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Remove
synonym  : oracle/xml/xqxp/functions/builtIns/Remove
granting : execute on class oracle/xml/xqxp/functions/builtIns/ResolveQName to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/ResolveQName
synonym  : oracle/xml/xqxp/functions/builtIns/ResolveQName
granting : execute on class oracle/xml/xqxp/functions/builtIns/ResolveURI to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/ResolveURI
synonym  : oracle/xml/xqxp/functions/builtIns/ResolveURI
granting : execute on class oracle/xml/xqxp/functions/builtIns/Reverse to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Reverse
synonym  : oracle/xml/xqxp/functions/builtIns/Reverse
granting : execute on class oracle/xml/xqxp/functions/builtIns/Root to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Root
synonym  : oracle/xml/xqxp/functions/builtIns/Root
granting : execute on class oracle/xml/xqxp/functions/builtIns/Round to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Round
synonym  : oracle/xml/xqxp/functions/builtIns/Round
granting : execute on class oracle/xml/xqxp/functions/builtIns/RoundHalfToEven
to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/RoundHalfToEven
synonym  : oracle/xml/xqxp/functions/builtIns/RoundHalfToEven
granting : execute on class oracle/xml/xqxp/functions/builtIns/StartsWith to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/StartsWith
synonym  : oracle/xml/xqxp/functions/builtIns/StartsWith
granting : execute on class oracle/xml/xqxp/functions/builtIns/StaticBaseURI to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/StaticBaseURI
synonym  : oracle/xml/xqxp/functions/builtIns/StaticBaseURI
granting : execute on class oracle/xml/xqxp/functions/builtIns/StringJoin to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/StringJoin
synonym  : oracle/xml/xqxp/functions/builtIns/StringJoin
granting : execute on class oracle/xml/xqxp/functions/builtIns/StringLength to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/StringLength
synonym  : oracle/xml/xqxp/functions/builtIns/StringLength
granting : execute on class oracle/xml/xqxp/functions/builtIns/StringPad to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/StringPad
synonym  : oracle/xml/xqxp/functions/builtIns/StringPad
granting : execute on class
oracle/xml/xqxp/functions/builtIns/StringToCodepoints to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/StringToCodepoints
synonym  : oracle/xml/xqxp/functions/builtIns/StringToCodepoints
granting : execute on class oracle/xml/xqxp/functions/builtIns/Subsequence to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Subsequence
synonym  : oracle/xml/xqxp/functions/builtIns/Subsequence
granting : execute on class oracle/xml/xqxp/functions/builtIns/Substring to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Substring
synonym  : oracle/xml/xqxp/functions/builtIns/Substring
granting : execute on class oracle/xml/xqxp/functions/builtIns/SubstringAfter to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/SubstringAfter
synonym  : oracle/xml/xqxp/functions/builtIns/SubstringAfter
granting : execute on class oracle/xml/xqxp/functions/builtIns/SubstringBefore
to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/SubstringBefore
synonym  : oracle/xml/xqxp/functions/builtIns/SubstringBefore
granting : execute on class oracle/xml/xqxp/functions/builtIns/Sum to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Sum
synonym  : oracle/xml/xqxp/functions/builtIns/Sum
granting : execute on class oracle/xml/xqxp/functions/builtIns/Timezone to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Timezone
synonym  : oracle/xml/xqxp/functions/builtIns/Timezone
granting : execute on class oracle/xml/xqxp/functions/builtIns/Trace to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Trace
synonym  : oracle/xml/xqxp/functions/builtIns/Trace
granting : execute on class oracle/xml/xqxp/functions/builtIns/Translate to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Translate
synonym  : oracle/xml/xqxp/functions/builtIns/Translate
granting : execute on class oracle/xml/xqxp/functions/builtIns/True to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/True
synonym  : oracle/xml/xqxp/functions/builtIns/True
granting : execute on class oracle/xml/xqxp/functions/builtIns/Unordered to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/Unordered
synonym  : oracle/xml/xqxp/functions/builtIns/Unordered
granting : execute on class oracle/xml/xqxp/functions/builtIns/UpperCase to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/UpperCase
synonym  : oracle/xml/xqxp/functions/builtIns/UpperCase
granting : execute on class oracle/xml/xqxp/functions/builtIns/XDTFunction to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/XDTFunction
synonym  : oracle/xml/xqxp/functions/builtIns/XDTFunction
granting : execute on class
oracle/xml/xqxp/functions/builtIns/XDTFunctionLibrary to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/XDTFunctionLibrary
synonym  : oracle/xml/xqxp/functions/builtIns/XDTFunctionLibrary
granting : execute on class oracle/xml/xqxp/functions/builtIns/XSFunction to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/XSFunction
synonym  : oracle/xml/xqxp/functions/builtIns/XSFunction
granting : execute on class oracle/xml/xqxp/functions/builtIns/XSFunctionLibrary
to PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/XSFunctionLibrary
synonym  : oracle/xml/xqxp/functions/builtIns/XSFunctionLibrary
granting : execute on class oracle/xml/xqxp/functions/builtIns/ZeroOrOne to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/ZeroOrOne
synonym  : oracle/xml/xqxp/functions/builtIns/ZeroOrOne
granting : execute on class
oracle/xml/xqxp/functions/builtIns/FNDateTimeSubtract to PUBLIC
resolving: class oracle/xml/xqxp/functions/builtIns/FNDateTimeSubtract
synonym  : oracle/xml/xqxp/functions/builtIns/FNDateTimeSubtract
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNMatches to
PUBLIC
resolving: class oracle/xml/xqxp/functions/builtIns/FNMatches
synonym  : oracle/xml/xqxp/functions/builtIns/FNMatches
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNPatternMatch to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNPatternMatch
synonym  : oracle/xml/xqxp/functions/builtIns/FNPatternMatch
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNReplace to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNReplace
synonym  : oracle/xml/xqxp/functions/builtIns/FNReplace
granting : execute on class oracle/xml/xqxp/functions/builtIns/FNTokenize to
PUBLIC
skipping : class oracle/xml/xqxp/functions/builtIns/FNTokenize
synonym  : oracle/xml/xqxp/functions/builtIns/FNTokenize
granting : execute on class oracle/xdb/BinXMLTestEncDec to PUBLIC
resolving: class oracle/xdb/BinXMLTestEncDec
synonym  : oracle/xdb/BinXMLTestEncDec
granting : execute on class oracle/xdb/RealInputStream to PUBLIC
skipping : class oracle/xdb/RealInputStream
synonym  : oracle/xdb/RealInputStream
granting : execute on class oracle/xdb/SoftHashMap$1 to PUBLIC
skipping : class oracle/xdb/SoftHashMap$1
synonym  : oracle/xdb/SoftHashMap$1
granting : execute on class oracle/xdb/SoftHashMap$Entry to PUBLIC
skipping : class oracle/xdb/SoftHashMap$Entry
synonym  : oracle/xdb/SoftHashMap$Entry
granting : execute on class oracle/xdb/SoftHashMap$EntrySet$1 to PUBLIC
skipping : class oracle/xdb/SoftHashMap$EntrySet$1
synonym  : oracle/xdb/SoftHashMap$EntrySet$1
granting : execute on class oracle/xdb/SoftHashMap$EntrySet to PUBLIC
skipping : class oracle/xdb/SoftHashMap$EntrySet
synonym  : oracle/xdb/SoftHashMap$EntrySet
granting : execute on class oracle/xdb/SoftHashMap$SoftKey to PUBLIC
skipping : class oracle/xdb/SoftHashMap$SoftKey
synonym  : oracle/xdb/SoftHashMap$SoftKey
granting : execute on class oracle/xdb/SoftHashMap to PUBLIC
skipping : class oracle/xdb/SoftHashMap
synonym  : oracle/xdb/SoftHashMap
granting : execute on class oracle/xdb/XDBError to PUBLIC
skipping : class oracle/xdb/XDBError
synonym  : oracle/xdb/XDBError
granting : execute on resource oracle/xdb/XDBMessages.properties to PUBLIC
skipping : resource oracle/xdb/XDBMessages.properties
granting : execute on resource oracle/xdb/XDBMessages_en_US.properties to PUBLIC
skipping : resource oracle/xdb/XDBMessages_en_US.properties
granting : execute on class oracle/xdb/XDBOutputStream to PUBLIC
resolving: class oracle/xdb/XDBOutputStream
synonym  : oracle/xdb/XDBOutputStream
granting : execute on class oracle/xdb/XMLType to PUBLIC
skipping : class oracle/xdb/XMLType
synonym  : oracle/xdb/XMLType
granting : execute on class oracle/xdb/XMLTypeFactory to PUBLIC
skipping : class oracle/xdb/XMLTypeFactory
synonym  : oracle/xdb/XMLTypeFactory
granting : execute on class oracle/xdb/bean/XMLTypeBean to PUBLIC
resolving: class oracle/xdb/bean/XMLTypeBean
synonym  : oracle/xdb/bean/XMLTypeBean
granting : execute on class oracle/xdb/dom/XDBNotImplementedException to PUBLIC
skipping : class oracle/xdb/dom/XDBNotImplementedException
synonym  : oracle/xdb/dom/XDBNotImplementedException
granting : execute on class oracle/xdb/dom/XDBDomImplementation to PUBLIC
skipping : class oracle/xdb/dom/XDBDomImplementation
synonym  : oracle/xdb/dom/XDBDomImplementation
granting : execute on class oracle/xdb/dom/XDBDocument to PUBLIC
skipping : class oracle/xdb/dom/XDBDocument
synonym  : oracle/xdb/dom/XDBDocument
granting : execute on class oracle/xdb/dom/XDBNode to PUBLIC
skipping : class oracle/xdb/dom/XDBNode
synonym  : oracle/xdb/dom/XDBNode
granting : execute on class oracle/xdb/dom/XDBDOMException to PUBLIC
skipping : class oracle/xdb/dom/XDBDOMException
synonym  : oracle/xdb/dom/XDBDOMException
granting : execute on class oracle/xdb/dom/XDBDocFragment to PUBLIC
skipping : class oracle/xdb/dom/XDBDocFragment
synonym  : oracle/xdb/dom/XDBDocFragment
granting : execute on class oracle/xdb/dom/XDBDocumentType to PUBLIC
skipping : class oracle/xdb/dom/XDBDocumentType
synonym  : oracle/xdb/dom/XDBDocumentType
granting : execute on class oracle/xdb/dom/XDBEntity to PUBLIC
skipping : class oracle/xdb/dom/XDBEntity
synonym  : oracle/xdb/dom/XDBEntity
granting : execute on class oracle/xdb/dom/XDBNotation to PUBLIC
skipping : class oracle/xdb/dom/XDBNotation
synonym  : oracle/xdb/dom/XDBNotation
granting : execute on class oracle/xdb/dom/XDBElement to PUBLIC
skipping : class oracle/xdb/dom/XDBElement
synonym  : oracle/xdb/dom/XDBElement
granting : execute on class oracle/xdb/dom/XDBNodeList to PUBLIC
skipping : class oracle/xdb/dom/XDBNodeList
synonym  : oracle/xdb/dom/XDBNodeList
granting : execute on class oracle/xdb/dom/XDBNamedNodeMap to PUBLIC
skipping : class oracle/xdb/dom/XDBNamedNodeMap
synonym  : oracle/xdb/dom/XDBNamedNodeMap
granting : execute on class oracle/xdb/dom/XDBAttribute to PUBLIC
skipping : class oracle/xdb/dom/XDBAttribute
synonym  : oracle/xdb/dom/XDBAttribute
granting : execute on class oracle/xdb/dom/XDBCData to PUBLIC
skipping : class oracle/xdb/dom/XDBCData
synonym  : oracle/xdb/dom/XDBCData
granting : execute on class oracle/xdb/dom/XDBText to PUBLIC
skipping : class oracle/xdb/dom/XDBText
synonym  : oracle/xdb/dom/XDBText
granting : execute on class oracle/xdb/dom/XDBCharData to PUBLIC
skipping : class oracle/xdb/dom/XDBCharData
synonym  : oracle/xdb/dom/XDBCharData
granting : execute on class oracle/xdb/dom/XDBComment to PUBLIC
skipping : class oracle/xdb/dom/XDBComment
synonym  : oracle/xdb/dom/XDBComment
granting : execute on class oracle/xdb/dom/XDBEntityReference to PUBLIC
skipping : class oracle/xdb/dom/XDBEntityReference
synonym  : oracle/xdb/dom/XDBEntityReference
granting : execute on class oracle/xdb/dom/XDBProcInst to PUBLIC
skipping : class oracle/xdb/dom/XDBProcInst
synonym  : oracle/xdb/dom/XDBProcInst
granting : execute on class oracle/xdb/dom/XDBBinaryDocument to PUBLIC
resolving: class oracle/xdb/dom/XDBBinaryDocument
synonym  : oracle/xdb/dom/XDBBinaryDocument
granting : execute on class oracle/xdb/event/XDBInvalidOperationException to
PUBLIC
skipping : class oracle/xdb/event/XDBInvalidOperationException
synonym  : oracle/xdb/event/XDBInvalidOperationException
granting : execute on class oracle/xdb/event/XDBBasicEventListener to PUBLIC
resolving: class oracle/xdb/event/XDBBasicEventListener
synonym  : oracle/xdb/event/XDBBasicEventListener
granting : execute on class oracle/xdb/event/XDBRepositoryEventListener to
PUBLIC
skipping : class oracle/xdb/event/XDBRepositoryEventListener
synonym  : oracle/xdb/event/XDBRepositoryEventListener
granting : execute on class oracle/xdb/event/XDBRepositoryEvent to PUBLIC
skipping : class oracle/xdb/event/XDBRepositoryEvent
synonym  : oracle/xdb/event/XDBRepositoryEvent
granting : execute on class oracle/xdb/event/XDBEvent to PUBLIC
skipping : class oracle/xdb/event/XDBEvent
synonym  : oracle/xdb/event/XDBEvent
granting : execute on class oracle/xdb/event/XDBPath to PUBLIC
skipping : class oracle/xdb/event/XDBPath
synonym  : oracle/xdb/event/XDBPath
granting : execute on class oracle/xdb/event/XDBHandlerList to PUBLIC
skipping : class oracle/xdb/event/XDBHandlerList
synonym  : oracle/xdb/event/XDBHandlerList
granting : execute on class oracle/xdb/event/XDBLink to PUBLIC
skipping : class oracle/xdb/event/XDBLink
synonym  : oracle/xdb/event/XDBLink
granting : execute on class oracle/xdb/event/XDBLock to PUBLIC
skipping : class oracle/xdb/event/XDBLock
synonym  : oracle/xdb/event/XDBLock
granting : execute on class oracle/xdb/event/XDBHandler to PUBLIC
skipping : class oracle/xdb/event/XDBHandler
synonym  : oracle/xdb/event/XDBHandler
granting : execute on class oracle/xdb/event/XDBRenderStream to PUBLIC
skipping : class oracle/xdb/event/XDBRenderStream
synonym  : oracle/xdb/event/XDBRenderStream
granting : execute on class oracle/xdb/event/XDBEventDispatcher to PUBLIC
resolving: class oracle/xdb/event/XDBEventDispatcher
synonym  : oracle/xdb/event/XDBEventDispatcher
granting : execute on class oracle/xdb/servlet/XDBStream to PUBLIC
skipping : class oracle/xdb/servlet/XDBStream
synonym  : oracle/xdb/servlet/XDBStream
granting : execute on class oracle/xdb/servlet/XDBCookie to PUBLIC
skipping : class oracle/xdb/servlet/XDBCookie
synonym  : oracle/xdb/servlet/XDBCookie
granting : execute on class oracle/xdb/servlet/XDBServletConfig to PUBLIC
resolving: class oracle/xdb/servlet/XDBServletConfig
synonym  : oracle/xdb/servlet/XDBServletConfig
granting : execute on class oracle/xdb/servlet/ArrayEnumeration to PUBLIC
skipping : class oracle/xdb/servlet/ArrayEnumeration
synonym  : oracle/xdb/servlet/ArrayEnumeration
granting : execute on class oracle/xdb/servlet/XDBServletContext to PUBLIC
skipping : class oracle/xdb/servlet/XDBServletContext
synonym  : oracle/xdb/servlet/XDBServletContext
granting : execute on class oracle/xdb/servlet/XDBServletRequest$ParamNames to
PUBLIC
skipping : class oracle/xdb/servlet/XDBServletRequest$ParamNames
synonym  : oracle/xdb/servlet/XDBServletRequest$ParamNames
granting : execute on class oracle/xdb/servlet/XDBServletRequest to PUBLIC
skipping : class oracle/xdb/servlet/XDBServletRequest
synonym  : oracle/xdb/servlet/XDBServletRequest
granting : execute on class oracle/xdb/servlet/XDBRequestStream to PUBLIC
skipping : class oracle/xdb/servlet/XDBRequestStream
synonym  : oracle/xdb/servlet/XDBRequestStream
granting : execute on class oracle/xdb/servlet/XDBPrincipal to PUBLIC
skipping : class oracle/xdb/servlet/XDBPrincipal
synonym  : oracle/xdb/servlet/XDBPrincipal
granting : execute on class
oracle/xdb/servlet/XDBServletResponse$XDBServletWriter to PUBLIC
resolving: class oracle/xdb/servlet/XDBServletResponse$XDBServletWriter
synonym  : oracle/xdb/servlet/XDBServletResponse$XDBServletWriter
granting : execute on class oracle/xdb/servlet/XDBServletResponse to PUBLIC
skipping : class oracle/xdb/servlet/XDBServletResponse
synonym  : oracle/xdb/servlet/XDBServletResponse
granting : execute on class oracle/xdb/servlet/XDBServletContainer to PUBLIC
resolving: class oracle/xdb/servlet/XDBServletContainer
synonym  : oracle/xdb/servlet/XDBServletContainer
granting : execute on class oracle/xdb/spi/XDBResource to PUBLIC
skipping : class oracle/xdb/spi/XDBResource
synonym  : oracle/xdb/spi/XDBResource
granting : execute on class oracle/xdb/spi/Resource to PUBLIC
skipping : class oracle/xdb/spi/Resource
synonym  : oracle/xdb/spi/Resource
granting : execute on class oracle/xdb/spi/XDBContextFactory to PUBLIC
resolving: class oracle/xdb/spi/XDBContextFactory
synonym  : oracle/xdb/spi/XDBContextFactory
granting : execute on class oracle/xdb/spi/XDBResourceContext to PUBLIC
skipping : class oracle/xdb/spi/XDBResourceContext
synonym  : oracle/xdb/spi/XDBResourceContext
granting : execute on class oracle/xdb/spi/XDBNameParser to PUBLIC
skipping : class oracle/xdb/spi/XDBNameParser
synonym  : oracle/xdb/spi/XDBNameParser
granting : execute on class oracle/xdb/spi/XDBNamingEnumeration to PUBLIC
skipping : class oracle/xdb/spi/XDBNamingEnumeration
synonym  : oracle/xdb/spi/XDBNamingEnumeration
Classes Loaded: 692
Resources Loaded: 16
Sources Loaded: 0
Published Interfaces: 0
Classes generated: 0
Classes skipped: 0
Synonyms Created: 692
Errors: 0

Call completed.

SQL> 
SQL> CALL xdk_load_jar('lib/xsu12.jar');
arguments: '-kprb' '-verbose' '-resolve' '-grant' 'PUBLIC' '-synonym' '-install'
'lib/xsu12.jar'
creating : resource META-INF/INDEX.LIST
creating : class oracle/xml/sql/dml/OracleXMLSave
creating : class oracle/xml/sql/dml/OracleXMLStaticSave$1
creating : class oracle/xml/sql/dml/OracleXMLStaticSave$MutableInt
creating : class oracle/xml/sql/dml/OracleXMLStaticSave$SaveCtx
creating : class oracle/xml/sql/dml/OracleXMLStaticSave
creating : resource oracle/xml/sql/mesg/XSUMessages.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_ar.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_cs.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_da.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_de.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_el.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_es.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_fi.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_fr.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_hu.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_it.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_iw.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_ja.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_ko.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_nl.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_no.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_pl.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_pt.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_pt_BR.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_ro.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_ru.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_sk.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_sv.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_th.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_tr.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_zh_CN.properties
creating : resource oracle/xml/sql/mesg/XSUMessages_zh_TW.properties
creating : class oracle/xml/sql/OracleXMLSQLException
creating : class oracle/xml/sql/OracleXMLSQLNoRowsException
creating : class oracle/xml/sql/XSUMesg
creating : class oracle/xml/sql/XSUXSchemaHandler
creating : class oracle/xml/sql/dataset/OracleXMLDataSet
creating : class oracle/xml/sql/dataset/OracleXMLDataSetExtJdbc
creating : class oracle/xml/sql/dataset/OracleXMLDataSetGenJdbc
creating : class oracle/xml/sql/name/OracleADTName
creating : class oracle/xml/sql/name/OracleCollectionName
creating : class oracle/xml/sql/name/OracleColumnName
creating : class oracle/xml/sql/name/OracleCursorName
creating : class oracle/xml/sql/name/OracleScalarName
creating : class oracle/xml/sql/core/OracleXMLConvert
creating : class oracle/xml/sql/core/OracleXMLTime
creating : class oracle/xml/sql/core/OracleXMLTimer
creating : class oracle/xml/sql/core/OracleXMLUtil
creating : class oracle/xml/sql/docgen/OracleXMLDocGen
creating : class oracle/xml/sql/docgen/OracleXMLDocGenDOM$FragmentReader
creating : class oracle/xml/sql/docgen/OracleXMLDocGenDOM
creating : class oracle/xml/sql/docgen/OracleXMLDocGenSAX
creating : class oracle/xml/sql/docgen/OracleXMLDocGenString
creating : resource .xdk_version_11.2.0.3.0_production
creating : class oracle/xml/sql/query/OracleXMLQuery
creating : class oracle/xml/sql/query/OracleXMLStaticQuery$1
creating : class oracle/xml/sql/query/OracleXMLStaticQuery$MutableInt
creating : class oracle/xml/sql/query/OracleXMLStaticQuery$QueryCtx
creating : class oracle/xml/sql/query/OracleXMLStaticQuery
creating : class oracle/xml/sql/XSULocale
creating : class oracle/xml/sql/docgen/OracleXMLDocGenLob
creating : class oracle/xml/sql/dataset/OracleXMLDataSetJdbc
creating : class OracleXML
creating : class OracleXMLStore
creating : resource META-INF/MANIFEST.MF
granting : execute on resource META-INF/INDEX.LIST to PUBLIC
skipping : resource META-INF/INDEX.LIST
granting : execute on class oracle/xml/sql/dml/OracleXMLSave to PUBLIC
resolving: class oracle/xml/sql/dml/OracleXMLSave
synonym  : oracle/xml/sql/dml/OracleXMLSave
granting : execute on class oracle/xml/sql/dml/OracleXMLStaticSave$1 to PUBLIC
resolving: class oracle/xml/sql/dml/OracleXMLStaticSave$1
synonym  : oracle/xml/sql/dml/OracleXMLStaticSave$1
granting : execute on class oracle/xml/sql/dml/OracleXMLStaticSave$MutableInt to
PUBLIC
skipping : class oracle/xml/sql/dml/OracleXMLStaticSave$MutableInt
synonym  : oracle/xml/sql/dml/OracleXMLStaticSave$MutableInt
granting : execute on class oracle/xml/sql/dml/OracleXMLStaticSave$SaveCtx to
PUBLIC
skipping : class oracle/xml/sql/dml/OracleXMLStaticSave$SaveCtx
synonym  : oracle/xml/sql/dml/OracleXMLStaticSave$SaveCtx
granting : execute on class oracle/xml/sql/dml/OracleXMLStaticSave to PUBLIC
skipping : class oracle/xml/sql/dml/OracleXMLStaticSave
synonym  : oracle/xml/sql/dml/OracleXMLStaticSave
granting : execute on resource oracle/xml/sql/mesg/XSUMessages.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_ar.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_ar.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_cs.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_cs.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_da.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_da.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_de.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_de.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_el.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_el.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_es.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_es.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_fi.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_fi.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_fr.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_fr.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_hu.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_hu.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_it.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_it.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_iw.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_iw.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_ja.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_ja.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_ko.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_ko.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_nl.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_nl.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_no.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_no.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_pl.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_pl.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_pt.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_pt.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_pt_BR.properties
to PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_pt_BR.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_ro.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_ro.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_ru.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_ru.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_sk.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_sk.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_sv.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_sv.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_th.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_th.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_tr.properties to
PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_tr.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_zh_CN.properties
to PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_zh_CN.properties
granting : execute on resource oracle/xml/sql/mesg/XSUMessages_zh_TW.properties
to PUBLIC
skipping : resource oracle/xml/sql/mesg/XSUMessages_zh_TW.properties
granting : execute on class oracle/xml/sql/OracleXMLSQLException to PUBLIC
skipping : class oracle/xml/sql/OracleXMLSQLException
synonym  : oracle/xml/sql/OracleXMLSQLException
granting : execute on class oracle/xml/sql/OracleXMLSQLNoRowsException to PUBLIC
skipping : class oracle/xml/sql/OracleXMLSQLNoRowsException
synonym  : oracle/xml/sql/OracleXMLSQLNoRowsException
granting : execute on class oracle/xml/sql/XSUMesg to PUBLIC
skipping : class oracle/xml/sql/XSUMesg
synonym  : oracle/xml/sql/XSUMesg
granting : execute on class oracle/xml/sql/XSUXSchemaHandler to PUBLIC
skipping : class oracle/xml/sql/XSUXSchemaHandler
synonym  : oracle/xml/sql/XSUXSchemaHandler
granting : execute on class oracle/xml/sql/dataset/OracleXMLDataSet to PUBLIC
skipping : class oracle/xml/sql/dataset/OracleXMLDataSet
synonym  : oracle/xml/sql/dataset/OracleXMLDataSet
granting : execute on class oracle/xml/sql/dataset/OracleXMLDataSetExtJdbc to
PUBLIC
skipping : class oracle/xml/sql/dataset/OracleXMLDataSetExtJdbc
synonym  : oracle/xml/sql/dataset/OracleXMLDataSetExtJdbc
granting : execute on class oracle/xml/sql/dataset/OracleXMLDataSetGenJdbc to
PUBLIC
skipping : class oracle/xml/sql/dataset/OracleXMLDataSetGenJdbc
synonym  : oracle/xml/sql/dataset/OracleXMLDataSetGenJdbc
granting : execute on class oracle/xml/sql/name/OracleADTName to PUBLIC
skipping : class oracle/xml/sql/name/OracleADTName
synonym  : oracle/xml/sql/name/OracleADTName
granting : execute on class oracle/xml/sql/name/OracleCollectionName to PUBLIC
skipping : class oracle/xml/sql/name/OracleCollectionName
synonym  : oracle/xml/sql/name/OracleCollectionName
granting : execute on class oracle/xml/sql/name/OracleColumnName to PUBLIC
skipping : class oracle/xml/sql/name/OracleColumnName
synonym  : oracle/xml/sql/name/OracleColumnName
granting : execute on class oracle/xml/sql/name/OracleCursorName to PUBLIC
skipping : class oracle/xml/sql/name/OracleCursorName
synonym  : oracle/xml/sql/name/OracleCursorName
granting : execute on class oracle/xml/sql/name/OracleScalarName to PUBLIC
skipping : class oracle/xml/sql/name/OracleScalarName
synonym  : oracle/xml/sql/name/OracleScalarName
granting : execute on class oracle/xml/sql/core/OracleXMLConvert to PUBLIC
skipping : class oracle/xml/sql/core/OracleXMLConvert
synonym  : oracle/xml/sql/core/OracleXMLConvert
granting : execute on class oracle/xml/sql/core/OracleXMLTime to PUBLIC
skipping : class oracle/xml/sql/core/OracleXMLTime
synonym  : oracle/xml/sql/core/OracleXMLTime
granting : execute on class oracle/xml/sql/core/OracleXMLTimer to PUBLIC
skipping : class oracle/xml/sql/core/OracleXMLTimer
synonym  : oracle/xml/sql/core/OracleXMLTimer
granting : execute on class oracle/xml/sql/core/OracleXMLUtil to PUBLIC
skipping : class oracle/xml/sql/core/OracleXMLUtil
synonym  : oracle/xml/sql/core/OracleXMLUtil
granting : execute on class oracle/xml/sql/docgen/OracleXMLDocGen to PUBLIC
skipping : class oracle/xml/sql/docgen/OracleXMLDocGen
synonym  : oracle/xml/sql/docgen/OracleXMLDocGen
granting : execute on class
oracle/xml/sql/docgen/OracleXMLDocGenDOM$FragmentReader to PUBLIC
skipping : class oracle/xml/sql/docgen/OracleXMLDocGenDOM$FragmentReader
synonym  : oracle/xml/sql/docgen/OracleXMLDocGenDOM$FragmentReader
granting : execute on class oracle/xml/sql/docgen/OracleXMLDocGenDOM to PUBLIC
skipping : class oracle/xml/sql/docgen/OracleXMLDocGenDOM
synonym  : oracle/xml/sql/docgen/OracleXMLDocGenDOM
granting : execute on class oracle/xml/sql/docgen/OracleXMLDocGenSAX to PUBLIC
resolving: class oracle/xml/sql/docgen/OracleXMLDocGenSAX
synonym  : oracle/xml/sql/docgen/OracleXMLDocGenSAX
granting : execute on class oracle/xml/sql/docgen/OracleXMLDocGenString to
PUBLIC
skipping : class oracle/xml/sql/docgen/OracleXMLDocGenString
synonym  : oracle/xml/sql/docgen/OracleXMLDocGenString
granting : execute on resource .xdk_version_11.2.0.3.0_production to PUBLIC
skipping : resource .xdk_version_11.2.0.3.0_production
granting : execute on class oracle/xml/sql/query/OracleXMLQuery to PUBLIC
resolving: class oracle/xml/sql/query/OracleXMLQuery
synonym  : oracle/xml/sql/query/OracleXMLQuery
granting : execute on class oracle/xml/sql/query/OracleXMLStaticQuery$1 to
PUBLIC
resolving: class oracle/xml/sql/query/OracleXMLStaticQuery$1
synonym  : oracle/xml/sql/query/OracleXMLStaticQuery$1
granting : execute on class oracle/xml/sql/query/OracleXMLStaticQuery$MutableInt
to PUBLIC
skipping : class oracle/xml/sql/query/OracleXMLStaticQuery$MutableInt
synonym  : oracle/xml/sql/query/OracleXMLStaticQuery$MutableInt
granting : execute on class oracle/xml/sql/query/OracleXMLStaticQuery$QueryCtx
to PUBLIC
skipping : class oracle/xml/sql/query/OracleXMLStaticQuery$QueryCtx
synonym  : oracle/xml/sql/query/OracleXMLStaticQuery$QueryCtx
granting : execute on class oracle/xml/sql/query/OracleXMLStaticQuery to PUBLIC
skipping : class oracle/xml/sql/query/OracleXMLStaticQuery
synonym  : oracle/xml/sql/query/OracleXMLStaticQuery
granting : execute on class oracle/xml/sql/XSULocale to PUBLIC
skipping : class oracle/xml/sql/XSULocale
synonym  : oracle/xml/sql/XSULocale
granting : execute on class oracle/xml/sql/docgen/OracleXMLDocGenLob to PUBLIC
skipping : class oracle/xml/sql/docgen/OracleXMLDocGenLob
synonym  : oracle/xml/sql/docgen/OracleXMLDocGenLob
granting : execute on class oracle/xml/sql/dataset/OracleXMLDataSetJdbc to
PUBLIC
resolving: class oracle/xml/sql/dataset/OracleXMLDataSetJdbc
synonym  : oracle/xml/sql/dataset/OracleXMLDataSetJdbc
granting : execute on class OracleXML to PUBLIC
resolving: class OracleXML
synonym  : OracleXML
granting : execute on class OracleXMLStore to PUBLIC
resolving: class OracleXMLStore
synonym  : OracleXMLStore
granting : execute on resource META-INF/MANIFEST.MF to PUBLIC
skipping : resource META-INF/MANIFEST.MF
Classes Loaded: 36
Resources Loaded: 30
Sources Loaded: 0
Published Interfaces: 0
Classes generated: 0
Classes skipped: 0
Synonyms Created: 36
Errors: 0

Call completed.

SQL> 
SQL> -- Load the XSU PL/SQL packages, including grants and synonyms.
SQL> @@dbmsxsu.sql
SQL> Rem
SQL> Rem $Header: dbmsxsu.sql 03-oct-2005.12:03:08 mparthas Exp $
SQL> Rem
SQL> Rem dbmsxsu.sql
SQL> Rem
SQL> Rem Copyright (c) 2000, 2005, Oracle. All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      dbmsxsu.sql - create PL/SQL packages for XSU
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      <short description of component this file declares/defines>
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      <other useful comments, qualifications, etc.>
SQL> Rem
SQL> Rem MODIFIED (MM/DD/YY)
SQL> Rem mparthas  10/03/05 - 4640092: Add clearBindValues()
SQL> Rem rangrish  08/09/04 - add useDBDates to save
SQL> Rem mjaeger   01/26/04 - bug 1516368: query: check for invalid XML characters
SQL> Rem mjaeger   09/30/03 - bug 3015638: move XSU source from RDBMS vob to XDK
SQL> Rem mjaeger   09/18/03 - bug 3015638: copy from rdbms vob to xdk vob
SQL> Rem mjaeger   09/18/03 - Created in xdk vob for bug 3015638
SQL> Rem vnimani   03/08/02 - add resetResultSet
SQL> Rem vnimani   04/27/01 - fix bug 1731250 -- add setPreserveWhitespace
SQL> Rem vnimani   03/20/01 - bug 1629260 -- add setSQLToXMLNameEscaping
SQL> Rem vnimani   12/18/00 - fix 1390272: make dbms xmlgen & xmlquery compat.
SQL> Rem vnimani   10/23/00 - add suppor for XSLT parameters
SQL> Rem vnimani   10/18/00 - add xmlgen.getxml like call
SQL> Rem vnimani   10/16/00 - ora600-kgmexchi11 workaround: declare ALL methods
SQL> Rem vnimani   08/24/00 - revert to no encoding tag by default
SQL> Rem vnimani   08/04/00 - add support for XSLT in dbms_xmlsave
SQL> Rem vnimani   06/23/00 - caching to true in dbms_lob.createtemporary
SQL> Rem vnimani   06/21/00 - fix call to setDataHeader
SQL> Rem vnimani   06/13/00 - add xslt support
SQL> Rem vnimani   05/17/00 - Created
SQL> Rem
SQL> 
SQL> rem SET ECHO ON
SQL> rem SET FEEDBACK 1
SQL> rem SET NUMWIDTH 10
SQL> rem SET LINESIZE 80
SQL> rem SET TRIMSPOOL ON
SQL> rem SET TAB OFF
SQL> rem SET PAGESIZE 100
SQL> 
SQL> CREATE OR REPLACE PACKAGE DBMS_XMLQUERY AUTHID CURRENT_USER AS
  2  
  3    -- types
  4    SUBTYPE ctxType IS NUMBER;                                 /* context type */
  5    SUBTYPE ctxHandle IS NUMBER;
  6  
  7    DEFAULT_ROWSETTAG   CONSTANT VARCHAR2(6) := 'ROWSET';         /* rowsettag */
  8    DEFAULT_ERRORTAG    CONSTANT VARCHAR2(5) := 'ERROR';          /* error tag */
  9    DEFAULT_ROWIDATTR   CONSTANT VARCHAR2(3) := 'NUM';          /* Row ID attr */
 10    DEFAULT_ROWTAG      CONSTANT VARCHAR2(3) := 'ROW';               /* rowtag */
 11    DEFAULT_DATE_FORMAT CONSTANT VARCHAR2(21):= 'MM/dd/yyyy HH:mm:ss';
 12  
 13    ALL_ROWS            CONSTANT NUMBER      := -1;      /* NO MAX, render all */
 14  
 15    NONE                CONSTANT NUMBER      := 0;                  /* NO META */
 16    DTD                 CONSTANT NUMBER      := 1;               /* META = DTD */
 17    SCHEMA              CONSTANT NUMBER      := 2;            /* META = SCHEMA */
 18  
 19    LOWER_CASE          CONSTANT NUMBER      := 1;               /* LOWER case */
 20    UPPER_CASE          CONSTANT NUMBER      := 2;               /* UPPER case */
 21  
 22    -- used to signal that the DB encoding is to be used
 23    DB_ENCODING          CONSTANT VARCHAR2(1) := '_';
 24  
 25    ----------------------------- misc functions ------------------------------
 26    PROCEDURE getVersion;
 27  
 28    -------------------- constructor/destructor functions ---------------------
 29    FUNCTION newContext(sqlQuery IN VARCHAR2) RETURN ctxType;
 30    FUNCTION newContext(sqlQuery IN CLOB) RETURN ctxType;
 31    PROCEDURE closeContext(ctxHdl IN ctxType);
 32  
 33    -------------------- parameters to the XML generation engine ----------------
 34    PROCEDURE setRowsetTag(ctxHdl IN ctxType, tag IN VARCHAR2);
 35    PROCEDURE setRowTag(ctxHdl IN ctxType, tag IN VARCHAR2);
 36    PROCEDURE setErrorTag(ctxHdl IN ctxType, tag IN VARCHAR2);
 37  
 38    PROCEDURE setRowIdAttrName(ctxHdl IN ctxType, attrName IN VARCHAR2);
 39    PROCEDURE setRowIdAttrValue(ctxHdl IN ctxType, colName IN VARCHAR2);
 40    PROCEDURE setCollIdAttrName(ctxHdl IN ctxType, attrName IN VARCHAR2);
 41    PROCEDURE useTypeForCollElemTag(ctxHdl IN ctxType, flag IN BOOLEAN := true);
 42    PROCEDURE useNullAttributeIndicator(ctxHdl IN ctxType, flag IN BOOLEAN := true);
 43  
 44    PROCEDURE setSQLToXMLNameEscaping(ctxHdl IN ctxType, flag IN BOOLEAN := true);
 45    PROCEDURE setTagCase(ctxHdl IN ctxType, tCase IN NUMBER);
 46    PROCEDURE setDateFormat(ctxHdl IN ctxType, mask IN VARCHAR2);
 47  
 48    PROCEDURE setMaxRows (ctxHdl IN ctxType, rows IN NUMBER);
 49    PROCEDURE setSkipRows(ctxHdl IN ctxType, rows IN NUMBER);
 50  
 51    PROCEDURE setStylesheetHeader(ctxHdl IN ctxType, uri IN VARCHAR2, type IN VARCHAR2 := 'text/xsl');
 52    PROCEDURE setXSLT(ctxHdl IN ctxType,uri IN VARCHAR2,ref IN VARCHAR2 := null);
 53    PROCEDURE setXSLT(ctxHdl IN ctxType, stylesheet IN CLOB, ref IN VARCHAR2 := null);
 54    PROCEDURE setXSLTParam(ctxHdl IN ctxType,name IN VARCHAR2,value IN VARCHAR2);
 55    PROCEDURE removeXSLTParam(ctxHdl IN ctxType, name IN VARCHAR2);
 56  
 57    PROCEDURE setStrictLegalXMLCharCheck(ctxHdl IN ctxType, flag IN BOOLEAN := true);
 58  
 59    PROCEDURE setEncodingTag(ctxHdl IN ctxType, enc IN VARCHAR2 := DB_ENCODING);
 60  
 61    PROCEDURE setBindValue(ctxHdl IN ctxType, bindName IN VARCHAR2, bindValue IN VARCHAR2);
 62    PROCEDURE clearBindValues(ctxHdl IN ctxType);
 63  
 64    PROCEDURE setMetaHeader(ctxHdl IN ctxType, header IN CLOB := null);
 65    PROCEDURE setDataHeader(ctxHdl IN ctxType, header IN CLOB := null, tag IN VARCHAR2 := null);
 66  
 67    PROCEDURE setRaiseException(ctxHdl IN ctxType, flag IN BOOLEAN := true);
 68    PROCEDURE setRaiseNoRowsException(ctxHdl IN ctxType, flag IN BOOLEAN := true);
 69    PROCEDURE propagateOriginalException(ctxHdl IN ctxType, flag IN BOOLEAN := true);
 70    PROCEDURE getExceptionContent(ctxHdl IN ctxType, errNo OUT NUMBER, errMsg OUT VARCHAR2);
 71  
 72    ------------------- generation ----------------------------------------------
 73    FUNCTION  getDTD(ctxHdl IN ctxType, withVer IN BOOLEAN := false) RETURN CLOB;
 74    PROCEDURE getDTD(ctxHdl IN ctxType, xDoc IN CLOB, withVer IN BOOLEAN := false);
 75  
 76    FUNCTION  getXML(ctxHdl IN ctxType, metaType IN NUMBER := NONE) RETURN CLOB;
 77    PROCEDURE getXML(ctxHdl IN ctxType, xDoc IN CLOB, metaType IN NUMBER := NONE);
 78    FUNCTION  getXML(sqlQuery IN VARCHAR2, metaType IN NUMBER := NONE) RETURN CLOB;
 79    FUNCTION  getXML(sqlQuery IN CLOB, metaType IN NUMBER := NONE) RETURN CLOB;
 80  
 81    PROCEDURE resetResultSet(ctxHdl IN ctxType);
 82    FUNCTION  getNumRowsProcessed(ctxHdl IN ctxType) RETURN NUMBER;
 83  
 84    -------private method declarations------------------------------------------
 85    -- we must do this as a bug workaround; otherwise we get ora-600 [kgmexchi11]
 86    PROCEDURE p_useTypeForCollElemTag(ctxHdl IN ctxType, flag IN NUMBER);
 87    PROCEDURE p_useNullAttrInd(ctxHdl IN ctxType, flag IN NUMBER);
 88    PROCEDURE p_setSQLToXMLNameEsc(ctxHdl IN ctxType, flag IN NUMBER);
 89    PROCEDURE p_setStylesheetHeader(ctxHdl IN ctxType, uri IN VARCHAR2, type IN VARCHAR2);
 90    PROCEDURE p_setXSLT(ctxHdl IN ctxType, uri IN VARCHAR2, ref IN VARCHAR2);
 91    PROCEDURE p_setXSLT(ctxHdl IN ctxType, stylesheet IN CLOB, ref IN VARCHAR2);
 92    PROCEDURE p_setStrictLegalXMLCharCheck(ctxHdl IN ctxType, flag IN NUMBER);
 93    PROCEDURE p_setEncodingTag(ctxHdl IN ctxType, enc IN VARCHAR2);
 94    PROCEDURE p_setMetaHeader(ctxHdl IN ctxType, header IN CLOB);
 95    PROCEDURE p_setDataHeader(ctxHdl IN ctxType, header IN CLOB,tag IN VARCHAR2);
 96    PROCEDURE p_setRaiseException(ctxHdl IN ctxType, flag IN NUMBER);
 97    PROCEDURE p_setRaiseNoRowsExc(ctxHdl IN ctxType, flag IN NUMBER);
 98    PROCEDURE p_propOrigExc(ctxHdl IN ctxType, flag IN NUMBER);
 99    PROCEDURE p_getDTD(ctxHdl IN ctxType, xDoc IN CLOB, withVer IN NUMBER);
100    PROCEDURE p_getXML(ctxHdl IN ctxType, xDoc IN CLOB, metaType IN NUMBER);
101  
102  END dbms_xmlquery;
103  /

Package created.

SQL> show errors;
No errors.
SQL> 
SQL> CREATE OR REPLACE PACKAGE BODY DBMS_XMLQUERY AS
  2  
  3    procedure getVersion IS
  4    begin
  5      DBMS_OUTPUT.PUT_LINE(CHR(0));
  6      DBMS_OUTPUT.PUT_LINE(CHR(0));
  7      DBMS_OUTPUT.PUT_LINE('XSU Version                ' ||
  8                           'Owner         Timestamp');
  9      DBMS_OUTPUT.PUT_LINE('-------------------------- ' ||
 10                           '------------- ----------------');
 11  
 12      FOR i IN (select object_name, owner, timestamp
 13                from all_objects
 14                where object_name like '%XSU%VERSION%')
 15      LOOP
 16        DBMS_OUTPUT.PUT_LINE(RPAD(i.object_name,27) ||
 17                             RPAD(i.owner,14) || SUBSTR(i.timestamp,1,16));
 18      END LOOP;
 19        DBMS_OUTPUT.NEW_LINE;
 20    end getVersion;
 21  
 22    FUNCTION newContext(sqlQuery IN VARCHAR2) return ctxType
 23    as LANGUAGE JAVA NAME
 24     'oracle.xml.sql.query.OracleXMLStaticQuery.newContext(java.lang.String) return int';
 25  
 26    FUNCTION newContext(sqlQuery IN CLOB) return ctxType
 27    as LANGUAGE JAVA NAME
 28     'oracle.xml.sql.query.OracleXMLStaticQuery.newContext(oracle.sql.CLOB) return int';
 29  
 30    PROCEDURE closeContext(ctxHdl IN ctxType)
 31    as LANGUAGE JAVA NAME
 32     'oracle.xml.sql.query.OracleXMLStaticQuery.closeContext(int)';
 33  
 34    PROCEDURE setRowsetTag(ctxHdl IN ctxType, tag IN VARCHAR2)
 35    as LANGUAGE JAVA NAME
 36     'oracle.xml.sql.query.OracleXMLStaticQuery.setRowsetTag(int, java.lang.String)';
 37  
 38    PROCEDURE setRowTag(ctxHdl IN ctxType, tag IN VARCHAR2)
 39    as LANGUAGE JAVA NAME
 40     'oracle.xml.sql.query.OracleXMLStaticQuery.setRowTag(int, java.lang.String)';
 41  
 42    PROCEDURE setErrorTag(ctxHdl IN ctxType, tag IN VARCHAR2)
 43    as LANGUAGE JAVA NAME
 44     'oracle.xml.sql.query.OracleXMLStaticQuery.setErrorTag(int, java.lang.String)';
 45  
 46    PROCEDURE setRowIdAttrName(ctxHdl IN ctxType, attrName IN VARCHAR2)
 47    as LANGUAGE JAVA NAME
 48     'oracle.xml.sql.query.OracleXMLStaticQuery.setRowIdAttrName(int, java.lang.String)';
 49  
 50    PROCEDURE setRowIdAttrValue(ctxHdl IN ctxType, colName IN VARCHAR2)
 51    as LANGUAGE JAVA NAME
 52     'oracle.xml.sql.query.OracleXMLStaticQuery.setRowIdAttrValue(int, java.lang.String)';
 53  
 54  
 55    PROCEDURE setCollIdAttrName(ctxHdl IN ctxType, attrName IN VARCHAR2)
 56    as LANGUAGE JAVA NAME
 57     'oracle.xml.sql.query.OracleXMLStaticQuery.setCollIdAttrName(int, java.lang.String)';
 58  
 59  
 60    PROCEDURE p_useTypeForCollElemTag(ctxHdl IN ctxType, flag IN NUMBER)
 61    as LANGUAGE JAVA NAME
 62     'oracle.xml.sql.query.OracleXMLStaticQuery.useTypeForCollElemTag(int,byte)';
 63  
 64    PROCEDURE useTypeForCollElemTag(ctxHdl IN ctxType, flag IN BOOLEAN := true) is
 65    begin
 66      if flag = true then
 67        p_useTypeForCollElemTag(ctxHdl, 1);
 68      else
 69        p_useTypeForCollElemTag(ctxHdl, 0);
 70      end if;
 71    end useTypeForCollElemTag;
 72  
 73  
 74    PROCEDURE p_useNullAttrInd(ctxHdl IN ctxType, flag IN NUMBER)
 75    as LANGUAGE JAVA NAME
 76     'oracle.xml.sql.query.OracleXMLStaticQuery.useNullAttributeIndicator(int, byte)';
 77  
 78    PROCEDURE useNullAttributeIndicator(ctxHdl IN ctxType, flag IN BOOLEAN := true) is
 79    begin
 80      if flag = true then
 81        p_useNullAttrInd(ctxHdl, 1);
 82      else
 83        p_useNullAttrInd(ctxHdl, 0);
 84      end if;
 85    end useNullAttributeIndicator;
 86  
 87    PROCEDURE p_setSQLToXMLNameEsc(ctxHdl IN ctxType, flag IN NUMBER)
 88    as LANGUAGE JAVA NAME
 89     'oracle.xml.sql.query.OracleXMLStaticQuery.setSQLToXMLNameEscaping(int, byte)';
 90  
 91    PROCEDURE setSQLToXMLNameEscaping(ctxHdl IN ctxType, flag IN BOOLEAN := true) is
 92    begin
 93      if flag = true then
 94        p_setSQLToXMLNameEsc(ctxHdl, 1);
 95      else
 96        p_setSQLToXMLNameEsc(ctxHdl, 0);
 97      end if;
 98    end setSQLToXMLNameEscaping;
 99  
100    PROCEDURE setTagCase(ctxHdl IN ctxType, tCase IN NUMBER)
101    as LANGUAGE JAVA NAME
102     'oracle.xml.sql.query.OracleXMLStaticQuery.setTagCase(int, byte)';
103  
104  
105    PROCEDURE setDateFormat(ctxHdl IN ctxType, mask IN VARCHAR2)
106    as LANGUAGE JAVA NAME
107     'oracle.xml.sql.query.OracleXMLStaticQuery.setDateFormat(int, java.lang.String)';
108  
109  
110    PROCEDURE setMaxRows (ctxHdl IN ctxType, rows IN NUMBER)
111    as LANGUAGE JAVA NAME
112     'oracle.xml.sql.query.OracleXMLStaticQuery.setMaxRows(int, int)';
113  
114  
115    PROCEDURE setSkipRows(ctxHdl IN ctxType, rows IN NUMBER)
116    as LANGUAGE JAVA NAME
117     'oracle.xml.sql.query.OracleXMLStaticQuery.setSkipRows(int, int)';
118  
119  
120    PROCEDURE p_setStylesheetHeader(ctxHdl IN ctxType, uri IN VARCHAR2, type IN VARCHAR2)
121    as LANGUAGE JAVA NAME
122     'oracle.xml.sql.query.OracleXMLStaticQuery.setStylesheetHeader(int, java.lang.String, java.lang.String)';
123  
124    PROCEDURE setStylesheetHeader(ctxHdl IN ctxType, uri IN VARCHAR2, type IN VARCHAR2 := 'text/xsl') is
125    begin
126      p_setStylesheetHeader(ctxHdl, uri, type);
127    end setStylesheetHeader;
128  
129  
130    PROCEDURE p_setXSLT(ctxHdl IN ctxType, uri IN VARCHAR2, ref IN VARCHAR2)
131    as LANGUAGE JAVA NAME
132     'oracle.xml.sql.query.OracleXMLStaticQuery.setXSLT(int, java.lang.String, java.lang.String)';
133  
134    PROCEDURE setXSLT(ctxHdl IN ctxType, uri IN VARCHAR2, ref IN VARCHAR2 := null) IS
135    begin
136      p_setXSLT(ctxHdl, uri, ref);
137    end setXSLT;
138  
139    PROCEDURE p_setXSLT(ctxHdl IN ctxType, stylesheet IN CLOB, ref IN VARCHAR2)
140    as LANGUAGE JAVA NAME
141     'oracle.xml.sql.query.OracleXMLStaticQuery.setXSLT(int, oracle.sql.CLOB, java.lang.String)';
142  
143    PROCEDURE setXSLT(ctxHdl IN ctxType, stylesheet IN CLOB, ref IN VARCHAR2 := null) IS
144    begin
145      p_setXSLT(ctxHdl, stylesheet, ref);
146    end setXSLT;
147  
148    PROCEDURE setXSLTParam(ctxHdl IN ctxType, name IN VARCHAR2,value IN VARCHAR2)
149    as LANGUAGE JAVA NAME
150     'oracle.xml.sql.query.OracleXMLStaticQuery.setXSLTParam(int, java.lang.String, java.lang.String)';
151  
152    PROCEDURE removeXSLTParam(ctxHdl IN ctxType, name IN VARCHAR2)
153    as LANGUAGE JAVA NAME
154     'oracle.xml.sql.query.OracleXMLStaticQuery.removeXSLTParam(int, java.lang.String)';
155  
156    PROCEDURE p_setEncodingTag(ctxHdl IN ctxType, enc IN VARCHAR2)
157    as LANGUAGE JAVA NAME
158     'oracle.xml.sql.query.OracleXMLStaticQuery.setEncodingTag(int, java.lang.String)';
159  
160    PROCEDURE setEncodingTag(ctxHdl IN ctxType,enc IN VARCHAR2 := DB_ENCODING) is
161    begin
162      p_setEncodingTag(ctxHdl, enc);
163    end setEncodingTag;
164  
165    PROCEDURE setBindValue(ctxHdl IN ctxType, bindName IN VARCHAR2, bindValue IN VARCHAR2)
166    as LANGUAGE JAVA NAME
167     'oracle.xml.sql.query.OracleXMLStaticQuery.setBindValue(int, java.lang.String, java.lang.String)';
168  
169  
170    PROCEDURE clearBindValues(ctxHdl IN ctxType)
171    as LANGUAGE JAVA NAME
172     'oracle.xml.sql.query.OracleXMLStaticQuery.clearBindValues(int)';
173  
174    PROCEDURE p_setMetaHeader(ctxHdl IN ctxType, header IN CLOB)
175    as LANGUAGE JAVA NAME
176     'oracle.xml.sql.query.OracleXMLStaticQuery.setMetaHeader(int, oracle.sql.CLOB)';
177  
178    PROCEDURE setMetaHeader(ctxHdl IN ctxType, header IN CLOB := null) IS
179    begin
180      p_setMetaHeader(ctxHdl, header);
181    end setMetaHeader;
182  
183    PROCEDURE p_setDataHeader(ctxHdl IN ctxType, header IN CLOB, tag IN VARCHAR2)
184    as LANGUAGE JAVA NAME
185     'oracle.xml.sql.query.OracleXMLStaticQuery.setDataHeader(int, oracle.sql.CLOB, java.lang.String)';
186  
187    PROCEDURE setDataHeader(ctxHdl IN ctxType, header IN CLOB := null, tag IN VARCHAR2 := null) is
188    begin
189      p_setDataHeader(ctxHdl, header, tag);
190    end setDataHeader;
191  
192  
193    PROCEDURE p_setRaiseException(ctxHdl IN ctxType, flag IN NUMBER)
194    as LANGUAGE JAVA NAME
195     'oracle.xml.sql.query.OracleXMLStaticQuery.setRaiseException(int, byte)';
196  
197    PROCEDURE setRaiseException(ctxHdl IN ctxType, flag IN BOOLEAN := true) is
198    begin
199      if flag = true then
200        p_setRaiseException(ctxHdl, 1);
201      else
202        p_setRaiseException(ctxHdl, 0);
203      end if;
204    end setRaiseException;
205  
206    PROCEDURE p_setRaiseNoRowsExc(ctxHdl IN ctxType, flag IN NUMBER)
207    as LANGUAGE JAVA NAME
208     'oracle.xml.sql.query.OracleXMLStaticQuery.setRaiseNoRowsException(int, byte)';
209  
210    PROCEDURE setRaiseNoRowsException(ctxHdl IN ctxType, flag IN BOOLEAN := true) is
211    begin
212      if flag = true then
213        p_setRaiseNoRowsExc(ctxHdl, 1);
214      else
215        p_setRaiseNoRowsExc(ctxHdl, 0);
216      end if;
217    end setRaiseNoRowsException;
218  
219    PROCEDURE p_propOrigExc(ctxHdl IN ctxType, flag IN NUMBER)
220    as LANGUAGE JAVA NAME
221     'oracle.xml.sql.query.OracleXMLStaticQuery.propagateOriginalException(int, byte)';
222  
223    PROCEDURE propagateOriginalException(ctxHdl IN ctxType, flag IN BOOLEAN := true) is
224    begin
225      if flag = true then
226        p_propOrigExc(ctxHdl, 1);
227      else
228        p_propOrigExc(ctxHdl, 0);
229      end if;
230    end propagateOriginalException;
231  
232    PROCEDURE getExceptionContent(ctxHdl IN ctxType, errNo OUT NUMBER, errMsg OUT VARCHAR2)
233    as LANGUAGE JAVA NAME
234     'oracle.xml.sql.query.OracleXMLStaticQuery.getExceptionContent(int, int[], java.lang.String[])';
235  
236    PROCEDURE p_setStrictLegalXMLCharCheck(ctxHdl IN ctxType, flag IN NUMBER)
237    as LANGUAGE JAVA NAME
238     'oracle.xml.sql.query.OracleXMLStaticQuery.setStrictLegalXMLCharCheck(int, byte)';
239  
240    PROCEDURE setStrictLegalXMLCharCheck(ctxHdl IN ctxType, flag IN BOOLEAN := true) is
241    begin
242      if flag = true then
243        p_setStrictLegalXMLCharCheck(ctxHdl, 1);
244      else
245        p_setStrictLegalXMLCharCheck(ctxHdl, 0);
246      end if;
247    end setStrictLegalXMLCharCheck;
248  
249    ------------------- generation ----------------------------------------------
250    FUNCTION getDTD(ctxHdl IN ctxType, withVer IN BOOLEAN := false) RETURN CLOB IS
251      clb CLOB;
252    begin
253      dbms_lob.createtemporary(clb, true, DBMS_LOB.SESSION);
254      getDTD(ctxHdl, clb, withVer);
255      return clb;
256    end getDTD;
257  
258    PROCEDURE p_getDTD(ctxHdl IN ctxType, xDoc IN CLOB, withVer IN NUMBER)
259    as LANGUAGE JAVA NAME
260     'oracle.xml.sql.query.OracleXMLStaticQuery.getDTD(int, oracle.sql.CLOB, byte)';
261  
262    PROCEDURE getDTD(ctxHdl IN ctxType, xDoc IN CLOB, withVer IN BOOLEAN := false) IS
263    begin
264      if withVer = true then
265        p_getDTD(ctxHdl, xDoc, 1);
266      else
267        p_getDTD(ctxHdl, xDoc, 0);
268      end if;
269    end getDTD;
270  
271  
272    FUNCTION getXML(ctxHdl IN ctxType, metaType IN NUMBER := NONE) RETURN CLOB IS
273      clb CLOB;
274    begin
275      dbms_lob.createtemporary(clb, true, DBMS_LOB.SESSION);
276      getXML(ctxHdl, clb, metaType);
277      return clb;
278    end getXML;
279  
280    PROCEDURE p_getXML(ctxHdl IN ctxType, xDoc IN CLOB, metaType IN NUMBER)
281    as LANGUAGE JAVA NAME
282     'oracle.xml.sql.query.OracleXMLStaticQuery.getXML(int, oracle.sql.CLOB, byte)';
283  
284    PROCEDURE getXML(ctxHdl IN ctxType, xDoc IN CLOB, metaType IN NUMBER := NONE) IS
285    begin
286      p_getXML(ctxHdl, xDoc, metaType);
287    end getXML;
288  
289    FUNCTION getXML(sqlQuery IN VARCHAR2, metaType IN NUMBER := NONE) RETURN CLOB IS
290      ctx    ctxType;
291      clb    CLOB;
292    begin
293      ctx := newContext(sqlQuery);
294      clb := getXML(ctx, metaType);
295      closeContext(ctx);
296      return clb;
297    end getXML;
298  
299    FUNCTION getXML(sqlQuery IN CLOB, metaType IN NUMBER := NONE) RETURN CLOB IS
300      ctx    ctxType;
301      clb    CLOB;
302    begin
303      ctx := newContext(sqlQuery);
304      clb := getXML(ctx, metaType);
305      closeContext(ctx);
306      return clb;
307    end getXML;
308  
309  
310    PROCEDURE resetResultSet(ctxHdl IN ctxType)
311    as LANGUAGE JAVA NAME
312     'oracle.xml.sql.query.OracleXMLStaticQuery.resetResultSet(int)';
313  
314  
315    FUNCTION getNumRowsProcessed(ctxHdl IN ctxType) RETURN NUMBER
316    as LANGUAGE JAVA NAME
317     'oracle.xml.sql.query.OracleXMLStaticQuery.getNumRowsProcessed(int) return long';
318  
319  
320  END DBMS_XMLQUERY;
321  /

Package body created.

SQL> show errors;
No errors.
SQL> 
SQL> 
SQL> 
SQL> --=============================================================================
SQL> --=============================================================================
SQL> --=============================================================================
SQL> --=============================================================================
SQL> CREATE OR REPLACE PACKAGE DBMS_XMLSAVE AUTHID CURRENT_USER AS
  2  
  3    SUBTYPE ctxType IS NUMBER;                                 /* context type */
  4  
  5    DEFAULT_ROWTAG      CONSTANT VARCHAR2(3) := 'ROW';               /* rowtag */
  6    DEFAULT_DATE_FORMAT CONSTANT VARCHAR2(21):= 'YYYY-MM-DD HH24:MI:SS';
  7  
  8    MATCH_CASE          CONSTANT NUMBER      := 0;               /* match case */
  9    IGNORE_CASE         CONSTANT NUMBER      := 1;             /* ignore case */
 10  
 11  
 12    -------------------- constructor/destructor functions ---------------------
 13    FUNCTION newContext(targetTable IN VARCHAR2) RETURN ctxType;
 14    PROCEDURE closeContext(ctxHdl IN ctxType);
 15  
 16    -------------------- parameters to the save (XMLtoDB) engine ----------------
 17    PROCEDURE setXSLT(ctxHdl IN ctxType,uri IN VARCHAR2,ref IN VARCHAR2 := null);
 18    PROCEDURE setXSLT(ctxHdl IN ctxType, stylesheet IN CLOB, ref IN VARCHAR2 := null);
 19    PROCEDURE setXSLTParam(ctxHdl IN ctxType,name IN VARCHAR2,value IN VARCHAR2);
 20    PROCEDURE removeXSLTParam(ctxHdl IN ctxType, name IN VARCHAR2);
 21  
 22    PROCEDURE setRowTag(ctxHdl IN ctxType, tag IN VARCHAR2);
 23    PROCEDURE setSQLToXMLNameEscaping(ctxHdl IN ctxType, flag IN BOOLEAN := true);
 24    PROCEDURE setPreserveWhitespace(ctxHdl IN ctxType, flag IN BOOLEAN := true);
 25    PROCEDURE setIgnoreCase(ctxHdl IN ctxType, flag IN NUMBER);
 26  
 27    PROCEDURE setDateFormat(ctxHdl IN ctxType, mask IN VARCHAR2);
 28  
 29    PROCEDURE setBatchSize(ctxHdl IN ctxType, batchSize IN NUMBER);
 30    PROCEDURE setCommitBatch(ctxHdl IN ctxType, batchSize IN NUMBER);
 31  
 32    -- set the columns to update. Relevant for insert and update routines..
 33    PROCEDURE setUpdateColumn(ctxHdl IN ctxType, colName IN VARCHAR2);
 34    PROCEDURE clearUpdateColumnList(ctxHdl IN ctxType);
 35  
 36    -- set the key column name to be used for updates and deletes.
 37    PROCEDURE setKeyColumn(ctxHdl IN ctxType, colName IN VARCHAR2);
 38    PROCEDURE clearKeyColumnList(ctxHdl IN ctxType);
 39  
 40    ------------------- save ----------------------------------------------------
 41    -- insertXML
 42    FUNCTION  insertXML(ctxHdl IN ctxType, xDoc IN VARCHAR2) RETURN NUMBER;
 43    FUNCTION  insertXML(ctxHdl IN ctxType, xDoc IN CLOB) RETURN NUMBER;
 44    -- updateXML
 45    FUNCTION  updateXML(ctxHdl IN ctxType, xDoc IN VARCHAR2) RETURN NUMBER;
 46    FUNCTION  updateXML(ctxHdl IN ctxType, xDoc IN CLOB) RETURN NUMBER;
 47    -- deleteXML
 48    FUNCTION  deleteXML(ctxHdl IN ctxType, xDoc IN VARCHAR2) RETURN NUMBER;
 49    FUNCTION  deleteXML(ctxHdl IN ctxType, xDoc IN CLOB) RETURN NUMBER;
 50  
 51    ------------------- misc ----------------------------------------------------
 52    PROCEDURE propagateOriginalException(ctxHdl IN ctxType, flag IN BOOLEAN);
 53    PROCEDURE getExceptionContent(ctxHdl IN ctxType, errNo OUT NUMBER, errMsg OUT VARCHAR2);
 54    PROCEDURE useDBDates(ctxHdl IN ctxType, flag IN BOOLEAN := true);
 55  
 56    -------private method declarations------------------------------------------
 57    -- we must do this as a bug workaround; otherwise we get ora-600 [kgmexchi11]
 58    PROCEDURE p_useDBDates(ctxHdl IN ctxType, flag IN NUMBER);
 59    PROCEDURE p_setXSLT(ctxHdl IN ctxType, uri IN VARCHAR2, ref IN VARCHAR2);
 60    PROCEDURE p_setXSLT(ctxHdl IN ctxType, stylesheet CLOB, ref IN VARCHAR2);
 61    PROCEDURE p_propagateOriginalException(ctxHdl IN ctxType, flag IN NUMBER);
 62    PROCEDURE p_setSQLToXMLNameEsc(ctxHdl IN ctxType, flag IN NUMBER);
 63    PROCEDURE p_setPreserveWhitespace(ctxHdl IN ctxType, flag IN NUMBER);
 64  
 65  END dbms_xmlsave;
 66  /

Package created.

SQL> show errors;
No errors.
SQL> 
SQL> 
SQL> CREATE OR REPLACE PACKAGE BODY DBMS_XMLSAVE AS
  2  
  3    FUNCTION newContext(targetTable IN VARCHAR2) RETURN ctxType
  4    as LANGUAGE JAVA NAME
  5     'oracle.xml.sql.dml.OracleXMLStaticSave.newContext(java.lang.String) return int';
  6  
  7    PROCEDURE closeContext(ctxHdl IN ctxType)
  8    as LANGUAGE JAVA NAME
  9     'oracle.xml.sql.dml.OracleXMLStaticSave.closeContext(int)';
 10  
 11  
 12    PROCEDURE p_setXSLT(ctxHdl IN ctxType, uri IN VARCHAR2, ref IN VARCHAR2)
 13    as LANGUAGE JAVA NAME
 14     'oracle.xml.sql.dml.OracleXMLStaticSave.setXSLT(int, java.lang.String, java.lang.String)';
 15  
 16    PROCEDURE setXSLT(ctxHdl IN ctxType, uri IN VARCHAR2, ref IN VARCHAR2 := null) IS
 17    begin
 18      p_setXSLT(ctxHdl, uri, ref);
 19    end setXSLT;
 20  
 21    PROCEDURE p_setXSLT(ctxHdl IN ctxType, stylesheet IN CLOB, ref IN VARCHAR2)
 22    as LANGUAGE JAVA NAME
 23     'oracle.xml.sql.dml.OracleXMLStaticSave.setXSLT(int, oracle.sql.CLOB, java.lang.String)';
 24  
 25    PROCEDURE setXSLT(ctxHdl IN ctxType, stylesheet IN CLOB, ref IN VARCHAR2 := null) IS
 26    begin
 27      p_setXSLT(ctxHdl, stylesheet, ref);
 28    end setXSLT;
 29  
 30    PROCEDURE setXSLTParam(ctxHdl IN ctxType, name IN VARCHAR2,value IN VARCHAR2)
 31    as LANGUAGE JAVA NAME
 32     'oracle.xml.sql.dml.OracleXMLStaticSave.setXSLTParam(int, java.lang.String, java.lang.String)';
 33  
 34    PROCEDURE removeXSLTParam(ctxHdl IN ctxType, name IN VARCHAR2)
 35    as LANGUAGE JAVA NAME
 36     'oracle.xml.sql.dml.OracleXMLStaticSave.removeXSLTParam(int, java.lang.String)';
 37  
 38  
 39    PROCEDURE setRowTag(ctxHdl IN ctxType, tag IN VARCHAR2)
 40    as LANGUAGE JAVA NAME
 41     'oracle.xml.sql.dml.OracleXMLStaticSave.setRowTag(int, java.lang.String)';
 42  
 43  
 44    PROCEDURE p_setSQLToXMLNameEsc(ctxHdl IN ctxType, flag IN NUMBER)
 45    as LANGUAGE JAVA NAME
 46     'oracle.xml.sql.dml.OracleXMLStaticSave.setSQLToXMLNameEscaping(int, byte)';
 47  
 48    PROCEDURE setSQLToXMLNameEscaping(ctxHdl IN ctxType, flag IN BOOLEAN := true ) is
 49    begin
 50      if flag = true then
 51        p_setSQLToXMLNameEsc(ctxHdl, 1);
 52      else
 53        p_setSQLToXMLNameEsc(ctxHdl, 0);
 54      end if;
 55    end setSQLToXMLNameEscaping;
 56  
 57    PROCEDURE p_setPreserveWhitespace(ctxHdl IN ctxType, flag IN NUMBER)
 58    as LANGUAGE JAVA NAME
 59     'oracle.xml.sql.dml.OracleXMLStaticSave.setPreserveWhitespace(int, byte)';
 60  
 61    PROCEDURE setPreserveWhitespace(ctxHdl IN ctxType,flag IN BOOLEAN := true) is
 62    begin
 63      if flag = true then
 64        p_setPreserveWhitespace(ctxHdl, 1);
 65      else
 66        p_setPreserveWhitespace(ctxHdl, 0);
 67      end if;
 68    end setPreserveWhitespace;
 69  
 70    PROCEDURE setIgnoreCase(ctxHdl IN ctxType, flag IN NUMBER)
 71    as LANGUAGE JAVA NAME
 72     'oracle.xml.sql.dml.OracleXMLStaticSave.setIgnoreCase(int, byte)';
 73  
 74  
 75    PROCEDURE setDateFormat(ctxHdl IN ctxType, mask IN VARCHAR2)
 76    as LANGUAGE JAVA NAME
 77     'oracle.xml.sql.dml.OracleXMLStaticSave.setDateFormat(int, java.lang.String)';
 78  
 79  
 80    PROCEDURE setBatchSize(ctxHdl IN ctxType, batchSize IN NUMBER)
 81    as LANGUAGE JAVA NAME
 82     'oracle.xml.sql.dml.OracleXMLStaticSave.setBatchSize(int, int)';
 83  
 84  
 85    PROCEDURE setCommitBatch(ctxHdl IN ctxType, batchSize IN NUMBER)
 86    as LANGUAGE JAVA NAME
 87     'oracle.xml.sql.dml.OracleXMLStaticSave.setCommitBatch(int, int)';
 88  
 89  
 90    PROCEDURE setUpdateColumn(ctxHdl IN ctxType, colName IN VARCHAR2)
 91    as LANGUAGE JAVA NAME
 92     'oracle.xml.sql.dml.OracleXMLStaticSave.setUpdateColumn(int, java.lang.String)';
 93  
 94  
 95    PROCEDURE clearUpdateColumnList(ctxHdl IN ctxType)
 96    as LANGUAGE JAVA NAME
 97     'oracle.xml.sql.dml.OracleXMLStaticSave.clearUpdateColumnList(int)';
 98  
 99  
100    PROCEDURE setKeyColumn(ctxHdl IN ctxType, colName IN VARCHAR2)
101    as LANGUAGE JAVA NAME
102     'oracle.xml.sql.dml.OracleXMLStaticSave.setKeyColumn(int, java.lang.String)';
103  
104  
105    PROCEDURE clearKeyColumnList(ctxHdl IN ctxType)
106    as LANGUAGE JAVA NAME
107     'oracle.xml.sql.dml.OracleXMLStaticSave.clearKeyColumnList(int)';
108  
109  
110    ------------------- save ----------------------------------------------------
111    FUNCTION  insertXML(ctxHdl IN ctxType, xDoc IN VARCHAR2) RETURN NUMBER
112    as LANGUAGE JAVA NAME
113     'oracle.xml.sql.dml.OracleXMLStaticSave.insertXML(int, java.lang.String) return int';
114  
115    FUNCTION  insertXML(ctxHdl IN ctxType, xDoc IN CLOB) RETURN NUMBER
116    as LANGUAGE JAVA NAME
117     'oracle.xml.sql.dml.OracleXMLStaticSave.insertXML(int, oracle.sql.CLOB) return int';
118  
119  
120    FUNCTION  updateXML(ctxHdl IN ctxType, xDoc IN VARCHAR2) RETURN NUMBER
121    as LANGUAGE JAVA NAME
122     'oracle.xml.sql.dml.OracleXMLStaticSave.updateXML(int, java.lang.String) return int';
123  
124    FUNCTION  updateXML(ctxHdl IN ctxType, xDoc IN CLOB) RETURN NUMBER
125    as LANGUAGE JAVA NAME
126     'oracle.xml.sql.dml.OracleXMLStaticSave.updateXML(int, oracle.sql.CLOB) return int';
127  
128  
129    FUNCTION  deleteXML(ctxHdl IN ctxType, xDoc IN VARCHAR2) RETURN NUMBER
130    as LANGUAGE JAVA NAME
131     'oracle.xml.sql.dml.OracleXMLStaticSave.deleteXML(int, java.lang.String) return int';
132  
133    FUNCTION  deleteXML(ctxHdl IN ctxType, xDoc IN CLOB) RETURN NUMBER
134    as LANGUAGE JAVA NAME
135     'oracle.xml.sql.dml.OracleXMLStaticSave.deleteXML(int, oracle.sql.CLOB) return int';
136  
137  
138    ------------------- misc ----------------------------------------------------
139    PROCEDURE p_propagateOriginalException(ctxHdl IN ctxType, flag IN NUMBER)
140    as LANGUAGE JAVA NAME
141     'oracle.xml.sql.dml.OracleXMLStaticSave.propagateOriginalException(int, byte)';
142  
143    PROCEDURE propagateOriginalException(ctxHdl IN ctxType, flag IN BOOLEAN) is
144    begin
145      if flag = true then
146        p_propagateOriginalException(ctxHdl, 1);
147      else
148        p_propagateOriginalException(ctxHdl, 0);
149      end if;
150    end propagateOriginalException;
151  
152    PROCEDURE getExceptionContent(ctxHdl IN ctxType, errNo OUT NUMBER, errMsg OUT VARCHAR2)
153    as LANGUAGE JAVA NAME
154     'oracle.xml.sql.dml.OracleXMLStaticSave.getExceptionContent(int, int[], java.lang.String[])';
155  
156    PROCEDURE p_useDBDates(ctxHdl IN ctxType, flag IN NUMBER)
157    as LANGUAGE JAVA NAME
158     'oracle.xml.sql.dml.OracleXMLStaticSave.useDBDates(int, byte)';
159  
160    PROCEDURE useDBDates(ctxHdl IN ctxType, flag IN BOOLEAN := true) is
161    begin
162      if flag = true then
163        p_useDBDates(ctxHdl, 1);
164      else
165        p_useDBDates(ctxHdl, 0);
166      end if;
167    end useDBDates;
168  
169  END DBMS_XMLSAVE;
170  /

Package body created.

SQL> show errors;
No errors.
SQL> 
SQL> --=============================================================================
SQL> GRANT EXECUTE ON DBMS_XMLQUERY TO PUBLIC;

Grant succeeded.

SQL> GRANT EXECUTE ON DBMS_XMLSAVE  TO PUBLIC;

Grant succeeded.

SQL> 
SQL> create or replace public synonym dbms_xmlquery for dbms_xmlquery;

Synonym created.

SQL> create or replace public synonym dbms_xmlsave  for dbms_xmlsave;

Synonym created.

SQL> 
SQL> 
SQL> -- Load XQuery.
SQL> CALL xdk_load_jar('-force jlib/xquery.jar');
arguments: '-kprb' '-verbose' '-resolve' '-grant' 'PUBLIC' '-synonym' '-install'
'-force' 'jlib/xquery.jar'
creating : class oracle/xquery/parser/Attribute
creating : class oracle/xquery/parser/AttributeList
creating : class oracle/xquery/parser/CopyClause
creating : class oracle/xquery/parser/Expr
creating : class oracle/xquery/parser/ExprSingle
creating : class oracle/xquery/parser/FLWORExpr
creating : class oracle/xquery/parser/ForClause
creating : class oracle/xquery/parser/FunctionDefn
creating : class oracle/xquery/parser/IfExpr
creating : class oracle/xquery/parser/JJTXPathState
creating : class oracle/xquery/parser/JavaCharStream
creating : class oracle/xquery/parser/LetClause
creating : class oracle/xquery/parser/ModuleDecl
creating : class oracle/xquery/parser/NamedSplNode
creating : class oracle/xquery/parser/Namespace
creating : class oracle/xquery/parser/Node
creating : class oracle/xquery/parser/Param
creating : class oracle/xquery/parser/ParseException
creating : class oracle/xquery/parser/ParserUtil
creating : class oracle/xquery/parser/PrimaryExpr
creating : class oracle/xquery/parser/Qname
creating : class oracle/xquery/parser/QuantifiedExpr
creating : class oracle/xquery/parser/RelativePathExpr
creating : class oracle/xquery/parser/SimpleNode
creating : class oracle/xquery/parser/SplNode
creating : class oracle/xquery/parser/Token
creating : class oracle/xquery/parser/TokenMgrError
creating : class oracle/xquery/parser/TransformExpr
creating : class oracle/xquery/parser/VarExpr
creating : class oracle/xquery/parser/XPath
creating : class oracle/xquery/parser/XPathConstants
creating : class oracle/xquery/parser/XPathStringValue
creating : class oracle/xquery/parser/XPathTokenManager
creating : class oracle/xquery/parser/XPathTreeConstants
creating : class oracle/xquery/parser/XQXGen
creating : class oracle/xquery/parser/XQueryXUtils
creating : class oracle/xquery/func/FunctionDefn
creating : class oracle/xquery/func/FunctionId
creating : class oracle/xquery/func/OXMLFunctionLibrary
creating : class oracle/xquery/func/OraContains
creating : class oracle/xquery/func/OraFunctionLibrary$Key
creating : class oracle/xquery/func/OraFunctionLibrary
creating : class oracle/xquery/func/OraInstanceOfOnly
creating : class oracle/xquery/func/OraMatches
creating : class oracle/xquery/func/OraPath
creating : class oracle/xquery/func/OraReplace
creating : class oracle/xquery/func/OraServerFunctions
creating : class oracle/xquery/func/OraVersion
creating : class oracle/xquery/func/XQueryFuncLibrary
creating : class oracle/xquery/comp/CompStack
creating : class oracle/xquery/comp/CompState
creating : class oracle/xquery/comp/DefaultURIResolver
creating : class oracle/xquery/comp/FnCallResolver
creating : class oracle/xquery/comp/HashStack
creating : class oracle/xquery/comp/ImportDecl
creating : class oracle/xquery/comp/LibraryModule
creating : class oracle/xquery/comp/ModuleHandler
creating : class oracle/xquery/comp/PageBuf
creating : class oracle/xquery/comp/QueryMgr$ExprInfo
creating : class oracle/xquery/comp/QueryMgr$NodeInfo
creating : class oracle/xquery/comp/QueryMgr
creating : class oracle/xquery/comp/SAXComp
creating : class oracle/xquery/comp/SQLComp$Case
creating : class oracle/xquery/comp/SQLComp$Cast
creating : class oracle/xquery/comp/SQLComp$Constant
creating : class oracle/xquery/comp/SQLComp$ExistsSubquery
creating : class oracle/xquery/comp/SQLComp$FromList
creating : class oracle/xquery/comp/SQLComp$Function
creating : class oracle/xquery/comp/SQLComp$Identifier
creating : class oracle/xquery/comp/SQLComp$LateralSubquery
creating : class oracle/xquery/comp/SQLComp$MultisetQuery
creating : class oracle/xquery/comp/SQLComp$OrderByItem
creating : class oracle/xquery/comp/SQLComp$OrderByList
creating : class oracle/xquery/comp/SQLComp$Query
creating : class oracle/xquery/comp/SQLComp$SelectList
creating : class oracle/xquery/comp/SQLComp$SetOperation
creating : class oracle/xquery/comp/SQLComp$SimpleIdentifier
creating : class oracle/xquery/comp/SQLComp$SqlSAXHdlr
creating : class oracle/xquery/comp/SQLComp$StackNode
creating : class oracle/xquery/comp/SQLComp$TableExpr
creating : class oracle/xquery/comp/SQLComp$WhenThenElse
creating : class oracle/xquery/comp/SQLComp$Where
creating : class oracle/xquery/comp/SQLComp$XMLAttributes
creating : class oracle/xquery/comp/SQLComp$XMLElem
creating : class oracle/xquery/comp/SQLComp
creating : class oracle/xquery/comp/SymbolTable$NoOpenScope
creating : class oracle/xquery/comp/SymbolTable
creating : class oracle/xquery/comp/XQCompiler
creating : class oracle/xquery/exec/AbstractVisitor
creating : class oracle/xquery/exec/ArithOp
creating : class oracle/xquery/exec/BindExpr
creating : class oracle/xquery/exec/BindVar
creating : class oracle/xquery/exec/Case
creating : class oracle/xquery/exec/CircularityDetectionVisitor
creating : class oracle/xquery/exec/ConstantExpr
creating : class oracle/xquery/exec/ConvertXML
creating : class oracle/xquery/exec/ConvertXMLUtils
creating : class oracle/xquery/exec/DeleteExpr
creating : class oracle/xquery/exec/DeleteUP
creating : class oracle/xquery/exec/Document$CollectionIterator
creating : class oracle/xquery/exec/Document$DocAvailableIterator
creating : class oracle/xquery/exec/Document$DocumentIterator
creating : class oracle/xquery/exec/Document$FileOnlyFilter
creating : class oracle/xquery/exec/Document
creating : class oracle/xquery/exec/Dot
creating : class oracle/xquery/exec/DotDot
creating : class oracle/xquery/exec/Exists
creating : class oracle/xquery/exec/ExpectedSequenceType
creating : class oracle/xquery/exec/Expr$ExprIterator
creating : class oracle/xquery/exec/Expr$ExprIterator2
creating : class oracle/xquery/exec/Expr$ExprTypes
creating : class oracle/xquery/exec/Expr
creating : class oracle/xquery/exec/ExprResultIterator
creating : class oracle/xquery/exec/ExprSequence$ExprSequenceIterator
creating : class oracle/xquery/exec/ExprSequence
creating : class oracle/xquery/exec/ExternalDataSrc$ExternalDataSrcIterator
creating : class oracle/xquery/exec/ExternalDataSrc
creating : class oracle/xquery/exec/FLWR$FLWRIterator
creating : class oracle/xquery/exec/FLWR
creating : class oracle/xquery/exec/FilterProject$FilterProjectIterator
creating : class oracle/xquery/exec/FilterProject
creating : class oracle/xquery/exec/Focus
creating : class oracle/xquery/exec/FunctionCall
creating : class oracle/xquery/exec/GeneralComparison
creating : class oracle/xquery/exec/Identifier
creating : class oracle/xquery/exec/InsertAfterUP
creating : class oracle/xquery/exec/InsertAttributesUP
creating : class oracle/xquery/exec/InsertBeforeUP
creating : class oracle/xquery/exec/InsertExpr
creating : class oracle/xquery/exec/InsertIntoAsFirstUP
creating : class oracle/xquery/exec/InsertIntoAsLastUP
creating : class oracle/xquery/exec/InsertIntoUP
creating : class oracle/xquery/exec/Join
creating : class oracle/xquery/exec/LetExpr
creating : class oracle/xquery/exec/LogicalOp
creating : class oracle/xquery/exec/Minus$MinusNSIterator
creating : class oracle/xquery/exec/Minus$MinusStates
creating : class oracle/xquery/exec/Minus
creating : class oracle/xquery/exec/NLJ$NLJIterator
creating : class oracle/xquery/exec/NLJ
creating : class oracle/xquery/exec/NodeSource
creating : class oracle/xquery/exec/NodeSourceIterator
creating : class oracle/xquery/exec/NodeSourceVisitor
creating : class oracle/xquery/exec/NodeTest
creating : class oracle/xquery/exec/OXMLItemList$NodeCompare
creating : class oracle/xquery/exec/OXMLItemList$SequenceTreeMap
creating : class oracle/xquery/exec/OXMLItemList
creating : class oracle/xquery/exec/OXQResultSequence
creating : class oracle/xquery/exec/OXQueryItem
creating : class oracle/xquery/exec/OXQueryItemFactory
creating : class oracle/xquery/exec/OXQuerySequence$Entry
creating : class oracle/xquery/exec/OXQuerySequence
creating : class oracle/xquery/exec/OXQuerySequenceFactory
creating : class oracle/xquery/exec/OptimizeContext
creating : class oracle/xquery/exec/OrderComparison$OrderComparisonTypes
creating : class oracle/xquery/exec/OrderComparison
creating : class oracle/xquery/exec/PathAncestorAxis
creating : class oracle/xquery/exec/PathAncestorOrSelfAxis
creating : class oracle/xquery/exec/PathAttrAxisIterator
creating : class oracle/xquery/exec/PathAttributeAxis
creating : class oracle/xquery/exec/PathAxis
creating : class oracle/xquery/exec/PathAxisIterator
creating : class oracle/xquery/exec/PathChildAxis
creating : class oracle/xquery/exec/PathChildAxisIterator
creating : class oracle/xquery/exec/PathDescOrSelfAxis
creating : class oracle/xquery/exec/PathDescendantAxis
creating : class oracle/xquery/exec/PathDescendantAxisIterator
creating : class oracle/xquery/exec/PathFollowingAxis
creating : class oracle/xquery/exec/PathFollowingSiblingAxis
creating : class oracle/xquery/exec/PathParentAxis
creating : class oracle/xquery/exec/PathPrecedingAxis
creating : class oracle/xquery/exec/PathPrecedingSiblingAxis
creating : class oracle/xquery/exec/PathSelfAxis
creating : class oracle/xquery/exec/PathSelfAxisIterator
creating : class oracle/xquery/exec/PathStep
creating : class oracle/xquery/exec/Predicate
creating : class oracle/xquery/exec/PredicateSet
creating : class oracle/xquery/exec/PredicatedExpr
creating : class oracle/xquery/exec/ProjectExpr
creating : class oracle/xquery/exec/QueryState
creating : class oracle/xquery/exec/RelOp
creating : class oracle/xquery/exec/RenameExpr
creating : class oracle/xquery/exec/RenameUP
creating : class oracle/xquery/exec/ReplaceElemContentUP
creating : class oracle/xquery/exec/ReplaceNodeExpr
creating : class oracle/xquery/exec/ReplaceNodeUP
creating : class oracle/xquery/exec/ReplaceValueExpr
creating : class oracle/xquery/exec/ReplaceValueUP
creating : class oracle/xquery/exec/ResetVisitor
creating : class oracle/xquery/exec/RuntimeFrame
creating : class oracle/xquery/exec/SQLQuery$SQLQueryIterator
creating : class oracle/xquery/exec/SQLQuery
creating : class oracle/xquery/exec/Scan$ScanNSIterator
creating : class oracle/xquery/exec/Scan
creating : class oracle/xquery/exec/SeqOp$DocumentOrderComparator
creating : class oracle/xquery/exec/SeqOp$SameNodeComparator
creating : class oracle/xquery/exec/SeqOp
creating : class oracle/xquery/exec/ServerSchemaResolver
creating : class oracle/xquery/exec/SortNS$SortNSIterator
creating : class oracle/xquery/exec/SortNS$SortRec
creating : class oracle/xquery/exec/SortNS$SortRecComparator
creating : class oracle/xquery/exec/SortNS
creating : class oracle/xquery/exec/StaticTypingVisitor
creating : class oracle/xquery/exec/Trace
creating : class oracle/xquery/exec/TransformExpr
creating : class oracle/xquery/exec/TypeFactory
creating : class oracle/xquery/exec/TypeOp
creating : class oracle/xquery/exec/UnaryExpr
creating : class oracle/xquery/exec/UpdateExpr
creating : class oracle/xquery/exec/UpdatePendingList
creating : class oracle/xquery/exec/UpdatePrimitive
creating : class oracle/xquery/exec/Utils
creating : class oracle/xquery/exec/ValidateExpr
creating : class oracle/xquery/exec/VarExpr
creating : class oracle/xquery/exec/Variable
creating : class oracle/xquery/exec/Visitor
creating : class oracle/xquery/exec/XDBConnExpr$XDBConnIterator
creating : class oracle/xquery/exec/XDBConnExpr
creating : class oracle/xquery/exec/XMLCons
creating : class oracle/xquery/exec/XMLElem
creating : class oracle/xquery/exec/XQPrintDriver
creating : class oracle/xquery/exec/XQRangeExpr$XQRangeExprIterator
creating : class oracle/xquery/exec/XQRangeExpr
creating : class oracle/xquery/exec/XQueryAuthenticator
creating : class oracle/xquery/exec/XQueryConstants
creating : class oracle/xquery/exec/XQueryUtils
creating : class oracle/xquery/exec/XpathExpr$XpathExprIterator
creating : class oracle/xquery/exec/XpathExpr
creating : class oracle/xquery/exec/XpathExprStreamingIterator
creating : class oracle/xquery/servlet/XQServlet
creating : class oracle/xquery/Configuration
creating : class oracle/xquery/OXQServer
creating : class oracle/xquery/PreparedXQuery
creating : class oracle/xquery/SQLDataSource
creating : class oracle/xquery/SQLIterator
creating : class oracle/xquery/ThreadSerialNum$1
creating : class oracle/xquery/ThreadSerialNum
creating : class oracle/xquery/XDBPreparedXQuery
creating : class oracle/xquery/XMLDataSource
creating : class oracle/xquery/XMLDataSourceIterator
creating : class oracle/xquery/XQException
creating : class oracle/xquery/XQLPlus
creating : class oracle/xquery/XQMesg
creating : class oracle/xquery/XQPageManagerPool
creating : class oracle/xquery/XQueryContext
creating : class oracle/xquery/XQueryContextHandler
creating : class oracle/xquery/XQueryDataSource
creating : resource oracle/xquery/mesg/XQMessages.properties
creating : resource oracle/xquery/mesg/XQMessages_ar.properties
creating : resource oracle/xquery/mesg/XQMessages_cs.properties
creating : resource oracle/xquery/mesg/XQMessages_da.properties
creating : resource oracle/xquery/mesg/XQMessages_de.properties
creating : resource oracle/xquery/mesg/XQMessages_el.properties
creating : resource oracle/xquery/mesg/XQMessages_es.properties
creating : resource oracle/xquery/mesg/XQMessages_fi.properties
creating : resource oracle/xquery/mesg/XQMessages_fr.properties
creating : resource oracle/xquery/mesg/XQMessages_hu.properties
creating : resource oracle/xquery/mesg/XQMessages_it.properties
creating : resource oracle/xquery/mesg/XQMessages_iw.properties
creating : resource oracle/xquery/mesg/XQMessages_ja.properties
creating : resource oracle/xquery/mesg/XQMessages_ko.properties
creating : resource oracle/xquery/mesg/XQMessages_nl.properties
creating : resource oracle/xquery/mesg/XQMessages_no.properties
creating : resource oracle/xquery/mesg/XQMessages_pl.properties
creating : resource oracle/xquery/mesg/XQMessages_pt.properties
creating : resource oracle/xquery/mesg/XQMessages_pt_BR.properties
creating : resource oracle/xquery/mesg/XQMessages_ro.properties
creating : resource oracle/xquery/mesg/XQMessages_ru.properties
creating : resource oracle/xquery/mesg/XQMessages_sk.properties
creating : resource oracle/xquery/mesg/XQMessages_sv.properties
creating : resource oracle/xquery/mesg/XQMessages_th.properties
creating : resource oracle/xquery/mesg/XQMessages_tr.properties
creating : resource oracle/xquery/mesg/XQMessages_zh_CN.properties
creating : resource oracle/xquery/mesg/XQMessages_zh_TW.properties
creating : resource oracle/xquery/config.properties
granting : execute on class oracle/xquery/parser/Attribute to PUBLIC
resolving: class oracle/xquery/parser/Attribute
synonym  : oracle/xquery/parser/Attribute
granting : execute on class oracle/xquery/parser/AttributeList to PUBLIC
skipping : class oracle/xquery/parser/AttributeList
synonym  : oracle/xquery/parser/AttributeList
granting : execute on class oracle/xquery/parser/CopyClause to PUBLIC
skipping : class oracle/xquery/parser/CopyClause
synonym  : oracle/xquery/parser/CopyClause
granting : execute on class oracle/xquery/parser/Expr to PUBLIC
skipping : class oracle/xquery/parser/Expr
synonym  : oracle/xquery/parser/Expr
granting : execute on class oracle/xquery/parser/ExprSingle to PUBLIC
skipping : class oracle/xquery/parser/ExprSingle
synonym  : oracle/xquery/parser/ExprSingle
granting : execute on class oracle/xquery/parser/FLWORExpr to PUBLIC
skipping : class oracle/xquery/parser/FLWORExpr
synonym  : oracle/xquery/parser/FLWORExpr
granting : execute on class oracle/xquery/parser/ForClause to PUBLIC
skipping : class oracle/xquery/parser/ForClause
synonym  : oracle/xquery/parser/ForClause
granting : execute on class oracle/xquery/parser/FunctionDefn to PUBLIC
skipping : class oracle/xquery/parser/FunctionDefn
synonym  : oracle/xquery/parser/FunctionDefn
granting : execute on class oracle/xquery/parser/IfExpr to PUBLIC
skipping : class oracle/xquery/parser/IfExpr
synonym  : oracle/xquery/parser/IfExpr
granting : execute on class oracle/xquery/parser/JJTXPathState to PUBLIC
skipping : class oracle/xquery/parser/JJTXPathState
synonym  : oracle/xquery/parser/JJTXPathState
granting : execute on class oracle/xquery/parser/JavaCharStream to PUBLIC
skipping : class oracle/xquery/parser/JavaCharStream
synonym  : oracle/xquery/parser/JavaCharStream
granting : execute on class oracle/xquery/parser/LetClause to PUBLIC
skipping : class oracle/xquery/parser/LetClause
synonym  : oracle/xquery/parser/LetClause
granting : execute on class oracle/xquery/parser/ModuleDecl to PUBLIC
skipping : class oracle/xquery/parser/ModuleDecl
synonym  : oracle/xquery/parser/ModuleDecl
granting : execute on class oracle/xquery/parser/NamedSplNode to PUBLIC
skipping : class oracle/xquery/parser/NamedSplNode
synonym  : oracle/xquery/parser/NamedSplNode
granting : execute on class oracle/xquery/parser/Namespace to PUBLIC
skipping : class oracle/xquery/parser/Namespace
synonym  : oracle/xquery/parser/Namespace
granting : execute on class oracle/xquery/parser/Node to PUBLIC
skipping : class oracle/xquery/parser/Node
synonym  : oracle/xquery/parser/Node
granting : execute on class oracle/xquery/parser/Param to PUBLIC
skipping : class oracle/xquery/parser/Param
synonym  : oracle/xquery/parser/Param
granting : execute on class oracle/xquery/parser/ParseException to PUBLIC
skipping : class oracle/xquery/parser/ParseException
synonym  : oracle/xquery/parser/ParseException
granting : execute on class oracle/xquery/parser/ParserUtil to PUBLIC
skipping : class oracle/xquery/parser/ParserUtil
synonym  : oracle/xquery/parser/ParserUtil
granting : execute on class oracle/xquery/parser/PrimaryExpr to PUBLIC
skipping : class oracle/xquery/parser/PrimaryExpr
synonym  : oracle/xquery/parser/PrimaryExpr
granting : execute on class oracle/xquery/parser/Qname to PUBLIC
skipping : class oracle/xquery/parser/Qname
synonym  : oracle/xquery/parser/Qname
granting : execute on class oracle/xquery/parser/QuantifiedExpr to PUBLIC
skipping : class oracle/xquery/parser/QuantifiedExpr
synonym  : oracle/xquery/parser/QuantifiedExpr
granting : execute on class oracle/xquery/parser/RelativePathExpr to PUBLIC
skipping : class oracle/xquery/parser/RelativePathExpr
synonym  : oracle/xquery/parser/RelativePathExpr
granting : execute on class oracle/xquery/parser/SimpleNode to PUBLIC
skipping : class oracle/xquery/parser/SimpleNode
synonym  : oracle/xquery/parser/SimpleNode
granting : execute on class oracle/xquery/parser/SplNode to PUBLIC
skipping : class oracle/xquery/parser/SplNode
synonym  : oracle/xquery/parser/SplNode
granting : execute on class oracle/xquery/parser/Token to PUBLIC
skipping : class oracle/xquery/parser/Token
synonym  : oracle/xquery/parser/Token
granting : execute on class oracle/xquery/parser/TokenMgrError to PUBLIC
skipping : class oracle/xquery/parser/TokenMgrError
synonym  : oracle/xquery/parser/TokenMgrError
granting : execute on class oracle/xquery/parser/TransformExpr to PUBLIC
skipping : class oracle/xquery/parser/TransformExpr
synonym  : oracle/xquery/parser/TransformExpr
granting : execute on class oracle/xquery/parser/VarExpr to PUBLIC
skipping : class oracle/xquery/parser/VarExpr
synonym  : oracle/xquery/parser/VarExpr
granting : execute on class oracle/xquery/parser/XPath to PUBLIC
skipping : class oracle/xquery/parser/XPath
synonym  : oracle/xquery/parser/XPath
granting : execute on class oracle/xquery/parser/XPathConstants to PUBLIC
skipping : class oracle/xquery/parser/XPathConstants
synonym  : oracle/xquery/parser/XPathConstants
granting : execute on class oracle/xquery/parser/XPathStringValue to PUBLIC
skipping : class oracle/xquery/parser/XPathStringValue
synonym  : oracle/xquery/parser/XPathStringValue
granting : execute on class oracle/xquery/parser/XPathTokenManager to PUBLIC
skipping : class oracle/xquery/parser/XPathTokenManager
synonym  : oracle/xquery/parser/XPathTokenManager
granting : execute on class oracle/xquery/parser/XPathTreeConstants to PUBLIC
skipping : class oracle/xquery/parser/XPathTreeConstants
synonym  : oracle/xquery/parser/XPathTreeConstants
granting : execute on class oracle/xquery/parser/XQXGen to PUBLIC
skipping : class oracle/xquery/parser/XQXGen
synonym  : oracle/xquery/parser/XQXGen
granting : execute on class oracle/xquery/parser/XQueryXUtils to PUBLIC
skipping : class oracle/xquery/parser/XQueryXUtils
synonym  : oracle/xquery/parser/XQueryXUtils
granting : execute on class oracle/xquery/func/FunctionDefn to PUBLIC
skipping : class oracle/xquery/func/FunctionDefn
synonym  : oracle/xquery/func/FunctionDefn
granting : execute on class oracle/xquery/func/FunctionId to PUBLIC
skipping : class oracle/xquery/func/FunctionId
synonym  : oracle/xquery/func/FunctionId
granting : execute on class oracle/xquery/func/OXMLFunctionLibrary to PUBLIC
resolving: class oracle/xquery/func/OXMLFunctionLibrary
synonym  : oracle/xquery/func/OXMLFunctionLibrary
granting : execute on class oracle/xquery/func/OraContains to PUBLIC
resolving: class oracle/xquery/func/OraContains
synonym  : oracle/xquery/func/OraContains
granting : execute on class oracle/xquery/func/OraFunctionLibrary$Key to PUBLIC
resolving: class oracle/xquery/func/OraFunctionLibrary$Key
synonym  : oracle/xquery/func/OraFunctionLibrary$Key
granting : execute on class oracle/xquery/func/OraFunctionLibrary to PUBLIC
skipping : class oracle/xquery/func/OraFunctionLibrary
synonym  : oracle/xquery/func/OraFunctionLibrary
granting : execute on class oracle/xquery/func/OraInstanceOfOnly to PUBLIC
skipping : class oracle/xquery/func/OraInstanceOfOnly
synonym  : oracle/xquery/func/OraInstanceOfOnly
granting : execute on class oracle/xquery/func/OraMatches to PUBLIC
skipping : class oracle/xquery/func/OraMatches
synonym  : oracle/xquery/func/OraMatches
granting : execute on class oracle/xquery/func/OraPath to PUBLIC
skipping : class oracle/xquery/func/OraPath
synonym  : oracle/xquery/func/OraPath
granting : execute on class oracle/xquery/func/OraReplace to PUBLIC
skipping : class oracle/xquery/func/OraReplace
synonym  : oracle/xquery/func/OraReplace
granting : execute on class oracle/xquery/func/OraServerFunctions to PUBLIC
skipping : class oracle/xquery/func/OraServerFunctions
synonym  : oracle/xquery/func/OraServerFunctions
granting : execute on class oracle/xquery/func/OraVersion to PUBLIC
resolving: class oracle/xquery/func/OraVersion
synonym  : oracle/xquery/func/OraVersion
granting : execute on class oracle/xquery/func/XQueryFuncLibrary to PUBLIC
resolving: class oracle/xquery/func/XQueryFuncLibrary
synonym  : oracle/xquery/func/XQueryFuncLibrary
granting : execute on class oracle/xquery/comp/CompStack to PUBLIC
resolving: class oracle/xquery/comp/CompStack
synonym  : oracle/xquery/comp/CompStack
granting : execute on class oracle/xquery/comp/CompState to PUBLIC
resolving: class oracle/xquery/comp/CompState
synonym  : oracle/xquery/comp/CompState
granting : execute on class oracle/xquery/comp/DefaultURIResolver to PUBLIC
resolving: class oracle/xquery/comp/DefaultURIResolver
synonym  : oracle/xquery/comp/DefaultURIResolver
granting : execute on class oracle/xquery/comp/FnCallResolver to PUBLIC
resolving: class oracle/xquery/comp/FnCallResolver
synonym  : oracle/xquery/comp/FnCallResolver
granting : execute on class oracle/xquery/comp/HashStack to PUBLIC
skipping : class oracle/xquery/comp/HashStack
synonym  : oracle/xquery/comp/HashStack
granting : execute on class oracle/xquery/comp/ImportDecl to PUBLIC
resolving: class oracle/xquery/comp/ImportDecl
synonym  : oracle/xquery/comp/ImportDecl
granting : execute on class oracle/xquery/comp/LibraryModule to PUBLIC
skipping : class oracle/xquery/comp/LibraryModule
synonym  : oracle/xquery/comp/LibraryModule
granting : execute on class oracle/xquery/comp/ModuleHandler to PUBLIC
skipping : class oracle/xquery/comp/ModuleHandler
synonym  : oracle/xquery/comp/ModuleHandler
granting : execute on class oracle/xquery/comp/PageBuf to PUBLIC
resolving: class oracle/xquery/comp/PageBuf
synonym  : oracle/xquery/comp/PageBuf
granting : execute on class oracle/xquery/comp/QueryMgr$ExprInfo to PUBLIC
resolving: class oracle/xquery/comp/QueryMgr$ExprInfo
synonym  : oracle/xquery/comp/QueryMgr$ExprInfo
granting : execute on class oracle/xquery/comp/QueryMgr$NodeInfo to PUBLIC
skipping : class oracle/xquery/comp/QueryMgr$NodeInfo
synonym  : oracle/xquery/comp/QueryMgr$NodeInfo
granting : execute on class oracle/xquery/comp/QueryMgr to PUBLIC
skipping : class oracle/xquery/comp/QueryMgr
synonym  : oracle/xquery/comp/QueryMgr
granting : execute on class oracle/xquery/comp/SAXComp to PUBLIC
resolving: class oracle/xquery/comp/SAXComp
synonym  : oracle/xquery/comp/SAXComp
granting : execute on class oracle/xquery/comp/SQLComp$Case to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$Case
synonym  : oracle/xquery/comp/SQLComp$Case
granting : execute on class oracle/xquery/comp/SQLComp$Cast to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$Cast
synonym  : oracle/xquery/comp/SQLComp$Cast
granting : execute on class oracle/xquery/comp/SQLComp$Constant to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$Constant
synonym  : oracle/xquery/comp/SQLComp$Constant
granting : execute on class oracle/xquery/comp/SQLComp$ExistsSubquery to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$ExistsSubquery
synonym  : oracle/xquery/comp/SQLComp$ExistsSubquery
granting : execute on class oracle/xquery/comp/SQLComp$FromList to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$FromList
synonym  : oracle/xquery/comp/SQLComp$FromList
granting : execute on class oracle/xquery/comp/SQLComp$Function to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$Function
synonym  : oracle/xquery/comp/SQLComp$Function
granting : execute on class oracle/xquery/comp/SQLComp$Identifier to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$Identifier
synonym  : oracle/xquery/comp/SQLComp$Identifier
granting : execute on class oracle/xquery/comp/SQLComp$LateralSubquery to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$LateralSubquery
synonym  : oracle/xquery/comp/SQLComp$LateralSubquery
granting : execute on class oracle/xquery/comp/SQLComp$MultisetQuery to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$MultisetQuery
synonym  : oracle/xquery/comp/SQLComp$MultisetQuery
granting : execute on class oracle/xquery/comp/SQLComp$OrderByItem to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$OrderByItem
synonym  : oracle/xquery/comp/SQLComp$OrderByItem
granting : execute on class oracle/xquery/comp/SQLComp$OrderByList to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$OrderByList
synonym  : oracle/xquery/comp/SQLComp$OrderByList
granting : execute on class oracle/xquery/comp/SQLComp$Query to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$Query
synonym  : oracle/xquery/comp/SQLComp$Query
granting : execute on class oracle/xquery/comp/SQLComp$SelectList to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$SelectList
synonym  : oracle/xquery/comp/SQLComp$SelectList
granting : execute on class oracle/xquery/comp/SQLComp$SetOperation to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$SetOperation
synonym  : oracle/xquery/comp/SQLComp$SetOperation
granting : execute on class oracle/xquery/comp/SQLComp$SimpleIdentifier to
PUBLIC
skipping : class oracle/xquery/comp/SQLComp$SimpleIdentifier
synonym  : oracle/xquery/comp/SQLComp$SimpleIdentifier
granting : execute on class oracle/xquery/comp/SQLComp$SqlSAXHdlr to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$SqlSAXHdlr
synonym  : oracle/xquery/comp/SQLComp$SqlSAXHdlr
granting : execute on class oracle/xquery/comp/SQLComp$StackNode to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$StackNode
synonym  : oracle/xquery/comp/SQLComp$StackNode
granting : execute on class oracle/xquery/comp/SQLComp$TableExpr to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$TableExpr
synonym  : oracle/xquery/comp/SQLComp$TableExpr
granting : execute on class oracle/xquery/comp/SQLComp$WhenThenElse to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$WhenThenElse
synonym  : oracle/xquery/comp/SQLComp$WhenThenElse
granting : execute on class oracle/xquery/comp/SQLComp$Where to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$Where
synonym  : oracle/xquery/comp/SQLComp$Where
granting : execute on class oracle/xquery/comp/SQLComp$XMLAttributes to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$XMLAttributes
synonym  : oracle/xquery/comp/SQLComp$XMLAttributes
granting : execute on class oracle/xquery/comp/SQLComp$XMLElem to PUBLIC
skipping : class oracle/xquery/comp/SQLComp$XMLElem
synonym  : oracle/xquery/comp/SQLComp$XMLElem
granting : execute on class oracle/xquery/comp/SQLComp to PUBLIC
skipping : class oracle/xquery/comp/SQLComp
synonym  : oracle/xquery/comp/SQLComp
granting : execute on class oracle/xquery/comp/SymbolTable$NoOpenScope to PUBLIC
skipping : class oracle/xquery/comp/SymbolTable$NoOpenScope
synonym  : oracle/xquery/comp/SymbolTable$NoOpenScope
granting : execute on class oracle/xquery/comp/SymbolTable to PUBLIC
skipping : class oracle/xquery/comp/SymbolTable
synonym  : oracle/xquery/comp/SymbolTable
granting : execute on class oracle/xquery/comp/XQCompiler to PUBLIC
skipping : class oracle/xquery/comp/XQCompiler
synonym  : oracle/xquery/comp/XQCompiler
granting : execute on class oracle/xquery/exec/AbstractVisitor to PUBLIC
skipping : class oracle/xquery/exec/AbstractVisitor
synonym  : oracle/xquery/exec/AbstractVisitor
granting : execute on class oracle/xquery/exec/ArithOp to PUBLIC
skipping : class oracle/xquery/exec/ArithOp
synonym  : oracle/xquery/exec/ArithOp
granting : execute on class oracle/xquery/exec/BindExpr to PUBLIC
skipping : class oracle/xquery/exec/BindExpr
synonym  : oracle/xquery/exec/BindExpr
granting : execute on class oracle/xquery/exec/BindVar to PUBLIC
skipping : class oracle/xquery/exec/BindVar
synonym  : oracle/xquery/exec/BindVar
granting : execute on class oracle/xquery/exec/Case to PUBLIC
skipping : class oracle/xquery/exec/Case
synonym  : oracle/xquery/exec/Case
granting : execute on class oracle/xquery/exec/CircularityDetectionVisitor to
PUBLIC
skipping : class oracle/xquery/exec/CircularityDetectionVisitor
synonym  : oracle/xquery/exec/CircularityDetectionVisitor
granting : execute on class oracle/xquery/exec/ConstantExpr to PUBLIC
skipping : class oracle/xquery/exec/ConstantExpr
synonym  : oracle/xquery/exec/ConstantExpr
granting : execute on class oracle/xquery/exec/ConvertXML to PUBLIC
skipping : class oracle/xquery/exec/ConvertXML
synonym  : oracle/xquery/exec/ConvertXML
granting : execute on class oracle/xquery/exec/ConvertXMLUtils to PUBLIC
skipping : class oracle/xquery/exec/ConvertXMLUtils
synonym  : oracle/xquery/exec/ConvertXMLUtils
granting : execute on class oracle/xquery/exec/DeleteExpr to PUBLIC
skipping : class oracle/xquery/exec/DeleteExpr
synonym  : oracle/xquery/exec/DeleteExpr
granting : execute on class oracle/xquery/exec/DeleteUP to PUBLIC
skipping : class oracle/xquery/exec/DeleteUP
synonym  : oracle/xquery/exec/DeleteUP
granting : execute on class oracle/xquery/exec/Document$CollectionIterator to
PUBLIC
skipping : class oracle/xquery/exec/Document$CollectionIterator
synonym  : oracle/xquery/exec/Document$CollectionIterator
granting : execute on class oracle/xquery/exec/Document$DocAvailableIterator to
PUBLIC
skipping : class oracle/xquery/exec/Document$DocAvailableIterator
synonym  : oracle/xquery/exec/Document$DocAvailableIterator
granting : execute on class oracle/xquery/exec/Document$DocumentIterator to
PUBLIC
skipping : class oracle/xquery/exec/Document$DocumentIterator
synonym  : oracle/xquery/exec/Document$DocumentIterator
granting : execute on class oracle/xquery/exec/Document$FileOnlyFilter to PUBLIC
skipping : class oracle/xquery/exec/Document$FileOnlyFilter
synonym  : oracle/xquery/exec/Document$FileOnlyFilter
granting : execute on class oracle/xquery/exec/Document to PUBLIC
skipping : class oracle/xquery/exec/Document
synonym  : oracle/xquery/exec/Document
granting : execute on class oracle/xquery/exec/Dot to PUBLIC
skipping : class oracle/xquery/exec/Dot
synonym  : oracle/xquery/exec/Dot
granting : execute on class oracle/xquery/exec/DotDot to PUBLIC
skipping : class oracle/xquery/exec/DotDot
synonym  : oracle/xquery/exec/DotDot
granting : execute on class oracle/xquery/exec/Exists to PUBLIC
skipping : class oracle/xquery/exec/Exists
synonym  : oracle/xquery/exec/Exists
granting : execute on class oracle/xquery/exec/ExpectedSequenceType to PUBLIC
skipping : class oracle/xquery/exec/ExpectedSequenceType
synonym  : oracle/xquery/exec/ExpectedSequenceType
granting : execute on class oracle/xquery/exec/Expr$ExprIterator to PUBLIC
skipping : class oracle/xquery/exec/Expr$ExprIterator
synonym  : oracle/xquery/exec/Expr$ExprIterator
granting : execute on class oracle/xquery/exec/Expr$ExprIterator2 to PUBLIC
skipping : class oracle/xquery/exec/Expr$ExprIterator2
synonym  : oracle/xquery/exec/Expr$ExprIterator2
granting : execute on class oracle/xquery/exec/Expr$ExprTypes to PUBLIC
skipping : class oracle/xquery/exec/Expr$ExprTypes
synonym  : oracle/xquery/exec/Expr$ExprTypes
granting : execute on class oracle/xquery/exec/Expr to PUBLIC
skipping : class oracle/xquery/exec/Expr
synonym  : oracle/xquery/exec/Expr
granting : execute on class oracle/xquery/exec/ExprResultIterator to PUBLIC
skipping : class oracle/xquery/exec/ExprResultIterator
synonym  : oracle/xquery/exec/ExprResultIterator
granting : execute on class oracle/xquery/exec/ExprSequence$ExprSequenceIterator
to PUBLIC
skipping : class oracle/xquery/exec/ExprSequence$ExprSequenceIterator
synonym  : oracle/xquery/exec/ExprSequence$ExprSequenceIterator
granting : execute on class oracle/xquery/exec/ExprSequence to PUBLIC
skipping : class oracle/xquery/exec/ExprSequence
synonym  : oracle/xquery/exec/ExprSequence
granting : execute on class
oracle/xquery/exec/ExternalDataSrc$ExternalDataSrcIterator to PUBLIC
skipping : class oracle/xquery/exec/ExternalDataSrc$ExternalDataSrcIterator
synonym  : oracle/xquery/exec/ExternalDataSrc$ExternalDataSrcIterator
granting : execute on class oracle/xquery/exec/ExternalDataSrc to PUBLIC
skipping : class oracle/xquery/exec/ExternalDataSrc
synonym  : oracle/xquery/exec/ExternalDataSrc
granting : execute on class oracle/xquery/exec/FLWR$FLWRIterator to PUBLIC
skipping : class oracle/xquery/exec/FLWR$FLWRIterator
synonym  : oracle/xquery/exec/FLWR$FLWRIterator
granting : execute on class oracle/xquery/exec/FLWR to PUBLIC
skipping : class oracle/xquery/exec/FLWR
synonym  : oracle/xquery/exec/FLWR
granting : execute on class
oracle/xquery/exec/FilterProject$FilterProjectIterator to PUBLIC
skipping : class oracle/xquery/exec/FilterProject$FilterProjectIterator
synonym  : oracle/xquery/exec/FilterProject$FilterProjectIterator
granting : execute on class oracle/xquery/exec/FilterProject to PUBLIC
skipping : class oracle/xquery/exec/FilterProject
synonym  : oracle/xquery/exec/FilterProject
granting : execute on class oracle/xquery/exec/Focus to PUBLIC
skipping : class oracle/xquery/exec/Focus
synonym  : oracle/xquery/exec/Focus
granting : execute on class oracle/xquery/exec/FunctionCall to PUBLIC
skipping : class oracle/xquery/exec/FunctionCall
synonym  : oracle/xquery/exec/FunctionCall
granting : execute on class oracle/xquery/exec/GeneralComparison to PUBLIC
skipping : class oracle/xquery/exec/GeneralComparison
synonym  : oracle/xquery/exec/GeneralComparison
granting : execute on class oracle/xquery/exec/Identifier to PUBLIC
skipping : class oracle/xquery/exec/Identifier
synonym  : oracle/xquery/exec/Identifier
granting : execute on class oracle/xquery/exec/InsertAfterUP to PUBLIC
skipping : class oracle/xquery/exec/InsertAfterUP
synonym  : oracle/xquery/exec/InsertAfterUP
granting : execute on class oracle/xquery/exec/InsertAttributesUP to PUBLIC
skipping : class oracle/xquery/exec/InsertAttributesUP
synonym  : oracle/xquery/exec/InsertAttributesUP
granting : execute on class oracle/xquery/exec/InsertBeforeUP to PUBLIC
skipping : class oracle/xquery/exec/InsertBeforeUP
synonym  : oracle/xquery/exec/InsertBeforeUP
granting : execute on class oracle/xquery/exec/InsertExpr to PUBLIC
skipping : class oracle/xquery/exec/InsertExpr
synonym  : oracle/xquery/exec/InsertExpr
granting : execute on class oracle/xquery/exec/InsertIntoAsFirstUP to PUBLIC
skipping : class oracle/xquery/exec/InsertIntoAsFirstUP
synonym  : oracle/xquery/exec/InsertIntoAsFirstUP
granting : execute on class oracle/xquery/exec/InsertIntoAsLastUP to PUBLIC
skipping : class oracle/xquery/exec/InsertIntoAsLastUP
synonym  : oracle/xquery/exec/InsertIntoAsLastUP
granting : execute on class oracle/xquery/exec/InsertIntoUP to PUBLIC
skipping : class oracle/xquery/exec/InsertIntoUP
synonym  : oracle/xquery/exec/InsertIntoUP
granting : execute on class oracle/xquery/exec/Join to PUBLIC
skipping : class oracle/xquery/exec/Join
synonym  : oracle/xquery/exec/Join
granting : execute on class oracle/xquery/exec/LetExpr to PUBLIC
skipping : class oracle/xquery/exec/LetExpr
synonym  : oracle/xquery/exec/LetExpr
granting : execute on class oracle/xquery/exec/LogicalOp to PUBLIC
skipping : class oracle/xquery/exec/LogicalOp
synonym  : oracle/xquery/exec/LogicalOp
granting : execute on class oracle/xquery/exec/Minus$MinusNSIterator to PUBLIC
resolving: class oracle/xquery/exec/Minus$MinusNSIterator
synonym  : oracle/xquery/exec/Minus$MinusNSIterator
granting : execute on class oracle/xquery/exec/Minus$MinusStates to PUBLIC
skipping : class oracle/xquery/exec/Minus$MinusStates
synonym  : oracle/xquery/exec/Minus$MinusStates
granting : execute on class oracle/xquery/exec/Minus to PUBLIC
skipping : class oracle/xquery/exec/Minus
synonym  : oracle/xquery/exec/Minus
granting : execute on class oracle/xquery/exec/NLJ$NLJIterator to PUBLIC
skipping : class oracle/xquery/exec/NLJ$NLJIterator
synonym  : oracle/xquery/exec/NLJ$NLJIterator
granting : execute on class oracle/xquery/exec/NLJ to PUBLIC
skipping : class oracle/xquery/exec/NLJ
synonym  : oracle/xquery/exec/NLJ
granting : execute on class oracle/xquery/exec/NodeSource to PUBLIC
skipping : class oracle/xquery/exec/NodeSource
synonym  : oracle/xquery/exec/NodeSource
granting : execute on class oracle/xquery/exec/NodeSourceIterator to PUBLIC
skipping : class oracle/xquery/exec/NodeSourceIterator
synonym  : oracle/xquery/exec/NodeSourceIterator
granting : execute on class oracle/xquery/exec/NodeSourceVisitor to PUBLIC
skipping : class oracle/xquery/exec/NodeSourceVisitor
synonym  : oracle/xquery/exec/NodeSourceVisitor
granting : execute on class oracle/xquery/exec/NodeTest to PUBLIC
skipping : class oracle/xquery/exec/NodeTest
synonym  : oracle/xquery/exec/NodeTest
granting : execute on class oracle/xquery/exec/OXMLItemList$NodeCompare to
PUBLIC
skipping : class oracle/xquery/exec/OXMLItemList$NodeCompare
synonym  : oracle/xquery/exec/OXMLItemList$NodeCompare
granting : execute on class oracle/xquery/exec/OXMLItemList$SequenceTreeMap to
PUBLIC
skipping : class oracle/xquery/exec/OXMLItemList$SequenceTreeMap
synonym  : oracle/xquery/exec/OXMLItemList$SequenceTreeMap
granting : execute on class oracle/xquery/exec/OXMLItemList to PUBLIC
skipping : class oracle/xquery/exec/OXMLItemList
synonym  : oracle/xquery/exec/OXMLItemList
granting : execute on class oracle/xquery/exec/OXQResultSequence to PUBLIC
skipping : class oracle/xquery/exec/OXQResultSequence
synonym  : oracle/xquery/exec/OXQResultSequence
granting : execute on class oracle/xquery/exec/OXQueryItem to PUBLIC
skipping : class oracle/xquery/exec/OXQueryItem
synonym  : oracle/xquery/exec/OXQueryItem
granting : execute on class oracle/xquery/exec/OXQueryItemFactory to PUBLIC
skipping : class oracle/xquery/exec/OXQueryItemFactory
synonym  : oracle/xquery/exec/OXQueryItemFactory
granting : execute on class oracle/xquery/exec/OXQuerySequence$Entry to PUBLIC
skipping : class oracle/xquery/exec/OXQuerySequence$Entry
synonym  : oracle/xquery/exec/OXQuerySequence$Entry
granting : execute on class oracle/xquery/exec/OXQuerySequence to PUBLIC
skipping : class oracle/xquery/exec/OXQuerySequence
synonym  : oracle/xquery/exec/OXQuerySequence
granting : execute on class oracle/xquery/exec/OXQuerySequenceFactory to PUBLIC
skipping : class oracle/xquery/exec/OXQuerySequenceFactory
synonym  : oracle/xquery/exec/OXQuerySequenceFactory
granting : execute on class oracle/xquery/exec/OptimizeContext to PUBLIC
skipping : class oracle/xquery/exec/OptimizeContext
synonym  : oracle/xquery/exec/OptimizeContext
granting : execute on class
oracle/xquery/exec/OrderComparison$OrderComparisonTypes to PUBLIC
skipping : class oracle/xquery/exec/OrderComparison$OrderComparisonTypes
synonym  : oracle/xquery/exec/OrderComparison$OrderComparisonTypes
granting : execute on class oracle/xquery/exec/OrderComparison to PUBLIC
skipping : class oracle/xquery/exec/OrderComparison
synonym  : oracle/xquery/exec/OrderComparison
granting : execute on class oracle/xquery/exec/PathAncestorAxis to PUBLIC
skipping : class oracle/xquery/exec/PathAncestorAxis
synonym  : oracle/xquery/exec/PathAncestorAxis
granting : execute on class oracle/xquery/exec/PathAncestorOrSelfAxis to PUBLIC
skipping : class oracle/xquery/exec/PathAncestorOrSelfAxis
synonym  : oracle/xquery/exec/PathAncestorOrSelfAxis
granting : execute on class oracle/xquery/exec/PathAttrAxisIterator to PUBLIC
skipping : class oracle/xquery/exec/PathAttrAxisIterator
synonym  : oracle/xquery/exec/PathAttrAxisIterator
granting : execute on class oracle/xquery/exec/PathAttributeAxis to PUBLIC
skipping : class oracle/xquery/exec/PathAttributeAxis
synonym  : oracle/xquery/exec/PathAttributeAxis
granting : execute on class oracle/xquery/exec/PathAxis to PUBLIC
skipping : class oracle/xquery/exec/PathAxis
synonym  : oracle/xquery/exec/PathAxis
granting : execute on class oracle/xquery/exec/PathAxisIterator to PUBLIC
skipping : class oracle/xquery/exec/PathAxisIterator
synonym  : oracle/xquery/exec/PathAxisIterator
granting : execute on class oracle/xquery/exec/PathChildAxis to PUBLIC
skipping : class oracle/xquery/exec/PathChildAxis
synonym  : oracle/xquery/exec/PathChildAxis
granting : execute on class oracle/xquery/exec/PathChildAxisIterator to PUBLIC
skipping : class oracle/xquery/exec/PathChildAxisIterator
synonym  : oracle/xquery/exec/PathChildAxisIterator
granting : execute on class oracle/xquery/exec/PathDescOrSelfAxis to PUBLIC
skipping : class oracle/xquery/exec/PathDescOrSelfAxis
synonym  : oracle/xquery/exec/PathDescOrSelfAxis
granting : execute on class oracle/xquery/exec/PathDescendantAxis to PUBLIC
skipping : class oracle/xquery/exec/PathDescendantAxis
synonym  : oracle/xquery/exec/PathDescendantAxis
granting : execute on class oracle/xquery/exec/PathDescendantAxisIterator to
PUBLIC
skipping : class oracle/xquery/exec/PathDescendantAxisIterator
synonym  : oracle/xquery/exec/PathDescendantAxisIterator
granting : execute on class oracle/xquery/exec/PathFollowingAxis to PUBLIC
skipping : class oracle/xquery/exec/PathFollowingAxis
synonym  : oracle/xquery/exec/PathFollowingAxis
granting : execute on class oracle/xquery/exec/PathFollowingSiblingAxis to
PUBLIC
skipping : class oracle/xquery/exec/PathFollowingSiblingAxis
synonym  : oracle/xquery/exec/PathFollowingSiblingAxis
granting : execute on class oracle/xquery/exec/PathParentAxis to PUBLIC
skipping : class oracle/xquery/exec/PathParentAxis
synonym  : oracle/xquery/exec/PathParentAxis
granting : execute on class oracle/xquery/exec/PathPrecedingAxis to PUBLIC
skipping : class oracle/xquery/exec/PathPrecedingAxis
synonym  : oracle/xquery/exec/PathPrecedingAxis
granting : execute on class oracle/xquery/exec/PathPrecedingSiblingAxis to
PUBLIC
skipping : class oracle/xquery/exec/PathPrecedingSiblingAxis
synonym  : oracle/xquery/exec/PathPrecedingSiblingAxis
granting : execute on class oracle/xquery/exec/PathSelfAxis to PUBLIC
skipping : class oracle/xquery/exec/PathSelfAxis
synonym  : oracle/xquery/exec/PathSelfAxis
granting : execute on class oracle/xquery/exec/PathSelfAxisIterator to PUBLIC
skipping : class oracle/xquery/exec/PathSelfAxisIterator
synonym  : oracle/xquery/exec/PathSelfAxisIterator
granting : execute on class oracle/xquery/exec/PathStep to PUBLIC
skipping : class oracle/xquery/exec/PathStep
synonym  : oracle/xquery/exec/PathStep
granting : execute on class oracle/xquery/exec/Predicate to PUBLIC
skipping : class oracle/xquery/exec/Predicate
synonym  : oracle/xquery/exec/Predicate
granting : execute on class oracle/xquery/exec/PredicateSet to PUBLIC
skipping : class oracle/xquery/exec/PredicateSet
synonym  : oracle/xquery/exec/PredicateSet
granting : execute on class oracle/xquery/exec/PredicatedExpr to PUBLIC
skipping : class oracle/xquery/exec/PredicatedExpr
synonym  : oracle/xquery/exec/PredicatedExpr
granting : execute on class oracle/xquery/exec/ProjectExpr to PUBLIC
resolving: class oracle/xquery/exec/ProjectExpr
synonym  : oracle/xquery/exec/ProjectExpr
granting : execute on class oracle/xquery/exec/QueryState to PUBLIC
skipping : class oracle/xquery/exec/QueryState
synonym  : oracle/xquery/exec/QueryState
granting : execute on class oracle/xquery/exec/RelOp to PUBLIC
skipping : class oracle/xquery/exec/RelOp
synonym  : oracle/xquery/exec/RelOp
granting : execute on class oracle/xquery/exec/RenameExpr to PUBLIC
skipping : class oracle/xquery/exec/RenameExpr
synonym  : oracle/xquery/exec/RenameExpr
granting : execute on class oracle/xquery/exec/RenameUP to PUBLIC
skipping : class oracle/xquery/exec/RenameUP
synonym  : oracle/xquery/exec/RenameUP
granting : execute on class oracle/xquery/exec/ReplaceElemContentUP to PUBLIC
skipping : class oracle/xquery/exec/ReplaceElemContentUP
synonym  : oracle/xquery/exec/ReplaceElemContentUP
granting : execute on class oracle/xquery/exec/ReplaceNodeExpr to PUBLIC
skipping : class oracle/xquery/exec/ReplaceNodeExpr
synonym  : oracle/xquery/exec/ReplaceNodeExpr
granting : execute on class oracle/xquery/exec/ReplaceNodeUP to PUBLIC
skipping : class oracle/xquery/exec/ReplaceNodeUP
synonym  : oracle/xquery/exec/ReplaceNodeUP
granting : execute on class oracle/xquery/exec/ReplaceValueExpr to PUBLIC
skipping : class oracle/xquery/exec/ReplaceValueExpr
synonym  : oracle/xquery/exec/ReplaceValueExpr
granting : execute on class oracle/xquery/exec/ReplaceValueUP to PUBLIC
skipping : class oracle/xquery/exec/ReplaceValueUP
synonym  : oracle/xquery/exec/ReplaceValueUP
granting : execute on class oracle/xquery/exec/ResetVisitor to PUBLIC
skipping : class oracle/xquery/exec/ResetVisitor
synonym  : oracle/xquery/exec/ResetVisitor
granting : execute on class oracle/xquery/exec/RuntimeFrame to PUBLIC
skipping : class oracle/xquery/exec/RuntimeFrame
synonym  : oracle/xquery/exec/RuntimeFrame
granting : execute on class oracle/xquery/exec/SQLQuery$SQLQueryIterator to
PUBLIC
skipping : class oracle/xquery/exec/SQLQuery$SQLQueryIterator
synonym  : oracle/xquery/exec/SQLQuery$SQLQueryIterator
granting : execute on class oracle/xquery/exec/SQLQuery to PUBLIC
skipping : class oracle/xquery/exec/SQLQuery
synonym  : oracle/xquery/exec/SQLQuery
granting : execute on class oracle/xquery/exec/Scan$ScanNSIterator to PUBLIC
skipping : class oracle/xquery/exec/Scan$ScanNSIterator
synonym  : oracle/xquery/exec/Scan$ScanNSIterator
granting : execute on class oracle/xquery/exec/Scan to PUBLIC
skipping : class oracle/xquery/exec/Scan
synonym  : oracle/xquery/exec/Scan
granting : execute on class oracle/xquery/exec/SeqOp$DocumentOrderComparator to
PUBLIC
skipping : class oracle/xquery/exec/SeqOp$DocumentOrderComparator
synonym  : oracle/xquery/exec/SeqOp$DocumentOrderComparator
granting : execute on class oracle/xquery/exec/SeqOp$SameNodeComparator to
PUBLIC
skipping : class oracle/xquery/exec/SeqOp$SameNodeComparator
synonym  : oracle/xquery/exec/SeqOp$SameNodeComparator
granting : execute on class oracle/xquery/exec/SeqOp to PUBLIC
skipping : class oracle/xquery/exec/SeqOp
synonym  : oracle/xquery/exec/SeqOp
granting : execute on class oracle/xquery/exec/ServerSchemaResolver to PUBLIC
skipping : class oracle/xquery/exec/ServerSchemaResolver
synonym  : oracle/xquery/exec/ServerSchemaResolver
granting : execute on class oracle/xquery/exec/SortNS$SortNSIterator to PUBLIC
skipping : class oracle/xquery/exec/SortNS$SortNSIterator
synonym  : oracle/xquery/exec/SortNS$SortNSIterator
granting : execute on class oracle/xquery/exec/SortNS$SortRec to PUBLIC
skipping : class oracle/xquery/exec/SortNS$SortRec
synonym  : oracle/xquery/exec/SortNS$SortRec
granting : execute on class oracle/xquery/exec/SortNS$SortRecComparator to
PUBLIC
skipping : class oracle/xquery/exec/SortNS$SortRecComparator
synonym  : oracle/xquery/exec/SortNS$SortRecComparator
granting : execute on class oracle/xquery/exec/SortNS to PUBLIC
skipping : class oracle/xquery/exec/SortNS
synonym  : oracle/xquery/exec/SortNS
granting : execute on class oracle/xquery/exec/StaticTypingVisitor to PUBLIC
skipping : class oracle/xquery/exec/StaticTypingVisitor
synonym  : oracle/xquery/exec/StaticTypingVisitor
granting : execute on class oracle/xquery/exec/Trace to PUBLIC
skipping : class oracle/xquery/exec/Trace
synonym  : oracle/xquery/exec/Trace
granting : execute on class oracle/xquery/exec/TransformExpr to PUBLIC
skipping : class oracle/xquery/exec/TransformExpr
synonym  : oracle/xquery/exec/TransformExpr
granting : execute on class oracle/xquery/exec/TypeFactory to PUBLIC
skipping : class oracle/xquery/exec/TypeFactory
synonym  : oracle/xquery/exec/TypeFactory
granting : execute on class oracle/xquery/exec/TypeOp to PUBLIC
skipping : class oracle/xquery/exec/TypeOp
synonym  : oracle/xquery/exec/TypeOp
granting : execute on class oracle/xquery/exec/UnaryExpr to PUBLIC
skipping : class oracle/xquery/exec/UnaryExpr
synonym  : oracle/xquery/exec/UnaryExpr
granting : execute on class oracle/xquery/exec/UpdateExpr to PUBLIC
skipping : class oracle/xquery/exec/UpdateExpr
synonym  : oracle/xquery/exec/UpdateExpr
granting : execute on class oracle/xquery/exec/UpdatePendingList to PUBLIC
skipping : class oracle/xquery/exec/UpdatePendingList
synonym  : oracle/xquery/exec/UpdatePendingList
granting : execute on class oracle/xquery/exec/UpdatePrimitive to PUBLIC
skipping : class oracle/xquery/exec/UpdatePrimitive
synonym  : oracle/xquery/exec/UpdatePrimitive
granting : execute on class oracle/xquery/exec/Utils to PUBLIC
skipping : class oracle/xquery/exec/Utils
synonym  : oracle/xquery/exec/Utils
granting : execute on class oracle/xquery/exec/ValidateExpr to PUBLIC
skipping : class oracle/xquery/exec/ValidateExpr
synonym  : oracle/xquery/exec/ValidateExpr
granting : execute on class oracle/xquery/exec/VarExpr to PUBLIC
skipping : class oracle/xquery/exec/VarExpr
synonym  : oracle/xquery/exec/VarExpr
granting : execute on class oracle/xquery/exec/Variable to PUBLIC
skipping : class oracle/xquery/exec/Variable
synonym  : oracle/xquery/exec/Variable
granting : execute on class oracle/xquery/exec/Visitor to PUBLIC
skipping : class oracle/xquery/exec/Visitor
synonym  : oracle/xquery/exec/Visitor
granting : execute on class oracle/xquery/exec/XDBConnExpr$XDBConnIterator to
PUBLIC
skipping : class oracle/xquery/exec/XDBConnExpr$XDBConnIterator
synonym  : oracle/xquery/exec/XDBConnExpr$XDBConnIterator
granting : execute on class oracle/xquery/exec/XDBConnExpr to PUBLIC
skipping : class oracle/xquery/exec/XDBConnExpr
synonym  : oracle/xquery/exec/XDBConnExpr
granting : execute on class oracle/xquery/exec/XMLCons to PUBLIC
skipping : class oracle/xquery/exec/XMLCons
synonym  : oracle/xquery/exec/XMLCons
granting : execute on class oracle/xquery/exec/XMLElem to PUBLIC
skipping : class oracle/xquery/exec/XMLElem
synonym  : oracle/xquery/exec/XMLElem
granting : execute on class oracle/xquery/exec/XQPrintDriver to PUBLIC
skipping : class oracle/xquery/exec/XQPrintDriver
synonym  : oracle/xquery/exec/XQPrintDriver
granting : execute on class oracle/xquery/exec/XQRangeExpr$XQRangeExprIterator
to PUBLIC
skipping : class oracle/xquery/exec/XQRangeExpr$XQRangeExprIterator
synonym  : oracle/xquery/exec/XQRangeExpr$XQRangeExprIterator
granting : execute on class oracle/xquery/exec/XQRangeExpr to PUBLIC
skipping : class oracle/xquery/exec/XQRangeExpr
synonym  : oracle/xquery/exec/XQRangeExpr
granting : execute on class oracle/xquery/exec/XQueryAuthenticator to PUBLIC
skipping : class oracle/xquery/exec/XQueryAuthenticator
synonym  : oracle/xquery/exec/XQueryAuthenticator
granting : execute on class oracle/xquery/exec/XQueryConstants to PUBLIC
skipping : class oracle/xquery/exec/XQueryConstants
synonym  : oracle/xquery/exec/XQueryConstants
granting : execute on class oracle/xquery/exec/XQueryUtils to PUBLIC
skipping : class oracle/xquery/exec/XQueryUtils
synonym  : oracle/xquery/exec/XQueryUtils
granting : execute on class oracle/xquery/exec/XpathExpr$XpathExprIterator to
PUBLIC
skipping : class oracle/xquery/exec/XpathExpr$XpathExprIterator
synonym  : oracle/xquery/exec/XpathExpr$XpathExprIterator
granting : execute on class oracle/xquery/exec/XpathExpr to PUBLIC
skipping : class oracle/xquery/exec/XpathExpr
synonym  : oracle/xquery/exec/XpathExpr
granting : execute on class oracle/xquery/exec/XpathExprStreamingIterator to
PUBLIC
skipping : class oracle/xquery/exec/XpathExprStreamingIterator
synonym  : oracle/xquery/exec/XpathExprStreamingIterator
granting : execute on class oracle/xquery/servlet/XQServlet to PUBLIC
resolving: class oracle/xquery/servlet/XQServlet
synonym  : oracle/xquery/servlet/XQServlet
granting : execute on class oracle/xquery/Configuration to PUBLIC
skipping : class oracle/xquery/Configuration
synonym  : oracle/xquery/Configuration
granting : execute on class oracle/xquery/OXQServer to PUBLIC
resolving: class oracle/xquery/OXQServer
synonym  : oracle/xquery/OXQServer
granting : execute on class oracle/xquery/PreparedXQuery to PUBLIC
skipping : class oracle/xquery/PreparedXQuery
synonym  : oracle/xquery/PreparedXQuery
granting : execute on class oracle/xquery/SQLDataSource to PUBLIC
resolving: class oracle/xquery/SQLDataSource
synonym  : oracle/xquery/SQLDataSource
granting : execute on class oracle/xquery/SQLIterator to PUBLIC
skipping : class oracle/xquery/SQLIterator
synonym  : oracle/xquery/SQLIterator
granting : execute on class oracle/xquery/ThreadSerialNum$1 to PUBLIC
skipping : class oracle/xquery/ThreadSerialNum$1
synonym  : oracle/xquery/ThreadSerialNum$1
granting : execute on class oracle/xquery/ThreadSerialNum to PUBLIC
skipping : class oracle/xquery/ThreadSerialNum
synonym  : oracle/xquery/ThreadSerialNum
granting : execute on class oracle/xquery/XDBPreparedXQuery to PUBLIC
skipping : class oracle/xquery/XDBPreparedXQuery
synonym  : oracle/xquery/XDBPreparedXQuery
granting : execute on class oracle/xquery/XMLDataSource to PUBLIC
skipping : class oracle/xquery/XMLDataSource
synonym  : oracle/xquery/XMLDataSource
granting : execute on class oracle/xquery/XMLDataSourceIterator to PUBLIC
skipping : class oracle/xquery/XMLDataSourceIterator
synonym  : oracle/xquery/XMLDataSourceIterator
granting : execute on class oracle/xquery/XQException to PUBLIC
skipping : class oracle/xquery/XQException
synonym  : oracle/xquery/XQException
granting : execute on class oracle/xquery/XQLPlus to PUBLIC
resolving: class oracle/xquery/XQLPlus
synonym  : oracle/xquery/XQLPlus
granting : execute on class oracle/xquery/XQMesg to PUBLIC
skipping : class oracle/xquery/XQMesg
synonym  : oracle/xquery/XQMesg
granting : execute on class oracle/xquery/XQPageManagerPool to PUBLIC
skipping : class oracle/xquery/XQPageManagerPool
synonym  : oracle/xquery/XQPageManagerPool
granting : execute on class oracle/xquery/XQueryContext to PUBLIC
skipping : class oracle/xquery/XQueryContext
synonym  : oracle/xquery/XQueryContext
granting : execute on class oracle/xquery/XQueryContextHandler to PUBLIC
skipping : class oracle/xquery/XQueryContextHandler
synonym  : oracle/xquery/XQueryContextHandler
granting : execute on class oracle/xquery/XQueryDataSource to PUBLIC
resolving: class oracle/xquery/XQueryDataSource
synonym  : oracle/xquery/XQueryDataSource
granting : execute on resource oracle/xquery/mesg/XQMessages.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_ar.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_ar.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_cs.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_cs.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_da.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_da.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_de.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_de.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_el.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_el.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_es.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_es.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_fi.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_fi.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_fr.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_fr.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_hu.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_hu.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_it.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_it.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_iw.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_iw.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_ja.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_ja.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_ko.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_ko.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_nl.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_nl.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_no.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_no.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_pl.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_pl.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_pt.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_pt.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_pt_BR.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_pt_BR.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_ro.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_ro.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_ru.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_ru.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_sk.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_sk.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_sv.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_sv.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_th.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_th.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_tr.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_tr.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_zh_CN.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_zh_CN.properties
granting : execute on resource oracle/xquery/mesg/XQMessages_zh_TW.properties to
PUBLIC
skipping : resource oracle/xquery/mesg/XQMessages_zh_TW.properties
granting : execute on resource oracle/xquery/config.properties to PUBLIC
skipping : resource oracle/xquery/config.properties
Classes Loaded: 247
Resources Loaded: 28
Sources Loaded: 0
Published Interfaces: 0
Classes generated: 0
Classes skipped: 0
Synonyms Created: 247
Errors: 0

Call completed.

SQL> 
SQL> drop procedure xdk_load_jar;

Procedure dropped.

SQL> 
SQL> EXECUTE dbms_registry.loaded('XML');

PL/SQL procedure successfully completed.

SQL> 
SQL> -- The procedure called xmlvalidate is supposed to determine
SQL> -- whether the Java classes associated with the XDK for Java
SQL> -- are valid.
SQL> -- We look in OBJ$ for rows that represent Java classes
SQL> -- with specific names (for specific Java packages),
SQL> -- and where the status is not "okay".
SQL> -- If there are any such classes, then the XDK is NOT valid.
SQL> 
SQL> create or replace procedure xmlvalidate is
  2    p_num NUMBER;
  3  begin
  4    SELECT COUNT(*) INTO p_num
  5    FROM obj$
  6    WHERE type# = 29 AND owner# = 0 AND status <> 1
  7      AND ( 1=0
  8          OR name like 'javax/xml%'
  9          OR name like 'javax/xml/namespace%'
 10          OR name like 'javax/xml/parsers%'
 11          OR name like 'javax/xml/transform%'
 12          OR name like 'javax/xml/transform/dom%'
 13          OR name like 'javax/xml/transform/sax%'
 14          OR name like 'javax/xml/transform/stream%'
 15          OR name like 'oracle/xml/async%'
 16          OR name like 'oracle/xml/comp%'
 17          OR name like 'oracle/xml/jaxp%'
 18          OR name like 'oracle/xml/jdwp%'
 19          OR name like 'oracle/xml/mesg%'
 20          OR name like 'oracle/xml/parser%'
 21          OR name like 'oracle/xml/sql%'
 22          OR name like 'oracle/xml/util%'
 23          OR name like 'oracle/xml/xpath%'
 24          OR name like 'oracle/xml/xqxp%'
 25          OR name like 'oracle/xml/xslt%'
 26          OR name like 'org/w3c/dom%'
 27          OR name like 'org/xml/sax%'
 28          OR name like 'OracleXML%'
 29          OR name like 'oracle/xquery%'
 30      );
 31    IF p_num != 0 THEN
 32      dbms_registry.invalid('XML');
 33    ELSE
 34      dbms_registry.valid('XML');
 35    END IF;
 36    EXCEPTION WHEN no_data_found THEN
 37      dbms_registry.valid('XML');
 38  end xmlvalidate;
 39  /

Procedure created.

SQL> 
SQL> show errors;
No errors.
SQL> 
SQL> EXECUTE xmlvalidate;

PL/SQL procedure successfully completed.

SQL> 
SQL> -- The following lines are necessary in order to turn off
SQL> -- the call to dbms_java.set_output() that we did earlier.
SQL> 
SQL> declare
  2    retval varchar2(1234);
  3  begin
  4    retval := dbms_java.endsession_and_related_state();
  5    dbms_output.put_line('retval from endsession: ' || retval);
  6  end ;
  7  /
retval from endsession: java session and permanent state ended

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Reset to the default.
SQL> set serveroutput off;
SQL> 
SQL> Rem end of initxml.sql
SQL> 
SQL> @/u01/app/oracle/product/11.2.0.4/db_1/xdk/admin/xmlja.sql;
SQL> Rem
SQL> Rem $Header: xmlja.sql 26-dec-2001.17:16:22 kkarun Exp $
SQL> Rem
SQL> Rem xmlja.sql
SQL> Rem
SQL> Rem Copyright (c) 2000, 2001, Oracle Corporation.  All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      xmlja.sql - Loads NCOMP'ed XML Parser
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem
SQL> Rem    NOTES
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    kkarun      12/26/01 -
> Rem    kkarun      10/31/00 - Created
SQL> Rem
SQL> 
SQL> begin
  2  declare
  3    s varchar2(100);
  4  begin
  5    s := 'We are no longer doing Java Accelerator for XDK anymore';
  6  end;
  7  end;
  8  /

PL/SQL procedure successfully completed.

SQL> @/u01/app/oracle/product/11.2.0.4/db_1/rdbms/admin/catjava.sql;
SQL> Rem
SQL> Rem $Header: rdbms/admin/catjava.sql /main/13 2009/02/20 03:15:05 ssonawan Exp $
SQL> Rem
SQL> Rem catjava.sql
SQL> Rem
SQL> Rem Copyright (c) 2001, 2009, Oracle and/or its affiliates.
SQL> Rem All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      catjava.sql - CATalog scripts for JAVA
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      This script loads the java classes for RDBMS features; it
SQL> Rem      should be run after JAVA is loaded into the database.  The
SQL> Rem      CATNOJAV.SQL script should be used to remove these java
SQL> Rem      classes prior to removing JAVA from the database.
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      Use SQL*Plus when connected AS SYSDBA
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    ssonawan    02/13/09 - Bug 6736417: Don't load appctx package
SQL> Rem    rgmani      04/02/08 - Load scheduler java package
SQL> Rem    gssmith     02/05/07 - Remove Summary Advisor Java component
SQL> Rem    nireland    06/09/05 - Increase buffer size. #4380942
SQL> Rem    mkrishna    11/15/04 - add xquery jar by defaut
SQL> Rem    rburns      09/09/03 - cleanup
SQL> Rem    jwwarner    06/24/03 - add loading of catxdbj.sql here
SQL> Rem    rburns      04/26/03 - use serveroutput for diagnostics
SQL> Rem    rburns      06/13/02 - comments for catnojav.sql
SQL> Rem    rburns      04/05/02 - continue even if Jserver not valid
SQL> Rem    rburns      02/11/02 - add registry version
SQL> Rem    rburns      01/12/02 - Merged rburns_catjava
SQL> Rem    rburns      12/03/01 - Created
SQL> Rem
SQL> 
SQL> DOC
DOC>##########################################################################
DOC>##########################################################################
DOC>   If the following PL/SQL block fails, then JServer is not operational.
DOC>##########################################################################
DOC>##########################################################################
DOC>#
SQL> 
SQL> BEGIN
  2     IF dbms_registry.is_valid('JAVAVM',dbms_registry.release_version) != 1 THEN
  3        RAISE_APPLICATION_ERROR(-20000,
  4             'JServer has not been correctly loaded into the database.');
  5     END IF;
  6  END;
  7  /

PL/SQL procedure successfully completed.

SQL> 
SQL> BEGIN
  2     dbms_registry.loading('CATJAVA','Oracle Database Java Packages',
  3          'DBMS_REGISTRY_SYS.validate_catjava');
  4  END;
  5  /

PL/SQL procedure successfully completed.

SQL> 
SQL> VARIABLE initfile VARCHAR2(32)
SQL> COLUMN :initfile NEW_VALUE init_file NOPRINT;
SQL> 
SQL> Rem =====================================================================
SQL> Rem Change Data Capture
SQL> Rem =====================================================================
SQL> 
SQL> BEGIN
  2    IF dbms_registry.is_valid('JAVAVM',dbms_registry.release_version) = 1 THEN
  3       :initfile := 'initcdc.sql';
  4    ELSE
  5       :initfile := 'nothing.sql';
  6    END IF;
  7  END;
  8  /

PL/SQL procedure successfully completed.

SQL> SELECT :initfile FROM DUAL;




1 row selected.

SQL> @@&init_file
SQL> Rem
SQL> Rem $Header: rdbms/admin/initcdc.sql /main/12 2008/10/29 10:26:35 astoler Exp $
SQL> Rem
SQL> Rem initcdc.sql
SQL> Rem
SQL> Rem Copyright (c) 2000, 2008, Oracle and/or its affiliates. All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      initcdc.sql - script used to load CDC jar files into the database
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      <short description of component this file declares/defines>
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      script must be run as SYS
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    astoler     10/07/08 - bug 6970590
SQL> Rem    mbrey       03/15/06 - bug 5092790 add datapump registration
SQL> Rem    pabingha    02/25/03 - fix undoc interfaces
SQL> Rem    wnorcott    03/14/02 - bug-2239726 disable triggers.
SQL> Rem    wnorcott    01/31/02 - function 'active' return 0 or 1.
SQL> Rem    wnorcott    01/30/02 - disable CDC triggers, CREATE_CHANGE_TABLE re-enables.
SQL> Rem    wnorcott    06/26/01 - rid trailing slash.  As per Mark Jungermann
SQL> Rem    gviswana    05/25/01 - CREATE OR REPLACE SYNONYM
SQL> Rem    jgalanes    11/17/00 - for Import/Export grant execute on util to
SQL> REM                           SELECT_CATLOG_ROLE
SQL> Rem    wnorcott    09/07/00 - new loadjava syntax for performance.
SQL> Rem    wnorcott    07/18/00 - rid LOGMNR_UID$.clientid
SQL> Rem    wnorcott    06/28/00 - move logmnr_dict view here
SQL> Rem    wnorcott    03/28/00 - fix trigger install
SQL> Rem    wnorcott    03/27/00 - Install change table triggers
SQL> Rem    mbrey       01/26/00 - script to load CDC jars
SQL> Rem    mbrey       01/26/00 - Created
SQL> Rem
SQL> call sys.dbms_java.loadjava('-v -f -r -s -g public rdbms/jlib/CDC.jar');

Call completed.

SQL> 
SQL> REM
SQL> REM Data Pump support
SQL> REM
SQL> REM Register calls to support full-database export of CDC objects
SQL> REM (most processing is at schema level for future schema-level support,
SQL> REM but can only support database-level for 10iR1 because this is the
SQL> REM only level supported for Streams.)
SQL> REM
SQL> REM During export, CDC generates various import PL/SQL calls that
SQL> REM create CDC metadata rows during the import. The import calls do
SQL> REM not perform any validation on the new metadata rows except for
SQL> REM duplicate index errors.
SQL> REM
SQL> REM During export, CDC also creates, populates, exports and deletes an
SQL> REM import validation table for each schema that owns CDC objects. This
SQL> REM table is used to control validation of CDC objects during the import
SQL> REM after all schemas have been imported. This accounts for cases where,
SQL> REM for example, a change set owned by one publisher contains a change
SQL> REM table owned by a different publisher. During import, each schema's
SQL> REM import validation table is deleted after it has been processed.
SQL> 
SQL> DELETE FROM sys.exppkgact$
  2  WHERE schema = 'SYS' AND package IN ('DBMS_CDC_EXPDP', 'DBMS_CDC_EXPVDP');

0 rows deleted.

SQL> 
SQL> REM pre-system action generates call to bump system SCN
SQL> REM should execute early
SQL> 
SQL> INSERT INTO sys.exppkgact$ (package, schema, class, level#)
  2    VALUES ('DBMS_CDC_EXPDP', 'SYS', 1, 1);

1 row created.

SQL> 
SQL> REM pre-schema callout creates and populates schema's import validation table
SQL> REM post-schema callout drops schema's import validation table
SQL> 
SQL> INSERT INTO sys.exppkgact$ (package, schema, class, level#)
  2    VALUES ('DBMS_CDC_EXPDP', 'SYS', 6, 1000);

1 row created.

SQL> 
SQL> REM post-schema action generates PL/SQL calls to import CDC objects
SQL> REM (must be BEFORE Streams actions so that CDC metadata is present
SQL> REM  before Streams attempts to start any CDC apply handlers)
SQL> 
SQL> INSERT INTO sys.exppkgact$ (package, schema, class, level#)
  2    VALUES ('DBMS_CDC_EXPDP', 'SYS', 2, 1000);

1 row created.

SQL> 
SQL> REM post-schema action generates validation call for schema
SQL> REM (must be AFTER all CDC imports for all schemas have executed)
SQL> REM (must also be AFTER Streams actions for all schemas have executed
SQL> REM  so that Streams objects are present for validation)
SQL> 
SQL> INSERT INTO sys.exppkgact$ (package, schema, class, level#)
  2    VALUES ('DBMS_CDC_EXPVDP', 'SYS', 2, 6000);

1 row created.

SQL> 
SQL> REM
SQL> REM now set up the triggers
SQL> REM
SQL> 
SQL> CREATE OR REPLACE TRIGGER sys.cdc_alter_ctable_before
  2    BEFORE
  3      ALTER ON DATABASE
  4      BEGIN
  5        /* NOP UNLESS A TABLE OBJECT */
  6        IF dictionary_obj_type = 'TABLE'
  7        THEN
  8          sys.dbms_cdc_ipublish.change_table_trigger(dictionary_obj_owner,dictionary_obj_name,sysevent);
  9        END IF;
 10        END;
 11  /

Trigger created.

SQL> CREATE OR REPLACE TRIGGER sys.cdc_create_ctable_after
  2    AFTER
  3      CREATE ON DATABASE
  4      BEGIN
  5        /* NOP UNLESS A TABLE OBJECT */
  6        IF dictionary_obj_type = 'TABLE'
  7        THEN
  8          sys.dbms_cdc_ipublish.change_table_trigger(dictionary_obj_owner,dictionary_obj_name,sysevent);
  9        END IF;
 10        END;
 11  /

Trigger created.

SQL> CREATE OR REPLACE TRIGGER sys.cdc_create_ctable_before
  2    BEFORE
  3      CREATE ON DATABASE
  4      BEGIN
  5        /* NOP UNLESS A TABLE OBJECT */
  6        IF dictionary_obj_type = 'TABLE'
  7        THEN
  8          sys.dbms_cdc_ipublish.change_table_trigger(dictionary_obj_owner,dictionary_obj_name,'LOCK');
  9        END IF;
 10        END;
 11  /

Trigger created.

SQL> CREATE OR REPLACE TRIGGER sys.cdc_drop_ctable_before
  2    BEFORE
  3      DROP ON DATABASE
  4      BEGIN
  5        /* NOP UNLESS A TABLE OBJECT */
  6        IF dictionary_obj_type = 'TABLE'
  7        THEN
  8          sys.dbms_cdc_ipublish.change_table_trigger(dictionary_obj_owner,dictionary_obj_name,sysevent);
  9        END IF;
 10        END;
 11  /

Trigger created.

SQL> Rem    wnorcott    01/30/02 - disable CDC triggers, CREATE_CHANGE_TABLE
SQL> Rem    re-enables them.  therefore database users who never use  CDC will
SQL> Rem    never execute the triggers
SQL> Rem
SQL> ALTER TRIGGER sys.cdc_alter_ctable_before DISABLE;

Trigger altered.

SQL> ALTER TRIGGER sys.cdc_create_ctable_after DISABLE;

Trigger altered.

SQL> ALTER TRIGGER sys.cdc_create_ctable_before DISABLE;

Trigger altered.

SQL> ALTER TRIGGER sys.cdc_drop_ctable_before DISABLE;

Trigger altered.

SQL> 
SQL> -- bug 6970590
SQL> --  Granting execute on dbms_cdc_utility to select_catalog_role is
SQL> --  a security issue and granting to execute_catalog_role is safer,
SQL> --  documentation specifies that the CDC publisher needs to have
SQL> --  both of these role privs so functionality is unaffected
SQL> GRANT execute on sys.dbms_cdc_utility to execute_catalog_role;

Grant succeeded.

SQL> 
SQL> 
SQL> 
SQL> Rem =====================================================================
SQL> Rem SQLJTYPE
SQL> Rem =====================================================================
SQL> 
SQL> BEGIN
  2    IF dbms_registry.is_valid('JAVAVM',dbms_registry.release_version) = 1 THEN
  3       :initfile := 'initsjty.sql';
  4    ELSE
  5       :initfile := 'nothing.sql';
  6    END IF;
  7  END;
  8  /

PL/SQL procedure successfully completed.

SQL> SELECT :initfile FROM DUAL;




1 row selected.

SQL> @@&init_file
SQL> Rem
SQL> Rem $Header: initsqljtype.sql 28-sep-2000.11:58:14 varora Exp $
SQL> Rem
SQL> Rem initsqljtype.sql
SQL> Rem
SQL> Rem  Copyright (c) Oracle Corporation 2000. All Rights Reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      initsqljtype.sql - initialization for sqlj types
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      load java classes required for sqljtype validation
SQL> Rem      and generation of helper classes.
SQL> Rem
SQL> Rem    NOTES
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    varora      09/01/00 - Created
SQL> Rem
SQL> 
SQL> call sys.dbms_java.loadjava('-v -r rdbms/jlib/sqljtype.jar');

Call completed.

SQL> 
SQL> 
SQL> Rem =====================================================================
SQL> Rem AQ JMS
SQL> Rem =====================================================================
SQL> 
SQL> BEGIN
  2    IF dbms_registry.is_valid('JAVAVM',dbms_registry.release_version) = 1 THEN
  3       :initfile := 'initjms.sql';
  4    ELSE
  5       :initfile := 'nothing.sql';
  6    END IF;
  7  END;
  8  /

PL/SQL procedure successfully completed.

SQL> SELECT :initfile FROM DUAL;




1 row selected.

SQL> @@&init_file
SQL> Rem
SQL> Rem $Header: initjms.sql 03-dec-2001.11:51:00 rburns Exp $
SQL> Rem
SQL> Rem initaqjms.sql
SQL> Rem
SQL> Rem Copyright (c) 1999, 2001, Oracle Corporation.  All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      initaqjms.sql - script used to load AQ/JMS jar files into the database
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      <short description of component this file declares/defines>
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      <other useful comments, qualifications, etc.>
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    rburns      12/03/01 - remove echo
SQL> Rem    rbhyrava    09/07/00 - use one loadjava call
SQL> Rem    rbhyrava    04/07/00 - call only once
SQL> Rem    bnainani    10/22/99 - script to load JMS/AQ jar files
SQL> Rem    bnainani    10/22/99 - Created
SQL> Rem
SQL> call sys.dbms_java.loadjava('-v -f -r -s -g public rdbms/jlib/jmscommon.jar');

Call completed.

SQL> call sys.dbms_java.loadjava('-v -f -r -s -g public rdbms/jlib/aqapi.jar');

Call completed.

SQL> 
SQL> Rem =====================================================================
SQL> Rem ODCI and Cartridge Services
SQL> Rem =====================================================================
SQL> 
SQL> BEGIN
  2    IF dbms_registry.is_valid('JAVAVM',dbms_registry.release_version) = 1 THEN
  3       :initfile := 'initsoxx.sql';
  4    ELSE
  5       :initfile := 'nothing.sql';
  6    END IF;
  7  END;
  8  /

PL/SQL procedure successfully completed.

SQL> SELECT :initfile FROM DUAL;




1 row selected.

SQL> @@&init_file
SQL> Rem
SQL> Rem $Header: initsoxx.sql 21-aug-2003.16:24:10 ayoaz Exp $
SQL> Rem
SQL> Rem initsoxx.sql
SQL> Rem
SQL> Rem Copyright (c) 1999, 2003, Oracle Corporation.  All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      initsoxx.sql - loads sql, objects, extensibility and xml related java
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      <short description of component this file declares/defines>
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      script must be run as SYS
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    ayoaz       08/21/03 - change to pl/sql block
SQL> Rem    rshaikh     11/01/99 - script to load ODCI and CartridgeServices jars
SQL> Rem    rshaikh     11/01/99 - Created
SQL> Rem
SQL> 
SQL> begin
  2    sys.dbms_java.loadjava('-f -r rdbms/jlib/CartridgeServices.jar');
  3    sys.dbms_java.loadjava('-v -s -g public rdbms/jlib/CartridgeServices.jar');
  4    sys.dbms_java.loadjava('-f -r rdbms/jlib/ODCI.jar');
  5    sys.dbms_java.loadjava('-v -s -g public rdbms/jlib/ODCI.jar');
  6  end;
  7  /

PL/SQL procedure successfully completed.

SQL> 
SQL> 
SQL> Rem =====================================================================
SQL> Rem XDB Java components if XDK is also loaded
SQL> Rem =====================================================================
SQL> BEGIN
  2    IF dbms_registry.is_valid('JAVAVM',dbms_registry.release_version) = 1 THEN
  3       :initfile := dbms_registry.script('XML', '@catxdbj.sql');
  4    ELSE
  5       :initfile := '@nothing.sql';
  6    END IF;
  7  END;
  8  /

PL/SQL procedure successfully completed.

SQL> SELECT :initfile FROM DUAL;




1 row selected.

SQL> @&init_file
SQL> Rem
SQL> Rem $Header: catxdbj.sql 16-sep-2003.15:01:17 mjaeger Exp $
SQL> Rem
SQL> Rem catxdbj.sql
SQL> Rem
SQL> Rem Copyright (c) 2001, 2003, Oracle Corporation.  All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      catxdbj.sql - Registration of XDB java dom/jndi/bean api jar files
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      This script install the xdb java api IN the sys schema
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      java api are loaded IN the sys schema WITH PUBLIC ACCESS.
SQL> Rem      Needs to run as SYS.
SQL> Rem
SQL> Rem MODIFIED (MM/DD/YY)
SQL> Rem mjaeger   09/16/03 - bug 3015638: move XSU source from rdbms vob to xdk vob
SQL> Rem sichandr  11/07/02 - remove shiphome workaround
SQL> Rem vnimani   04/24/02 - xsu should be picked up from OH/lib
SQL> Rem vnimani   03/18/02 - dont load xmlgen -- deprecated
SQL> Rem gviswana  01/29/02 - CREATE OR REPLACE SYNONYM
SQL> Rem sichandr  01/26/02 - temporary workaround for shiphome
SQL> Rem bkhaladk  01/14/02 - add xsu loading in catxdbj.
SQL> Rem spannala  12/13/01 - removing connect
SQL> Rem bkhaladk  09/20/01 - Created
SQL> Rem
SQL> 
SQL> -- bug 3015638:
SQL> -- Move source code and support files from rdbms vob to xdk vob.
SQL> -- The xsu12.jar file used to get loaded here,
SQL> -- and has now been moved to initxml.sql in the xdk vob.
SQL> 
SQL> -- As part of bug 3015638, we are also commenting out
SQL> -- the loading of the following XDB bits here.
SQL> -- Because XSU (now part of XDK) depends on the XMLType,
SQL> -- the servlet.jar and xdb.jar files must get loaded
SQL> -- before xsu12.jar, and xsu12.jar is now in initxml.sql.
SQL> -- Hence these loads have been moved there,
SQL> -- and they don't need to be here at all.
SQL> -- You can't have the XDB component without the XML component (aka XDK)
SQL> -- in any case (because XDB depends on XDK's parser),
SQL> -- so there's no harm in loading this bit of XDB along with XDK.
SQL> 
SQL> -- At some point in the future, if we separate out just the XMLType,
SQL> -- then that's the only bit that needs to get loaded with XDK,
SQL> -- and it would probably be more appropriate to load
SQL> -- servlet.jar and xdb.jar here, rather than in initxml.sql.
SQL> 
SQL> -- call sys.dbms_java.loadjava('-s -g public -f -r rdbms/jlib/servlet.jar');
SQL> -- call sys.dbms_java.loadjava('-s -g public -f -r rdbms/jlib/xdb.jar');
SQL> 
SQL> 
SQL> Rem Load XQuery java classes ONLY if XDK java is loaded
SQL> BEGIN
  2    IF dbms_registry.is_valid('JAVAVM',dbms_registry.release_version) = 1 THEN
  3       :initfile := dbms_registry.script('XML', '@initxqry.sql');
  4    ELSE
  5       :initfile := '@nothing.sql';
  6    END IF;
  7  END;
  8  /

PL/SQL procedure successfully completed.

SQL> SELECT :initfile FROM DUAL;




1 row selected.

SQL> @&init_file
SQL> Rem
SQL> Rem $Header: rdbms/admin/initxqry.sql /main/22 2009/12/24 15:21:56 yinlu Exp $
SQL> Rem
SQL> Rem initxqry.sql
SQL> Rem
SQL> Rem Copyright (c) 2004, 2009, Oracle and/or its affiliates.
SQL> Rem All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      initxqry.sql - <one-line expansion of the name>
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      <short description of component this file declares/defines>
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      <other useful comments, qualifications, etc.>
SQL> Rem
SQL> Rem    MODIFIED
SQL> Rem    yinlu       12/22/09 - bug 9226938
SQL> Rem    ayoaz       10/23/08 - add DBMS_XQUERY synonym and eval function
SQL> Rem    yinlu       06/20/08 - remove grant option
SQL> Rem    yinlu       12/26/06 - clean up: remove setLazyDom as it is already
SQL> Rem                           handled in flag
SQL> Rem    zliu        10/18/06 - handle transfer of builtin numeric type
SQL> Rem    zliu        10/06/06 - support xmlquery with xq atomic input
SQL> Rem    zliu        10/05/06 - support xquery in xmltable column expr
SQL> Rem    yinlu       08/25/06 - prepare with flags
SQL> Rem    zliu        03/29/06 - XbranchMerge zliu_xquery_nolimit from
SQL> Rem                           st_rdbms_10.2
SQL> Rem    zliu        02/05/06 - cache xquery plan
SQL> Rem    zliu        12/01/05 - add constants
SQL> Rem    zliu        11/30/05 - support XMLEXISTS func eval
SQL> Rem    zliu        03/16/06 - handle xquery as clob input
SQL> Rem    ayoaz       03/14/05 - change bind arg to xmltype
SQL> Rem    hxzhang     05/03/05 - added setLazyDom
SQL> Rem    kmuthiah    02/23/05 - load xquery in initxml.sql, not here
SQL> Rem    mkrishna    11/19/04 - pass in schema
SQL> Rem    mkrishna    11/18/04 - multi args to JAva
SQL> Rem    mkrishna    11/15/04 - remove references to xmlparser
SQL> Rem    mkrishna    09/13/04 - make str size to be 4K
SQL> Rem    mkrishna    08/23/04 - handle exceptions correctly
SQL> Rem    mkrishna    08/21/04 - handle null entries in fetchall
SQL> Rem    mkrishna    08/19/04 - use /a/node() instead of *
SQL> Rem    mkrishna    08/15/04 - add new initxqry
SQL> Rem    kmuthiah    08/11/04 - do not load private xmlparserv2.jar
SQL> Rem    mkrishna    07/31/04 - add -f option
SQL> Rem    mkrishna    07/23/04 - use nls_sort
SQL> Rem    yinlu       07/21/04 - force to load xmlparserv2.jar
SQL> Rem    mkrishna    06/15/04 - use clobs instead of strings
SQL> Rem    zliu        05/11/04 - make execute parallel enabled
SQL> Rem    mkrishna    04/28/04 - mkrishna_xquery_server
SQL> Rem    mkrishna    03/31/04 - remove C dependency
SQL> Rem    mkrishna    01/21/04 - change to DBMS_XQUERYINT
SQL> Rem    mkrishna    01/15/04 - support function registeration
SQL> Rem    mkrishna    01/15/04 - use CLOBS
SQL> Rem    mkrishna    01/13/04 - use clobs
SQL> Rem    mkrishna    01/07/04 - add range predicate
SQL> Rem    mkrishna    12/22/03 - add public synonym for dbms_xquery
SQL> Rem    mkrishna    12/08/03 - add getting XQueryX out
SQL> Rem    mkrishna    09/04/03 - Created
SQL> Rem
SQL> 
SQL> create or replace package dbms_xqueryint authid current_user is
  2  
  3   /* flags defined in qmxqrs.c and OXQServer.java */
  4   /* Fragment flag */
  5   QMXQRS_JAVA_FRAGMENT    CONSTANT NUMBER := 1;
  6   QMXQRS_JAVA_SCHEMABASED CONSTANT NUMBER := 2;
  7   /* variable bind is SQL scalar input value */
  8   QMXQRS_JAVA_XS_DEC_INPUT   CONSTANT NUMBER := 4;
  9   QMXQRS_JAVA_XS_STR_INPUT   CONSTANT NUMBER := 8;
 10   QMXQRS_JAVA_XS_FLT_INPUT   CONSTANT NUMBER := 16;
 11   QMXQRS_JAVA_XS_DBL_INPUT   CONSTANT NUMBER := 32;
 12   QMXQRS_JAVA_XS_DATE_INPUT   CONSTANT NUMBER := 64;
 13   QMXQRS_JAVA_XS_TIME_INPUT   CONSTANT NUMBER := 128;
 14   QMXQRS_JAVA_XS_DATETIME_INPUT   CONSTANT NUMBER := 256;
 15   QMXQRS_JAVA_XDT_DYTMDUR_INPUT   CONSTANT NUMBER := 512;
 16   QMXQRS_JAVA_XDT_YRMONDUR_INPUT   CONSTANT NUMBER := 1024;
 17   /* called by exists evaluation */
 18   QMXQRS_JAVA_CHK_EXSTS   CONSTANT NUMBER := 2048;
 19   QMXQRS_JAVA_NO_DOCWRAP   CONSTANT NUMBER := 4096;
 20  
 21   /* qmt.h */
 22   QMTXT_ANYTYPE             CONSTANT NUMBER := 0;
 23   QMTXT_ANYSIMPLETYPE       CONSTANT NUMBER := 1;
 24   QMTXT_STRING              CONSTANT NUMBER := 2;
 25   QMTXT_BOOLEAN             CONSTANT NUMBER := 3;
 26   QMTXT_DECIMAL             CONSTANT NUMBER := 4;
 27   QMTXT_FLOAT               CONSTANT NUMBER := 5;
 28   QMTXT_DOUBLE              CONSTANT NUMBER := 6;
 29   QMTXT_DURATION            CONSTANT NUMBER := 7;
 30   QMTXT_DATETIME            CONSTANT NUMBER := 8;
 31   QMTXT_TIME                CONSTANT NUMBER := 9;
 32   QMTXT_DATE                CONSTANT NUMBER := 10;
 33   QMTXT_GDAY                CONSTANT NUMBER := 11;
 34   QMTXT_GMONTH              CONSTANT NUMBER := 12;
 35   QMTXT_GYEAR               CONSTANT NUMBER := 13;
 36   QMTXT_GYEARMONTH          CONSTANT NUMBER := 14;
 37   QMTXT_GMONTHDAY           CONSTANT NUMBER := 15;
 38   QMTXT_HEXBINARY           CONSTANT NUMBER := 16;
 39   QMTXT_BASE64BINARY        CONSTANT NUMBER := 17;
 40   QMTXT_ANYURI              CONSTANT NUMBER := 18;
 41   QMTXT_QNAME               CONSTANT NUMBER := 19;
 42   QMTXT_NOTATION            CONSTANT NUMBER := 20;
 43  
 44  /*  Derived */
 45   QMTXT_NORMALIZEDSTRING    CONSTANT NUMBER := 21;
 46   QMTXT_TOKEN               CONSTANT NUMBER := 22;
 47   QMTXT_LANGUAGE            CONSTANT NUMBER := 23;
 48   QMTXT_NMTOKEN             CONSTANT NUMBER := 24;
 49   QMTXT_NMTOKENS            CONSTANT NUMBER := 25;
 50   QMTXT_NAME                CONSTANT NUMBER := 26;
 51   QMTXT_NCNAME              CONSTANT NUMBER := 27;
 52   QMTXT_ID                  CONSTANT NUMBER := 28;
 53   QMTXT_IDREF               CONSTANT NUMBER := 29;
 54   QMTXT_IDREFS              CONSTANT NUMBER := 30;
 55   QMTXT_ENTITY              CONSTANT NUMBER := 31;
 56   QMTXT_ENTITIES            CONSTANT NUMBER := 32;
 57   QMTXT_INTEGER             CONSTANT NUMBER := 33;
 58   QMTXT_NONPOSITIVEINTEGER  CONSTANT NUMBER := 34;
 59   QMTXT_NEGATIVEINTEGER     CONSTANT NUMBER := 35;
 60   QMTXT_LONG                CONSTANT NUMBER := 36;
 61   QMTXT_INT                 CONSTANT NUMBER := 37;
 62   QMTXT_SHORT               CONSTANT NUMBER := 38;
 63   QMTXT_BYTE                CONSTANT NUMBER := 39;
 64   QMTXT_NONNEGATIVEINTEGER  CONSTANT NUMBER := 40;
 65   QMTXT_UNSIGNEDLONG        CONSTANT NUMBER := 41;
 66   QMTXT_UNSIGNEDINT         CONSTANT NUMBER := 42;
 67   QMTXT_UNSIGNEDSHORT       CONSTANT NUMBER := 43;
 68   QMTXT_UNSIGNEDBYTE        CONSTANT NUMBER := 44;
 69   QMTXT_POSITIVEINTEGER     CONSTANT NUMBER := 45;
 70  
 71  /* XDB standard simple types */
 72   QMTXT_REF                 CONSTANT NUMBER := 46;
 73  /* Oracle extensions */
 74   QMTXT_QNAMES              CONSTANT NUMBER := 47;
 75  
 76  /*************** XDT basic types for XQuery Primitive Types Beg***************/
 77   QMTXT_XDT_ANYATOMICTYPE   CONSTANT NUMBER := 48;
 78   QMTXT_XDT_UNTYPEDANY      CONSTANT NUMBER := 49;
 79   QMTXT_XDT_UNTYPEDATOMIC   CONSTANT NUMBER := 50;
 80   QMTXT_XDT_DAYTIMEDURATION CONSTANT NUMBER := 51;
 81   QMTXT_XDT_YEARMONTHDURATION CONSTANT NUMBER := 52;
 82  /*************** XDT basic types for XQuery Primitive Types End***************/
 83  
 84   QMTXT_INVALIDTYPE CONSTANT NUMBER := 255;
 85  
 86   /* dtydef.h */
 87   DTYCHR CONSTANT NUMBER := 1;
 88   DTYNUM CONSTANT NUMBER := 2;
 89   DTYIBFLOAT  CONSTANT NUMBER := 100;
 90   DTYIBDOUBLE  CONSTANT NUMBER := 101;
 91   DTYSTZ  CONSTANT NUMBER := 181;
 92   DTYESTZ  CONSTANT NUMBER := 188;
 93   DTYBIN  CONSTANT NUMBER := 23;
 94   DTYIDS  CONSTANT NUMBER := 183;
 95   DTYEIDS  CONSTANT NUMBER := 190;
 96   DTYIYM  CONSTANT NUMBER := 182;
 97   DTYEIYM  CONSTANT NUMBER := 189;
 98  
 99   /* flags used when prepare an XQuery,
100    * defined in qmxqrs.c and Configuration.java */
101   QMXQRS_JCONF_XQ_PUSHDOWN CONSTANT NUMBER := 1;
102   QMXQRS_JCONF_VAR_AS_EXTL CONSTANT NUMBER := 2;
103   QMXQRS_JCONF_EXTL_FUNC_LAX CONSTANT NUMBER := 4;
104   QMXQRS_JCONF_NO_XP_PUSHDOWN CONSTANT NUMBER := 8;
105   QMXQRS_JCONF_NO_STATIC_TYPING CONSTANT NUMBER := 16;
106   QMXQRS_JCONF_ENABLE_LAZY_DOM CONSTANT NUMBER := 32;
107  
108   function exec(hdl in number, retseq in number)
109     return sys.xmltype parallel_enable;
110  
111   /****************/
112   FUNCTION execallCmn(xqry in varchar2,  nlssrt in varchar2, nlscmp in varchar2,
113          dbchr in varchar2, retseq in number, flags in number, xqryclb in clob,
114          xqisclob in number, hdl in out number)
115    return sys.xmltype;
116  
117   FUNCTION execall(xqry in varchar2,  nlssrt in varchar2, nlscmp in varchar2,
118          dbchr in varchar2, retseq in number, flags in number,
119          hdl in out number)
120    return sys.xmltype parallel_enable;
121  
122  
123   FUNCTION execallxclb(xqryclb in clob,  nlssrt in varchar2, nlscmp in varchar2,
124          dbchr in varchar2, retseq in number, flags in number,
125          hdl in out number)
126    return sys.xmltype parallel_enable;
127   /****************/
128  
129   /****************/
130   FUNCTION executeCmn(xqry in varchar2, xctx in xmltype:=null, retseq in number := 0, xqryclb in clob, xqisclob in number)
131    return sys.xmltype  parallel_enable;
132  
133   function execute(xqry in varchar2, xctx in xmltype := null,
134                    retseq in number := 0)
135     return sys.xmltype parallel_enable;
136  
137   function executexclb(xqry in clob, xctx in xmltype := null,
138                    retseq in number := 0)
139     return sys.xmltype parallel_enable;
140   /****************/
141  
142   function getXQueryX(xqry in varchar2) return clob parallel_enable;
143   function getXQueryXxclb(xqry in clob) return clob parallel_enable;
144  
145    function prepare(xqry in varchar2, nlssrt in varchar2, nlscmp in varchar2, dbchr in varchar2, flags in number) return number;
146    function preparexclb(xqry in clob, nlssrt in varchar2, nlscmp in varchar2, dbchr in varchar2, flags in number) return number;
147  
148    procedure bind(hdl in number, name in varchar2, flags in number, xctx in clob, schema in varchar2 ) ;
149  
150    procedure bindWithType(hdl in number, name in varchar2, flags in number, xctx in clob, schema in varchar2 , xqtype in number) ;
151  
152   function bindXML(hdl in number, name in varchar2, xctx in sys.xmltype)
153    return number
154    as LANGUAGE JAVA NAME
155     'oracle.xquery.OXQServer.bindXML(int, java.lang.String, oracle.xdb.XMLType)
156       return int';
157  
158    procedure execQuery(hdl in number);
159    function fetchAll(hdl in number, xctx in out clob, flags in out number)
160    return number;
161    function fetchOne(hdl in number, xctx in out clob, flags in out number, str out varchar2, xqtype in out number) return number;
162    procedure closeHdl(hdl in number);
163  
164   /* XMLExists Support */
165   function exec_exists(hdl in number, retseq in number) return number;
166   function execall_exists(xqry in varchar2,  nlssrt in varchar2,
167          nlscmp in varchar2,
168          dbchr in varchar2, retseq in number, flags in number,
169          hdl in out number)
170     return number;
171   FUNCTION execallxclb_exists(xqryclb in clob,  nlssrt in varchar2,
172          nlscmp in varchar2,
173          dbchr in varchar2, retseq in number, flags in number,
174          hdl in out number)
175    return number;
176  
177  end;
178  /

Package created.

SQL> 
SQL> CREATE OR REPLACE PACKAGE BODY dbms_xqueryint  AS
  2  
  3   FUNCTION prepare(xqry in varchar2,
  4                nlssrt in varchar2, nlscmp in varchar2, dbchr in varchar2, flags in number)  return number
  5     as LANGUAGE JAVA NAME
  6     'oracle.xquery.OXQServer.prepareQuery(java.lang.String,
  7           java.lang.String, java.lang.String, java.lang.String, int) return int';
  8  
  9   FUNCTION preparexclb(xqry in clob,
 10                nlssrt in varchar2, nlscmp in varchar2, dbchr in varchar2, flags in number)  return number
 11     as LANGUAGE JAVA NAME
 12     'oracle.xquery.OXQServer.prepareQuery(oracle.sql.CLOB,
 13           java.lang.String, java.lang.String, java.lang.String, int) return int';
 14  
 15   /*pass null for context binds. */
 16   procedure bind(hdl in number, name  in varchar2, flags  in number,
 17      xctx in clob, schema in varchar2)
 18    as LANGUAGE JAVA NAME
 19     'oracle.xquery.OXQServer.bind(int, java.lang.String, int, oracle.sql.CLOB,
 20       java.lang.String)';
 21  
 22    procedure bindWithType(hdl in number, name in varchar2, flags in number, xctx in clob, schema in varchar2 , xqtype in number)
 23    as LANGUAGE JAVA NAME
 24     'oracle.xquery.OXQServer.bindWithType(int, java.lang.String, int,
 25       oracle.sql.CLOB,
 26       java.lang.String, int)';
 27  
 28   FUNCTION fetchOne(hdl in number, xctx in out clob, flags in out number,
 29       str out varchar2, xqtype in out number) return number as LANGUAGE JAVA NAME
 30     'oracle.xquery.OXQServer.fetchOne(int, oracle.sql.CLOB[], int[],
 31       java.lang.String[], int[]) return int';
 32  
 33   FUNCTION fetchAll(hdl in number, xctx in out clob, flags in out number)
 34     return number
 35        as LANGUAGE JAVA NAME
 36     'oracle.xquery.OXQServer.fetchAll(int, oracle.sql.CLOB[], int[]) return int';
 37  
 38   procedure execQuery(hdl in number) as LANGUAGE JAVA NAME
 39     'oracle.xquery.OXQServer.execute(int)' ;
 40  
 41   procedure closeHdl(hdl in number) as LANGUAGE JAVA NAME
 42     'oracle.xquery.OXQServer.closeHdl(int)' ;
 43  
 44   /* return xmltype(content) */
 45   FUNCTION exec_cont(hdl in number) return sys.xmltype is
 46      clb clob := ' ';
 47     ret xmltype := null;
 48     outflg number := 0;
 49     fetch_ok number ;
 50   begin
 51  
 52     fetch_ok := fetchAll(hdl, clb, outflg);
 53  
 54     if  fetch_ok >= 1 then
 55       if outflg  = QMXQRS_JAVA_FRAGMENT then
 56         ret :=
 57         xmltype.createxml('<A>'||  clb || '</A>',null,1,1).extract('/A/node()');
 58       else
 59          ret :=  xmltype.createxml(clb, null, 1,1);
 60       end if;
 61     end if;
 62  
 63      /* we cache the xquery plan in qmxqrs.c level, so we don't close the
 64       * handle ourselves, instead, replying on qmxqrs.c to call plan close
 65       */
 66     /*closeHdl(hdl);*/
 67     return ret;
 68  
 69   end;
 70  
 71   /* return a sequence */
 72   FUNCTION exec_seq(hdl in number) return sys.xmltype is
 73    fetch_ok number;
 74    str varchar2(4000);
 75    clb clob := ' ';
 76     xval xmltype;
 77     ret xmltype := null;
 78    outflg number := 0;
 79    xqtype number := QMTXT_INVALIDTYPE;
 80    noDocWrap number := 0;
 81   begin
 82  
 83     loop
 84  
 85       /* initialize loop variables */
 86       outflg := 0;
 87       xqtype := QMTXT_INVALIDTYPE;
 88       noDocWrap := 0;
 89  
 90       fetch_ok := fetchOne(hdl, clb, outflg, str, xqtype);
 91       if  fetch_ok = 0 then exit; end if;
 92  
 93       if  str is not null then
 94         /* sync with OXQServerJava.getOutAtomicType() */
 95         /*
 96         dbms_output.put_line('xqtype = ' || to_char(xqtype));
 97         dbms_output.put_line('outflg = ' || to_char(outflg));
 98         */
 99         if xqtype = QMTXT_STRING then
100           /*DTYCHR; QMTXT_STRING;*/
101           select SYS_XQ_PKSQL2XML(str, 1, 2) into xval from dual;
102         elsif xqtype =  QMTXT_DECIMAL then
103           /*DTYNUM; QMTXT_DECIMAL;*/
104           select SYS_XQ_PKSQL2XML(to_number(str), 2, 4) into xval from dual;
105         elsif xqtype =  QMTXT_INTEGER then
106           /*DTYNUM; QMTXT_INTEGER;*/
107           select SYS_XQ_PKSQL2XML(to_number(str), 2, 33) into xval from dual;
108         elsif xqtype =  QMTXT_DATE then
109           /*DTYSTZ; QMTXT_DATE;*/
110           select SYS_XQ_PKSQL2XML(SYS_XMLCONV(str,3,10,0,0,181), 181, 10)
111           into xval
112           from dual;
113         elsif xqtype =  QMTXT_TIME then
114           /*DTYSTZ; QMTXT_TIME;*/
115           select SYS_XQ_PKSQL2XML(SYS_XMLCONV(str,3,9,0,0,181), 181, 9)
116           into xval
117           from dual;
118         elsif xqtype =  QMTXT_DATETIME then
119           /*DTYSTZ; QMTXT_DATETIME;*/
120           select SYS_XQ_PKSQL2XML(SYS_XMLCONV(str,3,8,0,0,181), 181, 8)
121           into xval
122           from dual;
123         elsif xqtype =  QMTXT_FLOAT then
124           /*DTYIBFLOAT; QMTXT_FLOAT;*/
125           select SYS_XQ_PKSQL2XML(to_binary_float(str), 100, 5) into xval from dual;
126         elsif xqtype =  QMTXT_DOUBLE then
127           /*DTYIBDOUBLE; QMTXT_DOUBLE;*/
128           select SYS_XQ_PKSQL2XML(to_binary_double(str), 101, 6) into xval from dual;
129          elsif xqtype =  QMTXT_XDT_YEARMONTHDURATION then
130           /*DTYEIYM; QMTXT_XDT_YEARMONTHDURATION;*/
131           select SYS_XQ_PKSQL2XML(SYS_XMLCONV(str,3,52,0,0,189), 189, 52) into xval from dual;
132          elsif xqtype =  QMTXT_XDT_DAYTIMEDURATION then
133           /*DTYEIDS; QMTXT_XDT_DAYTIMEDURATION;*/
134           select SYS_XQ_PKSQL2XML(SYS_XMLCONV(str,3,51,0,0,190), 190, 51) into xval from dual;
135          elsif xqtype =  QMTXT_BOOLEAN then
136           /*DTYBIN; QMTXT_BOOLEAN;*/
137           select SYS_XQ_PKSQL2XML(case SYS_XQ_ATOMCNVCHK(str,1,3) WHEN '0' THEN HEXTORAW('00')  ELSE HEXTORAW('01')  END, 23, 3) into xval from dual;
138          elsif xqtype =  QMTXT_GDAY then
139           /*DTYSTZ; QMTXT_GDAY;*/
140           select SYS_XQ_PKSQL2XML(SYS_XMLCONV(str,3,11,0,0,181), 181, 11) into xval from dual;
141          elsif xqtype =  QMTXT_GMONTH then
142           /*DTYSTZ; QMTXT_GMONTH;*/
143           select SYS_XQ_PKSQL2XML(SYS_XMLCONV(str,3,12,0,0,181), 181, 12) into xval from dual;
144          elsif xqtype =  QMTXT_GYEAR then
145           /*DTYSTZ; QMTXT_GYEAR;*/
146           select SYS_XQ_PKSQL2XML(SYS_XMLCONV(str,3,13,0,0,181), 181, 13) into xval from dual;
147          elsif xqtype =  QMTXT_GYEARMONTH then
148           /*DTYSTZ; QMTXT_GYEARMONTH;*/
149           select SYS_XQ_PKSQL2XML(SYS_XMLCONV(str,3,14,0,0,181), 181, 14) into xval from dual;
150          elsif xqtype =  QMTXT_GMONTHDAY then
151           /*DTYSTZ; QMTXT_GMONTHDAY;*/
152           select SYS_XQ_PKSQL2XML(SYS_XMLCONV(str,3,15,0,0,181), 181, 15) into xval from dual;
153          elsif xqtype =  QMTXT_DURATION then
154           /*DTYCHR; QMTXT_DURATION;*/
155           select SYS_XQ_PKSQL2XML(str, 1,7) into xval from dual;
156          elsif xqtype =  QMTXT_XDT_UNTYPEDATOMIC then
157           /*DTYCHR; QMTXT_XDT_UNTYPEDATOMIC;*/
158           select SYS_XQ_PKSQL2XML(str, 1,50) into xval from dual;
159          elsif xqtype =  QMTXT_BASE64BINARY  then
160           /*DTYBIN; QMTXT_BASE64BINARY ;*/
161           select SYS_XQ_PKSQL2XML(SYS_XMLCONV(str,3,17,0,0,23), 23, 17) into xval from dual;
162          elsif xqtype =  QMTXT_HEXBINARY  then
163           /*DTYBIN; QMTXT_HEXBINARY ;*/
164           select SYS_XQ_PKSQL2XML(HEXTORAW(str), 23, 16) into xval from dual;
165          elsif xqtype =  QMTXT_NONPOSITIVEINTEGER  then
166           /*DTYNUM; QMTXT_NONPOSITIVEINTEGER ;*/
167           select SYS_XQ_PKSQL2XML(SYS_XQ_ATOMCNVCHK(to_number(str),2,34), 2, 34) into xval from dual;
168          elsif xqtype =  QMTXT_NEGATIVEINTEGER  then
169           /*DTYNUM; QMTXT_NEGATIVEINTEGER ;*/
170           select SYS_XQ_PKSQL2XML(SYS_XQ_ATOMCNVCHK(to_number(str),2,35), 2, 35) into xval from dual;
171          elsif xqtype =  QMTXT_LONG  then
172           /*DTYNUM; QMTXT_LONG ;*/
173           select SYS_XQ_PKSQL2XML(SYS_XQ_ATOMCNVCHK(to_number(str),2,36), 2, 36) into xval from dual;
174          elsif xqtype =  QMTXT_INT  then
175           /*DTYNUM; QMTXT_POSITIVEINTEGER ;*/
176           select SYS_XQ_PKSQL2XML(SYS_XQ_ATOMCNVCHK(to_number(str),2,37), 2, 37) into xval from dual;
177          elsif xqtype =  QMTXT_SHORT  then
178           /*DTYNUM; QMTXT_SHORT ;*/
179           select SYS_XQ_PKSQL2XML(SYS_XQ_ATOMCNVCHK(to_number(str),2,38), 2, 38) into xval from dual;
180          elsif xqtype =  QMTXT_BYTE  then
181           /*DTYNUM; QMTXT_BYTE ;*/
182           select SYS_XQ_PKSQL2XML(SYS_XQ_ATOMCNVCHK(to_number(str),2,39), 2, 39) into xval from dual;
183          elsif xqtype =  QMTXT_NONNEGATIVEINTEGER  then
184           /*DTYNUM; QMTXT_NONNEGATIVEINTEGER ;*/
185           select SYS_XQ_PKSQL2XML(SYS_XQ_ATOMCNVCHK(to_number(str),2,40), 2, 40) into xval from dual;
186          elsif xqtype =  QMTXT_UNSIGNEDLONG  then
187           /*DTYNUM; UNSIGNEDLONG ;*/
188           select SYS_XQ_PKSQL2XML(SYS_XQ_ATOMCNVCHK(to_number(str),2,41), 2, 41) into xval from dual;
189          elsif xqtype =  QMTXT_UNSIGNEDINT  then
190           /*DTYNUM; UNSIGNEDINT ;*/
191           select SYS_XQ_PKSQL2XML(SYS_XQ_ATOMCNVCHK(to_number(str),2,42), 2, 42) into xval from dual;
192          elsif xqtype =  QMTXT_UNSIGNEDSHORT  then
193           /*DTYNUM; UNSIGNEDSHORT ;*/
194           select SYS_XQ_PKSQL2XML(SYS_XQ_ATOMCNVCHK(to_number(str),2,43), 2, 43) into xval from dual;
195          elsif xqtype =  QMTXT_UNSIGNEDBYTE  then
196           /*DTYNUM; UNSIGNEDBYTE ;*/
197           select SYS_XQ_PKSQL2XML(SYS_XQ_ATOMCNVCHK(to_number(str),2,44), 2, 44) into xval from dual;
198          elsif xqtype =  QMTXT_POSITIVEINTEGER  then
199           /*DTYNUM; QMTXT_POSITIVEINTEGER ;*/
200           select SYS_XQ_PKSQL2XML(SYS_XQ_ATOMCNVCHK(to_number(str),2,45), 2, 45) into xval from dual;
201         else
202           /*DTYCHR; QMTXT_STRING;*/
203           select SYS_XQ_PKSQL2XML(str, 1, 2) into xval from dual;
204         end if;
205       else
206         if bitand(outflg, QMXQRS_JAVA_NO_DOCWRAP) = QMXQRS_JAVA_NO_DOCWRAP then
207           noDocWrap := 1;
208         end if;
209         if bitand(outflg, QMXQRS_JAVA_FRAGMENT) = QMXQRS_JAVA_FRAGMENT then
210           /* This make pi , comment, text, attribute node to go through this,
211            * however, attribute node can not survive from /A/node() as it
212            * becomes text node, we need standalone attribute node tran to
213            * handle this. For these case, however, noDocWrap = 1 and
214            * sys_xqcon2seq() call below will make it turn on NO_DOCWRAP flag.
215            * Also, for the case of xquery DM node constructed from
216            * document {} constructor, the xquery java engine uses
217            * DOM QMXQRS_JAVA_FRAGMENT node to represent this, however, the
218            * noDocWrap =0 in this case and xmltype.extract() returning content
219            * which has NO NO_DOCWRAP flag on, which is right for this case.
220            */
221           xval :=
222            xmltype.createxml('<A>'||clb ||'</A>',null,1,1).extract('/A/node()');
223           /*
224            select extract(xmltype.createxml('<A>'||clb ||'</A>',null,1,1),'/A/node()') into xval
225            from dual;
226           */
227         else
228           /* only document node or single element node goes to here */
229           xval := xmltype.createxml(clb,null,1,1);
230         end if;
231         clb := ' ';
232       end if;
233  
234       /*dbms_output.put_line('noDocWrap = ' || to_char(noDocWrap));*/
235       if (noDocWrap = 1) then
236         /* turn on NO_DOCWRAP flag in the image for node without document node
237          * wrapper.
238          */
239         select sys_xqcon2seq(xval) into xval from dual;
240       end if;
241  
242       select sys_xqconcat(ret, xval) into ret from dual;
243  
244     end loop;
245  
246      /* we cache the xquery plan in qmxqrs.c level, so we don't close the
247       * handle ourselves, instead, replying on qmxqrs.c to call plan close
248       */
249     /*closeHdl(hdl); */
250     return ret;
251   end;
252  
253   /* for XMLEXISTS(), we just want to make sure result is NOT empty sequnce*/
254   FUNCTION exec_exists(hdl in number, retseq in number) return number is
255    fetch_ok number;
256    str varchar2(4000);
257    clb clob := ' ';
258    xval xmltype;
259    ret number := 0;
260    outflg number := QMXQRS_JAVA_CHK_EXSTS; /* pass on flag for XMLEXISTS check*/
261    xqtype number := 0;
262   begin
263  
264  
265       fetch_ok := fetchOne(hdl, clb, outflg, str, xqtype);
266       if  fetch_ok = 0 then
267        ret := 0;
268       else
269         ret := 1;
270       end if;
271  
272      /* we cache the xquery plan in qmxqrs.c level, so we don't close the
273       * handle ourselves, instead, replying on qmxqrs.c to call plan close
274       */
275     /*closeHdl(hdl);*/
276     return ret;
277   end;
278  
279   FUNCTION exec(hdl in number, retseq in number)
280    return sys.xmltype is
281   begin
282     if retseq = 1 then
283       return exec_seq(hdl);
284     else
285       return exec_cont(hdl);
286     end if;
287   end;
288  
289   FUNCTION getXQueryX(xqry in varchar2)  return clob  as LANGUAGE JAVA NAME
290   'oracle.xquery.OXQServer.getXQueryX(java.lang.String) return oracle.sql.CLOB';
291  
292   FUNCTION getXQueryXxclb(xqry in clob)  return clob  as LANGUAGE JAVA NAME
293   'oracle.xquery.OXQServer.getXQueryX(oracle.sql.CLOB) return oracle.sql.CLOB';
294  
295   FUNCTION execallCmn(xqry in varchar2,  nlssrt in varchar2, nlscmp in varchar2,
296          dbchr in varchar2, retseq in number, flags in number, xqryclb in clob,
297          xqisclob in number, hdl in out number)
298    return sys.xmltype is
299      --hdl number;
300   begin
301    if (hdl = 0) then
302      /* xquery plan has not been built, so let's build it */
303      if xqisclob = 1 then
304        hdl := preparexclb(xqryclb, nlssrt, nlscmp, dbchr, flags);
305      else
306        hdl := prepare(xqry, nlssrt, nlscmp, dbchr, flags);
307      end if;
308    end if;
309  
310    execQuery(hdl);
311    return exec(hdl, retseq);
312   end;
313  
314   FUNCTION execallCmn_exists(xqry in varchar2,  nlssrt in varchar2,
315          nlscmp in varchar2,
316          dbchr in varchar2, retseq in number, flags in number, xqryclb in clob,
317          xqisclob in number, hdl in out number)
318    return number is
319      --hdl number;
320   begin
321    if (hdl = 0) then
322      /* xquery plan has not been built, so let's build it */
323      if xqisclob = 1 then
324        hdl := preparexclb(xqryclb, nlssrt, nlscmp, dbchr, flags);
325      else
326        hdl := prepare(xqry, nlssrt, nlscmp, dbchr, flags);
327      end if;
328    end if;
329  
330    execQuery(hdl);
331    return exec_exists(hdl, retseq);
332   end;
333  
334   FUNCTION execall(xqry in varchar2,  nlssrt in varchar2, nlscmp in varchar2,
335          dbchr in varchar2, retseq in number, flags in number, hdl in out number)
336    return sys.xmltype is
337    begin
338      return execallCmn(xqry, nlssrt, nlscmp, dbchr, retseq, flags, null, 0, hdl);
339    end;
340  
341   FUNCTION execallxclb(xqryclb in clob,  nlssrt in varchar2, nlscmp in varchar2,
342          dbchr in varchar2, retseq in number, flags in number, hdl in out number)
343    return sys.xmltype parallel_enable is
344    begin
345      return execallCmn(null, nlssrt, nlscmp, dbchr, retseq, flags, xqryclb, 1, hdl);
346    end;
347  
348   FUNCTION execall_exists(xqry in varchar2,  nlssrt in varchar2,
349          nlscmp in varchar2,
350          dbchr in varchar2, retseq in number, flags in number,
351          hdl in out number)
352    return number is
353    begin
354      return execallCmn_exists(xqry, nlssrt, nlscmp, dbchr, retseq, flags, null, 0, hdl);
355    end;
356  
357   FUNCTION execallxclb_exists(xqryclb in clob,  nlssrt in varchar2,
358          nlscmp in varchar2,
359          dbchr in varchar2, retseq in number, flags in number,
360          hdl in out number)
361    return number is
362    begin
363      return execallCmn_exists(null, nlssrt, nlscmp, dbchr, retseq, flags, xqryclb, 1, hdl);
364    end;
365  
366   /* testing function */
367   FUNCTION executeCmn(xqry in varchar2, xctx in xmltype:=null, retseq in number := 0, xqryclb in clob, xqisclob in number)
368    return sys.xmltype  parallel_enable is
369     a number := 0;
370     dbchr varchar2(30);
371     nlscmp varchar2(30);
372     nlssrt varchar2(30);
373     hdl number;
374   begin
375  
376    select value into dbchr from v$nls_parameters where
377        parameter = 'NLS_CHARACTERSET';
378    select value into nlssrt from v$nls_parameters where
379        parameter = 'NLS_SORT';
380    select value into nlscmp from v$nls_parameters where
381        parameter = 'NLS_COMP';
382  
383     if xqisclob = 1 then
384       hdl := preparexclb(xqryclb, nlssrt, nlscmp, dbchr, 0);
385     else
386       hdl := prepare(xqry, nlssrt, nlscmp, dbchr, 0);
387     end if;
388  
389     if xctx is not null then
390        if xctx.isFragment() = 1 then
391          a := QMXQRS_JAVA_FRAGMENT;
392        end if;
393        bind(hdl, null, a, xctx.getclobval(), xctx.getSchemaURL());
394     end if;
395  
396    execQuery(hdl);
397    return exec(hdl, retseq);
398  
399   end;
400  
401   FUNCTION execute(xqry in varchar2, xctx in xmltype:=null, retseq in number := 0)
402    return sys.xmltype  parallel_enable is
403    begin
404     return  executeCmn(xqry, xctx, retseq, null, 0);
405    end;
406  
407   function executexclb(xqry in clob, xctx in xmltype := null,
408                    retseq in number := 0)
409     return sys.xmltype parallel_enable is
410    begin
411     return  executeCmn(null, xctx, retseq, xqry, 1);
412    end;
413  
414  end;
415  /

Package body created.

SQL> show errors;
No errors.
SQL> /* in case user is upgrading from an earlier version where execute with
SQL>  * grant option was granted, we need to revoke the privilege
SQL>  * then regrant.
SQL>  */
SQL> begin
  2    execute immediate 'revoke execute on dbms_xqueryint from public force';
  3  exception
  4    when others then
  5    null;
  6  end;
  7  /

PL/SQL procedure successfully completed.

SQL> grant execute on dbms_xqueryint to public;

Grant succeeded.

SQL> 
SQL> 
SQL> -- DBMS_XQUERY
SQL> 
SQL> create or replace package dbms_xquery authid current_user is
  2  
  3    FUNCTION eval(xqry varchar2) return xmltype;
  4  
  5  end;
  6  /

Package created.

SQL> show errors;
No errors.
SQL> 
SQL> CREATE OR REPLACE PACKAGE BODY dbms_xquery AS
  2  
  3    FUNCTION eval(xqry varchar2) return xmltype is
  4      pragma autonomous_transaction;
  5      rval xmltype := null;
  6    begin
  7      execute immediate 'select xmlquery(:1 returning content) from dual'
  8        into rval using xqry;
  9      commit;
 10      return rval;
 11    exception
 12      when others then
 13        rollback;
 14        raise;
 15    end;
 16  
 17  end;
 18  /

Package body created.

SQL> show errors;
No errors.
SQL> grant execute on dbms_xquery to public;

Grant succeeded.

SQL> 
SQL> create or replace public synonym dbms_xquery for sys.dbms_xquery;

Synonym created.

SQL> 
SQL> 
SQL> Rem =====================================================================
SQL> Rem Scheduler Java code
SQL> Rem =====================================================================
SQL> 
SQL> BEGIN
  2    IF dbms_registry.is_valid('JAVAVM',dbms_registry.release_version) = 1 THEN
  3       :initfile := 'initscfw.sql';
  4    ELSE
  5       :initfile := 'nothing.sql';
  6    END IF;
  7  END;
  8  /

PL/SQL procedure successfully completed.

SQL> SELECT :initfile FROM DUAL;




1 row selected.

SQL> @@&init_file
SQL> Rem
SQL> Rem $Header: rdbms/admin/initscfw.sql /main/2 2009/02/25 12:59:46 rgmani Exp $
SQL> Rem
SQL> Rem initscfw.sql
SQL> Rem
SQL> Rem Copyright (c) 2008, 2009, Oracle and/or its affiliates.
SQL> Rem All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      initscfw.sql - <one-line expansion of the name>
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      <short description of component this file declares/defines>
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      <other useful comments, qualifications, etc.>
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    rgmani      02/23/09 - Fix trace issue
SQL> Rem    rgmani      04/02/08 - Scheduler file watch java code
SQL> Rem    rgmani      04/02/08 - Created
SQL> Rem
SQL> 
SQL> begin
  2    dbms_java.loadjava('-v -r -s rdbms/jlib/schagent.jar');
  3  end;
  4  /

PL/SQL procedure successfully completed.

SQL> 
SQL> CREATE OR REPLACE
  2    AND COMPILE JAVA SOURCE NAMED "dbFWTrace"
  3  AS
  4  
  5  import oracle.scheduler.agent.fileWatchTrace;
  6  import oracle.jdbc.*;
  7  import oracle.jdbc.pool.OracleDataSource;
  8  import java.sql.Connection;
  9  
 10  public class dbFWTrace implements fileWatchTrace
 11  {
 12    public void writeTrace(String do_trc, String trc_string)
 13    {
 14      if (do_trc.equals("Y"))
 15      {
 16        try
 17        {
 18          OracleDataSource ods = new OracleDataSource();
 19          ods.setURL("jdbc:default:connection");
 20          Connection conn = ods.getConnection();
 21          OracleCallableStatement ocs = (OracleCallableStatement)conn.prepareCall(
 22              "{call dbms_isched.write_file_watch_trace(?, ?)}");
 23          ocs.setString(1, do_trc);
 24          ocs.setString(2, trc_string);
 25          ocs.executeUpdate();
 26          ocs.close();
 27        }
 28        catch (java.sql.SQLException sqlexception)
 29        {
 30          // ignore for now
 31        }
 32      }
 33    }
 34  }
 35  /

Java created.

SQL> 
SQL> CREATE OR REPLACE
  2    AND COMPILE JAVA SOURCE NAMED "schedFileWatcherJava"
  3  AS
  4  import java.util.ArrayList;
  5  import oracle.scheduler.agent.fileWatchRequest;
  6  import oracle.scheduler.agent.fileWatchHistory;
  7  import oracle.scheduler.agent.fileWatchResult;
  8  import oracle.scheduler.agent.fileWatch;
  9  import oracle.scheduler.agent.fileWatchTrace;
 10  import oracle.scheduler.agent.fwRequestWrapper;
 11  import oracle.scheduler.agent.fwReqListWrapper;
 12  import oracle.scheduler.agent.fwResultWrapper;
 13  import oracle.scheduler.agent.fwResListWrapper;
 14  import oracle.scheduler.agent.fwHistoryWrapper;
 15  import oracle.scheduler.agent.fwHstListWrapper;
 16  
 17  public class schedFileWatcherJava
 18  {
 19    public static fwResListWrapper
 20       fwWrapper(fwReqListWrapper reqarr, fwHstListWrapper[] histarr,
 21                 String ohome, String hostname, String do_trc)
 22         throws java.sql.SQLException, java.lang.InterruptedException
 23    {
 24      ArrayList<fileWatchRequest> fwreq_list;
 25      ArrayList<fileWatchHistory> fwhist_list;
 26      ArrayList<fileWatchResult> fwres_list;
 27      fwResListWrapper resarr;
 28      fileWatch   fw;
 29      dbFWTrace   dbtrc;
 30  
 31      dbtrc = new dbFWTrace();
 32      fwreq_list = reqarr.toFWReqList();
 33      fwhist_list = (histarr[0]).toFWHstList();
 34      fw = new fileWatch();
 35      fwres_list = fw.WatchForFile(fwreq_list, fwhist_list,
 36                                   ohome, hostname, do_trc, dbtrc);
 37      resarr = new fwResListWrapper(fwres_list);
 38      histarr[0] = new fwHstListWrapper(fwhist_list);
 39      return resarr;
 40    }
 41  }
 42  /

Java created.

SQL> 
SQL> show errors
No errors.
SQL> 
SQL> Rem =====================================================================
SQL> Rem Only set status to LOADED if JServer is loaded
SQL> Rem =====================================================================
SQL> 
SQL> Rem for invalid object diagnostic output
SQL> SET SERVEROUTPUT ON
SQL> 
SQL> BEGIN
  2     IF dbms_registry.is_valid('JAVAVM',dbms_registry.release_version) = 1 THEN
  3        dbms_registry.loaded('CATJAVA');
  4        dbms_registry_sys.validate_catjava;
  5     END IF;
  6  END;
  7  /

PL/SQL procedure successfully completed.

SQL> SET SERVEROUTPUT OFF
SQL> 
SQL> Rem *********************************************************************
SQL> Rem END CATJAVA.SQL
SQL> Rem *********************************************************************
SQL> @/u01/app/oracle/product/11.2.0.4/db_1/rdbms/admin/catexf.sql;
SQL> Rem
SQL> Rem $Header: catexf.sql 08-feb-2007.14:01:25 ayalaman Exp $
SQL> Rem
SQL> Rem catexf.sql
SQL> Rem
SQL> Rem Copyright (c) 2002, 2007, Oracle. All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      catexf.sql - Top level script to load Expression Filter
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      This script installs the Expression Filter feature in a
SQL> Rem      dedicated EXFSYS schema.
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      See Documentation.
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    ayalaman    02/08/07 - fail on ORA error
SQL> Rem    ayalaman    10/25/04 - fix the validation procedure
SQL> Rem    ayalaman    10/07/04 - new validation procedure in SYS
SQL> Rem    ayalaman    11/21/02 -
> Rem    ayalaman    11/19/02 - add indextype definition
SQL> Rem    ayalaman    09/26/02 - ayalaman_expression_filter_support
SQL> Rem    ayalaman    09/06/02 - Created
SQL> Rem
SQL> 
SQL> WHENEVER SQLERROR EXIT;
SQL> 
SQL> REM
SQL> REM Create the user with a default and temporary tablespace
SQL> REM User will be prompted to enter the password for the user and the
SQL> REM tablespace names
SQL> REM
SQL> @@exfsys.sql
SQL> Rem
SQL> Rem $Header: rdbms/admin/exfsys.sql /main/5 2009/01/08 11:05:06 ayalaman Exp $
SQL> Rem
SQL> Rem exfsys.sql
SQL> Rem
SQL> Rem Copyright (c) 2002, 2008, Oracle. All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      exfsys.sql - <one-line expansion of the name>
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      <short description of component this file declares/defines>
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      <other useful comments, qualifications, etc.>
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    ayalaman    09/02/08 - grant select on dba_tab_colums
SQL> Rem    ayalaman    02/08/07 - revoke connect priv
SQL> Rem    ayalaman    05/19/06 - add execute privs on dbms_jobs
SQL> Rem    ayalaman    01/24/03 - grant permissions for dbms_sys_error
SQL> Rem    ayalaman    09/26/02 - ayalaman_expression_filter_support
SQL> Rem    ayalaman    09/24/02 - lock exfsys user and expire password
SQL> Rem    ayalaman    09/06/02 -
> Rem    ayalaman    09/06/02 - Created
SQL> Rem
SQL> 
SQL> 
SQL> 
SQL> REM
SQL> REM Create the EXFSYS user to hold the dictionary, APIs for the
SQL> REM Expression Filter
SQL> REM
SQL> REM prompt Enter password for user EXFSYS
SQL> REM define password = &1;
SQL> REM prompt Enter default tablespace for the user
SQL> REM define default_tablespace = &2;
SQL> 
SQL> prompt .. creating EXFSYS user
.. creating EXFSYS user
SQL> 
SQL> REM create user exfsys identified by &password default tablespace
SQL> REM   &default_tablespace;
SQL> create user exfsys identified by exfsysss default tablespace sysaux;

User created.

SQL> alter user exfsys password expire;

User altered.

SQL> alter user exfsys account lock;

User altered.

SQL> 
SQL> grant create session to exfsys;

Grant succeeded.

SQL> grant resource to exfsys;

Grant succeeded.

SQL> grant create operator to exfsys;

Grant succeeded.

SQL> grant create indextype to exfsys;

Grant succeeded.

SQL> grant create library to exfsys;

Grant succeeded.

SQL> grant execute on dbms_registry to exfsys;

Grant succeeded.

SQL> grant execute on dbms_sys_error to exfsys;

Grant succeeded.

SQL> grant execute on dbms_job to exfsys;

Grant succeeded.

SQL> grant execute on dbms_scheduler to exfsys;

Grant succeeded.

SQL> 
SQL> REM
SQL> REM Grant Trigger privileges for the EXFSYS user to maintain system
SQL> REM triggers
SQL> REM
SQL> grant create any trigger to exfsys;

Grant succeeded.

SQL> grant administer database trigger to exfsys;

Grant succeeded.

SQL> grant select on dba_tab_columns to exfsys;

Grant succeeded.

SQL> 
SQL> 
SQL> REM
SQL> REM Running as sysdba : set current schema to EXFSYS
SQL> REM
SQL> ALTER SESSION SET CURRENT_SCHEMA = EXFSYS;

Session altered.

SQL> 
SQL> WHENEVER SQLERROR CONTINUE;
SQL> 
SQL> begin
  2    sys.dbms_registry.loading('EXF', 'Oracle Expression Filter',
  3        'validate_exf','EXFSYS');
  4  end;
  5  /

PL/SQL procedure successfully completed.

SQL> 
SQL> REM
SQL> REM Create the Java library in EXFSYS schema
SQL> REM
SQL> prompt .. loading the Expression Filter Java library
.. loading the Expression Filter Java library
SQL> 
SQL> @@initexf.sql
SQL> Rem
SQL> Rem $Header: initexf.sql 08-feb-2007.14:06:07 ayalaman Exp $
SQL> Rem
SQL> Rem initexf.sql
SQL> Rem
SQL> Rem Copyright (c) 2002, 2007, Oracle. All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      initexf.sql - <one-line expansion of the name>
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      <short description of component this file declares/defines>
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      <other useful comments, qualifications, etc.>
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    ayalaman    02/08/07 - bug 5709977
SQL> Rem    ayalaman    09/26/02 - ayalaman_expression_filter_support
SQL> Rem    ayalaman    09/06/02 -
> Rem    ayalaman    09/06/02 - Created
SQL> Rem
SQL> 
SQL> 
SQL> call sys.dbms_java.loadjava(' -v -f -r -schema exfsys rdbms/jlib/ExprFilter.jar');

Call completed.

SQL> 
SQL> grant execute on "oracle/expfil/ExpfilIndex" to public;

Grant succeeded.

SQL> 
SQL> 
SQL> REM
SQL> REM Create Trusted 'C' library
SQL> REM
SQL> CREATE OR REPLACE LIBRARY EXFTLIB TRUSTED AS STATIC;
  2  /

Library created.

SQL> 
SQL> REM
SQL> REM Create required schema objects in the EXFSYS Schema
SQL> REM
SQL> --- Create Types required for Expression Filter
SQL> @@exftyp.sql
SQL> Rem
SQL> Rem $Header: rdbms/admin/exftyp.sql /st_rdbms_11.2.0/1 2013/02/08 05:44:54 sdas Exp $
SQL> Rem
SQL> Rem exftyp.sql
SQL> Rem
SQL> Rem Copyright (c) 2002, 2013, Oracle and/or its affiliates.
SQL> Rem All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      exftyp.sql - EXpression Filter TYPe definitions.
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      Types used by the Expression Filter APIs to pass Expression
SQL> Rem      set metadata and index preferences.
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      See Documentation.
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    sdas        01/22/13 - Backport sdas_bug-16038193 from st_rdbms_12.1.0.1
SQL> Rem    ayalaman    07/22/08 - compiled sparse
SQL> Rem    ayalaman    07/29/05 - contains operator in stored expressions
SQL> Rem    ayalaman    03/10/05 - privs on indextype and operator not required in
SQL> Rem                           10.2
SQL> Rem    ayalaman    01/20/04 - support XPath namespaces
SQL> Rem    ayalaman    08/25/03 - provide a constructor for exf$xpath_tag
SQL> Rem    ayalaman    03/17/03 - remove pragma directives
SQL> Rem    ayalaman    03/13/03 - ext optimizer support
SQL> Rem    ayalaman    11/19/02 - move indextype specification here
SQL> Rem    ayalaman    10/10/02 - add multiple constructors to exf_attribute
SQL> Rem    ayalaman    09/26/02 - ayalaman_expression_filter_support
SQL> Rem    ayalaman    09/06/02 - Created
SQL> Rem
SQL> 
SQL> 
SQL> REM
SQL> REM Expression Filter types
SQL> REM
SQL> 
SQL> /***************************************************************************/
SQL> /*** EXF$INDEXOPER - List of indexable predicate operators               ***/
SQL> /***************************************************************************/
SQL> create or replace type exfsys.exf$indexoper as VARRAY(20) of VARCHAR2(15);
  2  /

Type created.

SQL> 
SQL> create or replace public synonym exf$indexoper for exfsys.exf$indexoper;

Synonym created.

SQL> 
SQL> grant execute on exf$indexoper to public;

Grant succeeded.

SQL> 
SQL> /***************************************************************************/
SQL> /*** EXF$ATTRIBUTE and EXF$ATTRIBUTE_LIST:Used to create attribute lists ***/
SQL> /***   for an attribute set's index parameters                           ***/
SQL> /***************************************************************************/
SQL> create or replace type exf$attribute as object (
  2    attr_name     VARCHAR2(350),
  3    attr_oper     EXF$INDEXOPER,
  4    attr_indexed  VARCHAR2(5),
  5    constructor function exf$attribute(attr_name varchar2)
  6      return self as result,
  7    constructor function exf$attribute(attr_name varchar2,
  8                                       attr_indexed varchar2)
  9      return self as result,
 10    constructor function exf$attribute(attr_name varchar2,
 11                                       attr_oper exf$indexoper,
 12                                       attr_indexed varchar2 default 'FALSE')
 13      return self as result
 14  );
 15  /

Type created.

SQL> 
SQL> show errors;
No errors.
SQL> 
SQL> create or replace type body exf$attribute as
  2    constructor function exf$attribute(attr_name varchar2)
  3      return self as result is
  4    begin
  5      self.attr_name := attr_name;
  6      self.attr_oper := exf$indexoper('all');
  7      self.attr_indexed := 'FALSE';
  8      return;
  9    end;
 10  
 11    constructor function exf$attribute(attr_name varchar2,
 12                                       attr_indexed varchar2)
 13      return self as result is
 14    begin
 15      self.attr_name := attr_name;
 16      self.attr_oper := exf$indexoper('all');
 17      self.attr_indexed := attr_indexed;
 18      return;
 19    end;
 20  
 21    constructor function exf$attribute(attr_name varchar2,
 22                                       attr_oper exf$indexoper,
 23                                       attr_indexed varchar2 default 'FALSE')
 24      return self as result is
 25    begin
 26      self.attr_name := attr_name;
 27      self.attr_oper := attr_oper;
 28      self.attr_indexed := attr_indexed;
 29      return;
 30    end;
 31  end;
 32  /

Type body created.

SQL> 
SQL> show errors;
No errors.
SQL> 
SQL> create or replace type exf$attribute_list as VARRAY(490) of exf$attribute;
  2  /

Type created.

SQL> 
SQL> create or replace public synonym exf$attribute for exfsys.exf$attribute;

Synonym created.

SQL> 
SQL> grant execute on exf$attribute to public;

Grant succeeded.

SQL> 
SQL> create or replace public synonym exf$attribute_list for
  2     exfsys.exf$attribute_list;

Synonym created.

SQL> 
SQL> grant execute on exf$attribute_list to public;

Grant succeeded.

SQL> 
SQL> /***************************************************************************/
SQL> /*** EXF$TABLE_ALIAS - type to create table alias as one of the          ***/
SQL> /***  elementary attribute in an attribute set                           ***/
SQL> /***************************************************************************/
SQL> create type exfsys.exf$table_alias as object (
  2     table_name  VARCHAR2(70)
  3  );
  4  /

Type created.

SQL> 
SQL> create or replace public synonym exf$table_alias for exfsys.exf$table_alias;

Synonym created.

SQL> 
SQL> grant execute on exf$table_alias to public;

Grant succeeded.

SQL> 
SQL> /***************************************************************************/
SQL> /*** EXF$XPATH_TAGS - List of common elements and attributes in an XPath ***/
SQL> /***                 expression set.                                     ***/
SQL> /*** Both common elements and attributes expected in the XPath expr. set ***/
SQL> /*** are configured using the exf$xpath_tag API. In the case of elements,***/
SQL> /*** the TAG_NAME is a name with out a @ extension.                      ***/
SQL> /***************************************************************************/
SQL> create or replace type exf$xpath_tag as object (
  2    tag_name     VARCHAR2(350), -- <ns:name> / <ns:name>@<name2>
  3    tag_indexed  VARCHAR2(5),  -- default 'TRUE' for positional filter and
  4                               -- 'FALSE' for value filter
  5    tag_type     VARCHAR2(30), -- Xschema types mapped to DB types
  6                               -- null value implies a positional filter for
  7                               -- tag. Otherwise a value filter.
  8    constructor function exf$xpath_tag(tag_name varchar2)
  9      return self as result
 10  );
 11  /

Type created.

SQL> 
SQL> show errors;
No errors.
SQL> 
SQL> create or replace type body exf$xpath_tag as
  2    constructor function exf$xpath_tag(tag_name varchar2)
  3      return self as result is
  4    begin
  5      self.tag_name := tag_name;
  6      self.tag_indexed := null;
  7      self.tag_type := null;
  8      return;
  9    end;
 10  end;
 11  /

Type body created.

SQL> 
SQL> show errors;
No errors.
SQL> 
SQL> create or replace type exf$xpath_tags as VARRAY(490) of exf$xpath_tag;
  2  /

Type created.

SQL> 
SQL> grant execute on exf$xpath_tag to public;

Grant succeeded.

SQL> grant execute on exf$xpath_tags to public;

Grant succeeded.

SQL> 
SQL> create or replace public synonym exf$xpath_tag for exfsys.exf$xpath_tag;

Synonym created.

SQL> create or replace public synonym exf$xpath_tags for exfsys.exf$xpath_tags;

Synonym created.

SQL> 
SQL> REM
SQL> REM  Type for configuring a text data type column that can be used to
SQL> REM  process predicates with CONTAINS operator
SQL> REM
SQL> /***************************************************************************/
SQL> /*** EXF$TEXT : Text datatype for CONTAINS operator                      ***/
SQL> /***************************************************************************/
SQL> create type exfsys.exf$text as object (
  2     preferences  VARCHAR2(1000)
  3  );
  4  /

Type created.

SQL> 
SQL> create or replace public synonym exf$text for exfsys.exf$text;

Synonym created.

SQL> 
SQL> grant execute on exf$text to public;

Grant succeeded.

SQL> 
SQL> create or replace type exf$csicode as object (code int, arg varchar2(1000));
  2  /

Type created.

SQL> 
SQL> grant execute on exfsys.exf$csicode to public;

Grant succeeded.

SQL> 
SQL> create or replace type exf$csiset as varray (1000) of exf$csicode;
  2  /

Type created.

SQL> 
SQL> grant execute on exfsys.exf$csiset to public;

Grant succeeded.

SQL> 
SQL> REM
SQL> REM Indextype and Statistics type specifications
SQL> REM
SQL> /*********************** ExpFilter Indextype Interface *********************/
SQL> /*** EXPRESSIONINDEXMETHODS : Interfaces to Indextype implementation     ***/
SQL> /***************************************************************************/
SQL> create or replace type ExpressionIndexMethods AUTHID CURRENT_USER AS object
  2  (
  3    -- cursor set by IndexStart and used in IndexFetch
  4    scanctx RAW(4),
  5  
  6    static function ODCIGetInterfaces(ifcList OUT sys.ODCIObjectList)
  7      return NUMBER,
  8  
  9    --- DDL ---
 10    static function ODCIIndexCreate (idxinfo   sys.ODCIIndexInfo,
 11                                     idxparms  VARCHAR2,
 12                                     idxenv    sys.ODCIEnv)
 13      return NUMBER,
 14    static function ODCIIndexDrop (idxinfo  sys.ODCIIndexInfo,
 15                                   idxenv   sys.ODCIEnv)
 16      return NUMBER,
 17    static function ODCIIndexAlter (idxinfo          sys.ODCIIndexInfo,
 18                                    idxparms  IN OUT VARCHAR2,
 19                                    altopt           NUMBER,
 20                                    idxenv           sys.ODCIEnv)
 21      return NUMBER,
 22    static function ODCIIndexTruncate (idxinfo  sys.ODCIIndexInfo,
 23                                       idxenv   sys.ODCIEnv)
 24      return NUMBER,
 25  
 26    --- DML ---
 27    static function ODCIIndexInsert (idxinfo  sys.ODCIIndexInfo,
 28                                     rid      VARCHAR2,
 29                                     newval   VARCHAR2,
 30                                     idxenv   sys.ODCIEnv)
 31      return NUMBER,
 32    static function ODCIIndexDelete (idxinfo  sys.ODCIIndexInfo,
 33                                     rid      VARCHAR2,
 34                                     oldval   VARCHAR2,
 35                                     idxenv   sys.ODCIEnv)
 36      return NUMBER,
 37    static function ODCIIndexUpdate (idxinfo  sys.ODCIIndexInfo,
 38                                     rid      VARCHAR2,
 39                                     oldval   VARCHAR2,
 40                                     newval   VARCHAR2,
 41                                     idxenv   sys.ODCIEnv)
 42      return NUMBER,
 43  
 44    --- Query ---
 45    static function ODCIIndexStart (ictx    IN OUT ExpressionIndexMethods,
 46                                    idxinfo        sys.ODCIIndexInfo,
 47                                    opi            sys.ODCIPredInfo,
 48                                    oqi            sys.ODCIQueryInfo,
 49                                    strt           NUMBER,
 50                                    stop           NUMBER,
 51                                    ditem          VARCHAR2,
 52                                    idxenv         sys.ODCIEnv)
 53     return NUMBER,
 54  
 55    static function ODCIIndexStart (ictx    IN OUT ExpressionIndexMethods,
 56                                    idxinfo        sys.ODCIIndexInfo,
 57                                    opi            sys.ODCIPredInfo,
 58                                    oqi            sys.ODCIQueryInfo,
 59                                    strt           NUMBER,
 60                                    stop           NUMBER,
 61                                    ditem          sys.AnyData,
 62                                    idxenv         sys.ODCIEnv)
 63     return NUMBER,
 64  
 65    member function ODCIIndexFetch (nrows          NUMBER,
 66                                    rids     OUT   sys.ODCIRidList,
 67                                    idxenv         sys.ODCIEnv)
 68      return  NUMBER IS LANGUAGE C
 69       name "EXF_IFETCH"
 70       library EXFTLIB
 71      with context
 72      parameters (
 73       context,
 74       self,
 75       self INDICATOR STRUCT,
 76       nrows,
 77       nrows INDICATOR,
 78       rids,
 79       rids INDICATOR,
 80       idxenv,
 81       idxenv INDICATOR STRUCT,
 82       return OCINumber
 83     ),
 84  
 85    member function ODCIIndexClose (idxenv        sys.ODCIEnv)
 86      return NUMBER IS LANGUAGE C
 87       name "EXF_ICLOSE"
 88       library EXFTLIB
 89     with context
 90     parameters (
 91       context,
 92       self,
 93       self INDICATOR STRUCT,
 94       idxenv,
 95       idxenv INDICATOR STRUCT,
 96       return OCINumber
 97     ),
 98  
 99    static function ODCIIndexGetMetadata (
100                                    idxinfo  IN    sys.ODCIIndexInfo,
101                                    expver   IN    VARCHAR2,
102                                    newblock OUT   PLS_INTEGER,
103                                    idxenv   IN    sys.ODCIEnv)
104       return VARCHAR2,
105  
106    static function ODCIIndexUtilGetTableNames (
107                                    idxinfo  IN    sys.ODCIIndexInfo,
108                                    readonly IN    PLS_INTEGER,
109                                    version  IN    VARCHAR2,
110                                    context  OUT   PLS_INTEGER)
111       return BOOLEAN,
112  
113    static procedure ODCIIndexUtilCleanup (
114                                    context  IN    PLS_INTEGER),
115  
116    static function pvtcreate_expfil_instance (
117                                    idxinfo        sys.ODCIIndexInfo,
118                                    idxparms       VARCHAR2,
119                                    asname         VARCHAR2,
120                                    esetcol        VARCHAR2)
121       return NUMBER
122  );
123  /

Type created.

SQL> 
SQL> show errors;
No errors.
SQL> 
SQL> /************************* EXPRESSION INDEX STATS **************************/
SQL> /***  EXPRESSIONINDEXSTATS : Statistics for query plans                  ***/
SQL> /***************************************************************************/
SQL> create or replace type ExpressionIndexStats AUTHID CURRENT_USER AS object
  2  (
  3    dummy number(6),
  4    static function ODCIGetInterfaces(ifclist OUT sys.ODCIObjectList)
  5      return number,
  6  
  7    static function ODCIStatsCollect(col sys.ODCIColInfo,
  8      options sys.ODCIStatsOptions, stats OUT RAW, env sys.ODCIEnv)
  9      return number,
 10  
 11    static function ODCIStatsCollect(idx sys.ODCIIndexInfo,
 12      options sys.ODCIStatsOptions, stats OUT RAW, env sys.ODCIEnv)
 13      return number,
 14  
 15    static function ODCIStatsDelete(col sys.ODCIColInfo,
 16      stats OUT RAW, env sys.ODCIEnv) return number,
 17  
 18    static function ODCIStatsDelete(idx sys.ODCIIndexInfo,
 19      stats OUT RAW, env sys.ODCIEnv) return number,
 20  
 21    static function ODCIStatsSelectivity(pred sys.ODCIPredInfo,
 22      sel OUT number, args sys.ODCIArgDescList, strt number,
 23      stop number, expr VARCHAR2, datai VARCHAR2,
 24      env sys.ODCIEnv) return number,
 25  
 26    static function ODCIStatsFunctionCost(func sys.ODCIFuncInfo,
 27      cost OUT sys.ODCICost, args sys.ODCIArgDescList,
 28      expr VARCHAR2, datai VARCHAR2, env sys.ODCIEnv) return number,
 29  
 30    static function ODCIStatsIndexCost(idx sys.ODCIIndexInfo,
 31      sel number, cost OUT sys.ODCICost, qi sys.ODCIQueryInfo,
 32      pred sys.ODCIPredInfo, args sys.ODCIArgDescList,
 33      strt number, stop number, datai varchar2, env sys.ODCIEnv)
 34      return number
 35  
 36    /*** AnyData : Ext-Optimizer Arg overloading problem ***
 37    static function ODCIStatsSelectivity(pred sys.ODCIPredInfo,
 38      sel OUT number, args sys.ODCIArgDescList, strt number,
 39      stop number, expr VARCHAR2, datai sys.AnyData,
 40      env sys.ODCIEnv) return number,
 41  
 42    static function ODCIStatsFunctionCost(func sys.ODCIFuncInfo,
 43      cost OUT sys.ODCICost, args sys.ODCIArgDescList,
 44      expr VARCHAR2, datai sys.AnyData, env sys.ODCIEnv) return number,
 45  
 46    static function ODCIStatsIndexCost(idx sys.ODCIIndexInfo,
 47      sel number, cost OUT sys.ODCICost, qi sys.ODCIQueryInfo,
 48      pred sys.ODCIPredInfo, args sys.ODCIArgDescList,
 49      strt number, stop number, datai sys.AnyData, env sys.ODCIEnv)
 50      return number
 51    */
 52  );
 53  /

Type created.

SQL> 
SQL> show errors;
No errors.
SQL> 
SQL> /******************* OPERATOR FUNCTIONAL IMPLEMENTATIONS *******************/
SQL> /*** Functional implementations for different operator bindings          ***/
SQL> /***************************************************************************/
SQL> create function evaluate_vv(col   VARCHAR2,
  2                              value VARCHAR2,
  3                              ictx  SYS.ODCIINDEXCTX,
  4                              sctx  IN OUT ExpressionIndexMethods,
  5                              sflg  NUMBER,
  6                              colctx SYS.ODCIFuncCallInfo)
  7     return number AUTHID CURRENT_USER as
  8  begin
  9    return 2;
 10  end;
 11  /

Function created.

SQL> 
SQL> create function evaluate_va(col   VARCHAR2,
  2                              value SYS.ANYDATA,
  3                              ictx  SYS.ODCIINDEXCTX,
  4                              sctx  IN OUT ExpressionIndexMethods,
  5                              sflg  NUMBER,
  6                              colctx SYS.ODCIFuncCallInfo)
  7     return number  AUTHID CURRENT_USER  as
  8  begin
  9    return 2;
 10  end;
 11  /

Function created.

SQL> 
SQL> create function evaluate_cv(col   CLOB,
  2                              value VARCHAR2,
  3                              ictx  SYS.ODCIINDEXCTX,
  4                              sctx  IN OUT ExpressionIndexMethods,
  5                              sflg  NUMBER,
  6                              colctx SYS.ODCIFuncCallInfo)
  7     return number AUTHID CURRENT_USER  as
  8  begin
  9    return 2;
 10  end;
 11  /

Function created.

SQL> 
SQL> create function evaluate_ca(col   CLOB,
  2                              value SYS.ANYDATA,
  3                              ictx  SYS.ODCIINDEXCTX,
  4                              sctx  IN OUT ExpressionIndexMethods,
  5                              sflg  NUMBER,
  6                              colctx SYS.ODCIFuncCallInfo)
  7     return number  AUTHID CURRENT_USER  as
  8  begin
  9    return 2;
 10  end;
 11  /

Function created.

SQL> 
SQL> /************************* EVALUATE Operator *******************************/
SQL> /*** The EVALAUTE Operator and its various bindings                      ***/
SQL> /***************************************************************************/
SQL> --- create EVALUATE operators --
SQL> create or replace operator EVALUATE binding
  2    (VARCHAR2, VARCHAR2) return NUMBER
  3      WITH INDEX CONTEXT, SCAN CONTEXT ExpressionIndexMethods
  4      WITH COLUMN CONTEXT
  5      USING  evaluate_vv,
  6    (VARCHAR2, SYS.ANYDATA) return NUMBER
  7      WITH INDEX CONTEXT, SCAN CONTEXT ExpressionIndexMethods
  8      WITH COLUMN CONTEXT
  9      USING evaluate_va,
 10    (CLOB, VARCHAR2) return NUMBER
 11      WITH INDEX CONTEXT, SCAN CONTEXT ExpressionIndexMethods
 12      WITH COLUMN CONTEXT
 13      USING evaluate_cv,
 14    (CLOB, SYS.ANYDATA) return NUMBER
 15      WITH INDEX CONTEXT, SCAN CONTEXT ExpressionIndexMethods
 16      WITH COLUMN CONTEXT
 17      USING evaluate_ca;

Operator created.

SQL> /

Operator created.

SQL> 
SQL> 
SQL> create or replace public synonym EVALUATE for exfsys.EVALUATE;

Synonym created.

SQL> 
SQL> grant execute on EVALUATE to public;

Grant succeeded.

SQL> 
SQL> /***************************************************************************/
SQL> /***                      Public Object Types                            ***/
SQL> /***************************************************************************/
SQL> ---- RLM$ROWIDTAB : Used to represent a list of rowids
SQL> create or replace type exfsys.rlm$rowidtab is table of VARCHAR2(38);
  2  /

Type created.

SQL> 
SQL> grant execute on exfsys.rlm$rowidtab to public;

Grant succeeded.

SQL> 
SQL> 
SQL> 
SQL> --- Create Expression Filter Dictionary
SQL> @@exftab.sql
SQL> Rem
SQL> Rem $Header: rdbms/admin/exftab.sql /main/13 2009/01/08 11:05:03 ayalaman Exp $
SQL> Rem
SQL> Rem exftab.sql
SQL> Rem
SQL> Rem Copyright (c) 2002, 2008, Oracle. All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      exftab.sql - EXpression Filter dictionary TABles
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      Expression filter dictionary tables are used to store the metadata
SQL> Rem      for the expression sets and the indexes defined on them.
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      See Documentation
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    ayalaman    07/29/08 - compiled sparse preds
SQL> Rem    ayalaman    09/14/05 - table aliases and conditions table
SQL> Rem    ayalaman    07/29/05 - contains operator in stored expressions
SQL> Rem    ayalaman    05/07/05 - spatial operators in stored expressions
SQL> Rem    ayalaman    02/25/04 -
> Rem    ayalaman    01/20/04 - namespace support in XPath expressions
SQL> Rem    ayalaman    12/25/03 - fix expression filter version for non-english
SQL> Rem    ayalaman    07/23/03 - attribute set with default valued attributes
SQL> Rem    ayalaman    02/27/03 - create plan table
SQL> Rem    ayalaman    12/05/02 - defer the referential constraints
SQL> Rem    ayalaman    10/31/02 - define index on privilege table
SQL> Rem    ayalaman    10/21/02 - modify priv name
SQL> Rem    ayalaman    10/08/02 - store predicate storage clause in the metadata
SQL> Rem    ayalaman    10/03/02 - mainatin index status
SQL> Rem    ayalaman    09/26/02 - ayalaman_expression_filter_support
SQL> Rem    ayalaman    09/06/02 - Created
SQL> Rem
SQL> 
SQL> 
SQL> REM
SQL> REM Create the Expression Filter dictionary tables
SQL> REM
SQL> prompt .. creating Expression Filter dictionary
.. creating Expression Filter dictionary
SQL> 
SQL> /***************************************************************************/
SQL> /***  EXF$VERSION - Table to store the version of the Expression Filter  ***/
SQL> /***************************************************************************/
SQL> create table exf$version
  2  (
  3    exfversion  number
  4  );

Table created.

SQL> 
SQL> truncate table exf$version;

Table truncated.

SQL> 
SQL> insert into exf$version values (1.0);

1 row created.

SQL> commit;

Commit complete.

SQL> 
SQL> /***************************************************************************/
SQL> /***  EXF$PARAMETER - Table to store (tunable) parameters                ***/
SQL> /***************************************************************************/
SQL> create table exf$parameter
  2  (num         NUMBER,
  3   name        VARCHAR2(64),
  4   valtype     NUMBER,            --- 1 for number; 2 for varchar
  5   value       VARCHAR2(512),
  6   constraint dup_parameter primary key (num));

Table created.

SQL> 
SQL> truncate table exf$parameter;

Table truncated.

SQL> 
SQL> insert into exf$parameter (num, name, valtype, value) values
  2         (1, 'dynamic_query_cpu_cost', 1, 1000000);

1 row created.

SQL> insert into exf$parameter (num, name, valtype, value) values
  2         (2, 'pred_eval_cpu_cost', 1, 100000);

1 row created.

SQL> commit;

Commit complete.

SQL> 
SQL> /***************************************************************************/
SQL> /***  EXF$JAVAMSG - Java implementations used for the expression filter  ***/
SQL> /***  dump the errors/msgs in this table. This is used as a workaround   ***/
SQL> /***  to return more than one value from Java functions. At any point    ***/
SQL> /***  there will be only one error message in this table.                ***/
SQL> /***  The data is private to the session and should be commit preserved  ***/
SQL> /***  to allow DDLs in between                                           ***/
SQL> /***************************************************************************/
SQL> create global temporary table exf$javamsg
  2  (
  3    code       VARCHAR2(15),
  4    message    VARCHAR2(500)
  5  ) on commit preserve rows;

Table created.

SQL> 
SQL> /***************************************************************************/
SQL> /*** EXF$ATTRSET -  This table stores the complete list of attribute sets ***/
SQL> /*** configured in the current instance. One row per attribute set       ***/
SQL> /***************************************************************************/
SQL> create table exf$attrset
  2  (
  3    atsowner     VARCHAR2(32) not null,   -- owner of the attribute set
  4    atsname      VARCHAR2(32) not null,   -- attribute set name
  5    atstabtyp    VARCHAR2(32),            -- typed table for equiv query
  6    atsflags     NUMBER,
  7                                      /* derived from an existing ADT : 0x01 */
  8    constraint dupl_attrset primary key (atsowner, atsname)
  9  ) organization index;

Table created.

SQL> 
SQL> /***************************************************************************/
SQL> /*** EXF$EXPRSET - This table stores the complete list of expression sets ***/
SQL> /*** in the current instance. One row per expression set. Each expr set  ***/
SQL> /*** is associated with an attribute set                                 ***/
SQL> /***************************************************************************/
SQL> create table exf$exprset
  2  (
  3     exsowner    VARCHAR2(32) not null,   -- owner of expr set and attr set
  4     exstabnm    VARCHAR2(32) not null,   -- name of the table with exp col
  5     exscolnm    VARCHAR2(32) not null,   -- name of the column storing expr
  6     exsatsnm    VARCHAR2(32) not null,   -- assoc. attribute set name
  7     exstabobj   NUMBER,                  -- expression set table obj#
  8     exsprvtrig  VARCHAR2(32),            -- trigger in EXPFIL sch for priv
  9     exsetlanl   DATE,                    -- expression set last analyzed
 10     exsetnexp   NUMBER,                  -- number of expression in the set
 11     exsetsprp   NUMBER,                  -- no of sparse predicates
 12     avgprpexp   NUMBER,                  -- avg no of conj. predis per expr
 13     constraint  dupl_exprset primary key (exsowner, exstabnm, exscolnm),
 14     CONSTRAINT  ref_exprset_attrset FOREIGN KEY (exsowner, exsatsnm)
 15               references exf$attrset (atsowner, atsname)
 16  ) organization index;

Table created.

SQL> 
SQL> create index exf$esetidx on exf$exprset(exsatsnm);

Index created.

SQL> /***************************************************************************/
SQL> /***  EXF$EXPSETPRIVS - Expresssion set privileges                        ***/
SQL> /***  Grantor is always same as the owner of the expression set          ***/
SQL> /***************************************************************************/
SQL> create table exf$expsetprivs
  2  (
  3    esowner    VARCHAR2(32),
  4    esexptab   VARCHAR2(32),            -- table with exp column(obj#)
  5    esexpcol   VARCHAR2(32),            -- column storing expressions in tab
  6    esgrantee  VARCHAR2(32),
  7    escrtpriv  VARCHAR2(1),
  8    esupdpriv  VARCHAR2(1),
  9    CONSTRAINT esprivs_pkey PRIMARY KEY (esowner, esexptab, esexpcol,
 10                                         esgrantee),
 11    CONSTRAINT ref_priv_expr_set FOREIGN KEY (esowner, esexptab, esexpcol)
 12      references exf$exprset (exsowner, exstabnm, exscolnm) on delete cascade
 13          initially deferred
 14  ) organization index;

Table created.

SQL> 
SQL> create index exf$privgranteeidx on exf$expsetprivs(esgrantee);

Index created.

SQL> 
SQL> /***************************************************************************/
SQL> /***  EXF$ATTRLIST - list of attributes in various attribute sets         ***/
SQL> /***  The attributes listed here may not be attributes used in the index ***/
SQL> /***  creation. These will be used next time the user issues the alter   ***/
SQL> /***  index rebuild. The attributes listed in this table are classified  ***/
SQL> /***  into                                                               ***/
SQL> /***    - elementary attributes                                          ***/
SQL> /***    - complex attributes                                             ***/
SQL> /***    - indexed attributes                                             ***/
SQL> /***    - stored attributes                                              ***/
SQL> /***************************************************************************/
SQL> create table exf$attrlist
  2  (
  3    atsowner    VARCHAR2(32)   not null,   -- owner of the attribute set
  4    atsname     VARCHAR2(32)   not null,   -- attribute set name
  5    elattrid    number         default 10000,
  6    attrname    VARCHAR2(32)   not null,   -- elementary attr name
  7    attrtype    VARCHAR2(65),              -- type of attribute
  8    attrtptab   VARCHAR2(75),              -- table for tab aliases
  9    attrdefvl   VARCHAR2(100),             -- elem attr: default value
 10    attrprop    NUMBER,
 11                                     /* ALL : elementary attribute 1 : 0x01 */
 12                                                   /* table alias 16 : 0x10 */
 13                                                /* text attribute 32 : 0x20 */
 14    attrtxtprf  VARCHAR2(1000),
 15    CONSTRAINT duplicate_attribute_name PRIMARY KEY (atsowner, atsname,
 16                                                     attrname),
 17    CONSTRAINT ref_attribute_set FOREIGN KEY (atsowner, atsname)
 18               references exf$attrset (atsowner, atsname) on delete cascade
 19  ) organization index overflow including attrprop;

Table created.

SQL> 
SQL> /***************************************************************************/
SQL> /*** EXF$DEFIDXPARAM - Default index parameters for an attribute set     ***/
SQL> /*** Keep the structure of the following two tables in sync(except key)  ***/
SQL> /***************************************************************************/
SQL> create table exf$defidxparam
  2  (
  3    atsowner    VARCHAR2(32)   not null,   -- owner of the attribute set
  4    atsname     VARCHAR2(32)   not null,   -- attribute set name
  5    attrsexp    VARCHAR2(300)   not null,  -- complex attr form (subexp)
  6    attrtype    VARCHAR2(65),              -- type of attribute
  7    attroper    exf$indexoper,             -- common operators
  8    attrprop    NUMBER,
  9                                           /* elementary attribute 1 : 0x01 */
 10                                         /* ALL : stored attribute 4 : 0x04 */
 11                                             /*  indexed attribute 8 : 0x08 */
 12                                             /* xml tag : elememt 32 : 0x20 */
 13                                           /* xml tag : attribute 64 : 0x40 */
 14                                        /* xpath position filter 128 : 0x80 */
 15                                          /* xpath value filter 256 : 0x100 */
 16                                                    /* compiled sparse 1024 */
 17    xmltattr    VARCHAR2(32) default null, -- the XML Type for XML Tags
 18    xmlnselp    NUMBER default null,       -- element position incase of NS */
 19    CONSTRAINT duplicate_strdattr_name UNIQUE (atsowner, atsname,
 20                                                     attrsexp, xmltattr),
 21    CONSTRAINT refdip_attribute_set FOREIGN KEY (atsowner, atsname)
 22               references exf$attrset (atsowner, atsname) on delete cascade
 23  );

Table created.

SQL> 
SQL> 
SQL> /***************************************************************************/
SQL> /*** EXF$ESETIDXPARAM - index parameters for an expression set           ***/
SQL> /*** Keep this table structure in sync with the above table (except key) ***/
SQL> /***************************************************************************/
SQL> create table exf$esetidxparam
  2  (
  3    esetowner   VARCHAR2(32)   not null,
  4    esettabn    VARCHAR2(32)   not null,
  5    esetcoln    VARCHAR2(32)   not null,
  6    attrsexp    VARCHAR2(300)   not null,  -- complex attr form (subexp)
  7    attrtype    VARCHAR2(65),              -- type of attribute
  8    attroper    exf$indexoper,             -- common operators
  9    attrprop    NUMBER,
 10                                           /* elementary attribute 1 : 0x01 */
 11                                         /* ALL : stored attribute 4 : 0x04 */
 12                                             /*  indexed attribute 8 : 0x08 */
 13                                             /* xml tag : elememt 32 : 0x20 */
 14                                           /* xml tag : attribute 64 : 0x40 */
 15                                        /* xpath position filter 128 : 0x80 */
 16                                          /* xpath value filter 256 : 0x100 */
 17                                                    /* compiled sparse 1024 */
 18    xmltattr    VARCHAR2(32) default null, -- the XML Type for XML Tags
 19    xmlnselp    NUMBER default null,       -- element position incase of NS */
 20    CONSTRAINT duplicate_esstrdattr_name UNIQUE (esetowner, esettabn,
 21                                             esetcoln, attrsexp, xmltattr),
 22    CONSTRAINT refesip_attribute_set FOREIGN KEY (esetowner, esettabn,
 23      esetcoln) references exf$exprset (exsowner, exstabnm, exscolnm)
 24          on delete cascade initially deferred
 25  );

Table created.

SQL> 
SQL> /***************************************************************************/
SQL> /*** EXF$ASUDFLIST - List of approved user-defined functions for an      ***/
SQL> /***   attribute set                                                     ***/
SQL> /***************************************************************************/
SQL> create table exf$asudflist
  2  (
  3    udfasoner  VARCHAR2(32)   not null,
  4    udfasname  VARCHAR2(32)   not null,
  5    udfname    VARCHAR2(100)  not null,
  6    udfobjown  VARCHAR2(32)   not null,
  7    udfobjnm   VARCHAR2(32)   not null,
  8    udftype    VARCHAR2(20),
  9                                                                 /* function */
 10                                                                  /* package */
 11                                                                     /* type */
 12                                     /* derived package/ type member methods */
 13    CONSTRAINT duplicate_udfpt_name PRIMARY KEY(udfasoner, udfasname, udfname),
 14    CONSTRAINT udf_ref_atset FOREIGN KEY (udfasoner, udfasname)
 15               references exf$attrset (atsowner, atsname) on delete cascade
 16  ) organization index;

Table created.

SQL> 
SQL> /***************************************************************************/
SQL> /***  EXF$IDXSECOBJ - secondary objects created for an exp filter index  ***/
SQL> /***  There is one entry in this table for every exp filter index        ***/
SQL> /***  This dictionary table stores the information about an exp filter   ***/
SQL> /***  index instance. Some information stored here can be derived from   ***/
SQL> /***  the other EXF$ table and USER_INDEXES and USER_IND_COLUMNS catalog ***/
SQL> /***  views. However, this info is need at the run time (in IndexStart)  ***/
SQL> /***  and it is duplicated here to avoid joins for every query           ***/
SQL> /***  Also store the optimizer summaries here so that the optimizer      ***/
SQL> /***  gets all the required info with dictionary I/O                     ***/
SQL> /***************************************************************************/
SQL> create sequence exf$idxobjseq;

Sequence created.

SQL> 
SQL> create table exf$idxsecobj
  2  (
  3     idxobj#     NUMBER       not null,   -- expfil index object #
  4     idxowner    VARCHAR2(32) not null,   -- index owner name
  5     idxname     VARCHAR2(25) not null,   -- index_name 25 chars len
  6     idxattrset  VARCHAR2(32) not null,   -- attribute set name (for eff)
  7     idxesettab  VARCHAR2(32) not null,   -- expr set table (for efficiency)
  8     idxesetcol  VARCHAR2(32) not null,   -- expr set col (for efficiency)
  9     idxpredtab  VARCHAR2(32),            -- predicate table name
 10     idxaccfunc  VARCHAR2(32),            -- access function package name
 11     idxstatus   VARCHAR2(11),            -- VALID/INPROGRESS/INVALID
 12     optfccpuct  NUMBER,                  -- func based cpu cost/expr
 13     optfcioct   NUMBER,                  -- func based i/o cost/expr
 14     optixselvt  NUMBER,                  -- index selectivity %
 15     optixcpuct  NUMBER,                  -- index based cpu cost
 16     optixioct   NUMBER,                  -- index based i/o cost
 17     optptfscct  NUMBER,                  -- predicate table full scan cost
 18     idxptabstg  VARCHAR2(1000),          -- params stg clause for pred tab
 19     idxpquery   CLOB,                    -- predicate table query
 20     CONSTRAINT duplicate_idx_objno UNIQUE (idxobj#),
 21     CONSTRAINT duplicate_idx_name PRIMARY KEY (idxowner, idxname)
 22  -- ,CONSTRAINT index_on_exprset FOREIGN KEY(idxowner, idxesettab, idxesetcol)
 23  --     references exf$exprset (exsowner, exstabnm, exscolnm)
 24  --        on delete cascade initially deferred
 25  ) organization index overflow including optptfscct;

Table created.

SQL> 
SQL> create index exf$expsetidx on exf$idxsecobj(idxesettab, idxesetcol);

Index created.

SQL> 
SQL> /***************************************************************************/
SQL> /***  EXF$PREDATTRMAP - predicate table column mapping to complex attrs  ***/
SQL> /***  There will be one entry in this table for every complex/elem attr  ***/
SQL> /***  stored in the predicate table. This table stores the system gen    ***/
SQL> /***  name for each of these attributes. The actual table has two cols   ***/
SQL> /***  with _OP and _CT suffixes to store the attributes' operand and     ***/
SQL> /***  constant. The predicate table also has a sparse_pred column which  ***/
SQL> /***  stores the sparse predicates. The entries in this table are mostly ***/
SQL> /***  used to build the access function                                  ***/
SQL> /***************************************************************************/
SQL> create table exf$predattrmap
  2  (
  3     ptidxobj#    NUMBER        not null,  -- expfil index object#
  4     ptattrsexp   VARCHAR2(300) not null,  -- attribute name/sub-expression
  5     ptattrid     NUMBER,                  -- id for the attribute
  6     ptattralias  VARCHAR2(25),            -- sys gen name (bind var in AF)
  7                                           --  actual columns are *_OP & *_CT
  8     ptattroper   exf$indexoper,            -- common operators
  9     ptattrtype   VARCHAR2(65),            -- no ADTs expected
 10     ptattrprop   NUMBER,
 11                                                 /* stored attribute 1: 0x01 */
 12                                                /* indexed attribute 2: 0x02 */
 13                                              /* duplicate attribute 4: 0x04 */
 14                                      /* xpath filter : xml element 8 : 0x08 */
 15                                   /* xpath filter : xml attribute 16 : 0x10 */
 16                                      /* xpath filter : positional 32 : 0x20 */
 17                                     /* xpath filter : value based 64 : 0x40 */
 18          /* for perf */                /* XP Value : String type 128 : 0x80 */
 19          /*    "     */               /* XP Value : Number type 256 : 0x100 */
 20          /*    "     */                 /* XP Value : Date type 512 : 0x200 */
 21                             /* atoms for compiled sparse preds 1024 : 0x400 */
 22     xmltattr    VARCHAR2(32) default null, -- the XML Type for XML Tags
 23     xmlnselp    NUMBER default null,       -- element position incase of NS */
 24     CONSTRAINT dup_attr_exp UNIQUE (ptidxobj#, ptattrsexp, ptattralias,
 25                                     xmltattr),
 26     CONSTRAINT ref_idx_attrs FOREIGN KEY (ptidxobj#)
 27                references exf$idxsecobj (idxobj#) on delete cascade
 28  );

Table created.

SQL> 
SQL> /***************************************************************************/
SQL> /*** EXF$EXPSETSTATS - Predicate statistics for an expression set         ***/
SQL> /*** There will be a set of entries in this table for every expression   ***/
SQL> /*** set that is analyzed. An expression set name is obtained via the    ***/
SQL> /*** attribute-set name. This is to avoid any dangling stats owing to    ***/
SQL> /*** rename table                                                        ***/
SQL> /***************************************************************************/
SQL> create table exf$expsetstats
  2  (
  3    esetowner    VARCHAR2(32) not null,   -- owner of the expression set set
  4    esettable    VARCHAR2(32) not null,   -- expression set table
  5    esetcolumn   VARCHAR2(32) not null,   -- expression set column
  6    predlhs     VARCHAR2(300) not null,
  7    noeqpreds   NUMBER,                  -- number of equality predicates
  8    noltpreds   NUMBER,                  -- number of less than preds
  9    nogtpreds   NUMBER,                  -- number of greater than preds
 10    nolteqprs   NUMBER,                  -- number of <= predicates
 11    nogteqprs   NUMBER,                  -- number of >= predicates
 12    noneqprs    NUMBER,                  -- number of != predicates
 13    noisnlprs   NUMBER,                  -- number of is null predicates
 14    noisnnlprs  NUMBER,                  -- number of is not null predicates
 15    nobetpreds  NUMBER,                  -- number of between predicates
 16    nonvlpreds  NUMBER,                  -- number of NVL predicates
 17    nolikeprs   NUMBER,                  -- number of LIKE predicates
 18    CONSTRAINT stats_pkey primary key (esetowner, esettable, esetcolumn,
 19                                       predlhs),
 20    CONSTRAINT ref_stats_key FOREIGN KEY (esetowner, esettable, esetcolumn)
 21       references exf$exprset (exsowner, exstabnm, exscolnm) on delete cascade
 22         initially deferred
 23  ) organization index;

Table created.

SQL> 
SQL> /***************************************************************************/
SQL> /*** EXF$VALIDOPER - list of valid operands to be passed to exf$indexoper  ***/
SQL> /***************************************************************************/
SQL> 
SQL> create table exf$validioper
  2  (
  3     operstr  VARCHAR2(15)
  4  );

Table created.

SQL> 
SQL> truncate table exf$validioper;

Table truncated.

SQL> 
SQL> insert into exf$validioper values ('=');

1 row created.

SQL> insert into exf$validioper values ('>');

1 row created.

SQL> insert into exf$validioper values ('<');

1 row created.

SQL> insert into exf$validioper values ('>=');

1 row created.

SQL> insert into exf$validioper values ('<=');

1 row created.

SQL> insert into exf$validioper values ('!=');

1 row created.

SQL> insert into exf$validioper values ('^=');

1 row created.

SQL> insert into exf$validioper values ('<>');

1 row created.

SQL> insert into exf$validioper values ('IS NULL');

1 row created.

SQL> insert into exf$validioper values ('IS NOT NULL');

1 row created.

SQL> insert into exf$validioper values ('ALL');

1 row created.

SQL> insert into exf$validioper values ('BETWEEN');

1 row created.

SQL> insert into exf$validioper values ('NVL');

1 row created.

SQL> insert into exf$validioper values ('LIKE');

1 row created.

SQL> insert into exf$validioper values ('SDO_WIDIST');

1 row created.

SQL> insert into exf$validioper values ('CONTAINS');

1 row created.

SQL> 
SQL> /***************************************************************************/
SQL> /*** EXF$VALIDPRIVS - list of valid privileges for the expression mgmt   ***/
SQL> /***************************************************************************/
SQL> create table exf$validprivs
  2  (
  3    code       number,
  4    privstr    varchar2(20)
  5  );

Table created.

SQL> 
SQL> truncate table exf$validprivs;

Table truncated.

SQL> 
SQL> insert into exf$validprivs values (1, 'INSERT EXPRESSION');

1 row created.

SQL> insert into exf$validprivs values (2, 'UPDATE EXPRESSION');

1 row created.

SQL> insert into exf$validprivs values (10, 'ALL');

1 row created.

SQL> 
SQL> /***************************************************************************/
SQL> /*** EXF$PLAN_TABLE : Execution plan/cost for predicate table query      ***/
SQL> /*** Entries will be dropped from this table at the time drop index      ***/
SQL> /***************************************************************************/
SQL> @@utlxplan
SQL> rem
SQL> rem $Header: utlxplan.sql 08-may-2004.12:53:19 bdagevil Exp $ xplainpl.sql
SQL> rem
SQL> Rem Copyright (c) 1988, 2004, Oracle. All rights reserved.
SQL> Rem NAME
SQL> REM    UTLXPLAN.SQL
SQL> Rem  FUNCTION
SQL> Rem  NOTES
SQL> Rem  MODIFIED
SQL> Rem     bdagevil   05/08/04  - add other_xml column
SQL> Rem     bdagevil   06/18/03  - rename hint alias to object_alias
SQL> Rem     ddas       06/03/03  - increase size of hint alias column
SQL> Rem     bdagevil   02/13/03  - add plan_id and depth column
SQL> Rem     ddas       01/17/03  - add query_block and hint_alias columns
SQL> Rem     ddas       11/04/02  - revert timestamp column to DATE (PL/SQL problem)
SQL> Rem     ddas       10/28/02  - change type of timestamp column to TIMESTAMP
SQL> Rem     ddas       10/03/02  - add estimated_time column
SQL> Rem     mzait      04/16/02  - add row vector to the plan table
SQL> Rem     mzait      10/26/01  - add keys and filter predicates to the plan table
SQL> Rem     ddas       05/05/00  - increase length of options column
SQL> Rem     ddas       04/17/00  - add CPU, I/O cost, temp_space columns
SQL> Rem     mzait      02/19/98 -  add distribution method column
SQL> Rem     ddas       05/17/96 -  change search_columns to number
SQL> Rem     achaudhr   07/23/95 -  PTI: Add columns partition_{start, stop, id}
SQL> Rem     glumpkin   08/25/94 -  new optimizer fields
SQL> Rem     jcohen     11/05/93 -  merge changes from branch 1.1.710.1 - 9/24
SQL> Rem     jcohen     09/24/93 -  #163783 add optimizer column
SQL> Rem     glumpkin   10/25/92 -  Renamed from XPLAINPL.SQL
SQL> Rem     jcohen     05/22/92 -  #79645 - set node width to 128 (M_XDBI in gendef)
SQL> Rem     rlim       04/29/91 -  change char to varchar2
SQL> Rem     Peeler     10/19/88 - Creation
SQL> Rem
SQL> Rem This is the format for the table that is used by the EXPLAIN PLAN
SQL> Rem statement.  The explain statement requires the presence of this
SQL> Rem table in order to store the descriptions of the row sources.
SQL> 
SQL> create table PLAN_TABLE (
  2          statement_id       varchar2(30),
  3          plan_id            number,
  4          timestamp          date,
  5          remarks            varchar2(4000),
  6          operation          varchar2(30),
  7          options            varchar2(255),
  8          object_node        varchar2(128),
  9          object_owner       varchar2(30),
 10          object_name        varchar2(30),
 11          object_alias       varchar2(65),
 12          object_instance    numeric,
 13          object_type        varchar2(30),
 14          optimizer          varchar2(255),
 15          search_columns     number,
 16          id                 numeric,
 17          parent_id          numeric,
 18          depth              numeric,
 19          position           numeric,
 20          cost               numeric,
 21          cardinality        numeric,
 22          bytes              numeric,
 23          other_tag          varchar2(255),
 24          partition_start    varchar2(255),
 25          partition_stop     varchar2(255),
 26          partition_id       numeric,
 27          other              long,
 28          distribution       varchar2(30),
 29          cpu_cost           numeric,
 30          io_cost            numeric,
 31          temp_space         numeric,
 32          access_predicates  varchar2(4000),
 33          filter_predicates  varchar2(4000),
 34          projection         varchar2(4000),
 35          time               numeric,
 36          qblock_name        varchar2(30),
 37          other_xml          clob
 38  );

Table created.

SQL> 
SQL> alter table plan_table rename to exf$plan_table;

Table altered.

SQL> 
SQL> alter table exf$plan_table add constraint plan_stmt_id
  2    primary key (statement_id, id);

Table altered.

SQL> 
SQL> 
SQL> --- Create Public PL/SQL Package specifications
SQL> @@exfpbs.sql
SQL> Rem
SQL> Rem $Header: exfpbs.sql 23-feb-2006.10:23:52 ayalaman Exp $
SQL> Rem
SQL> Rem exfpbs.sql
SQL> Rem
SQL> Rem Copyright (c) 2002, 2006, Oracle. All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      exfpbs.sql - EXpression Filter PuBlic PL/SQL packages and
SQL> Rem                   functions.
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      Expression Filter PL/SQL APIs to manage expression sets and
SQL> Rem      their metadata.
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      See Documentation.
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    ayalaman    02/23/06 - validation routine for EXF
SQL> Rem    ayalaman    10/11/05 - modify validate script for EXF component
SQL> Rem    ayalaman    08/07/05 - api for synchronizing text indexes
SQL> Rem    ayalaman    07/29/05 - contains operator in stored expressions
SQL> Rem    ayalaman    01/27/05 - truncate table maint. for rule class
SQL> Rem    ayalaman    10/07/04 - new validation procedures in SYS
SQL> Rem    ayalaman    04/19/04 - rule manager registry
SQL> Rem    ayalaman    07/23/03 - attribute set with default valued attributes
SQL> Rem    ayalaman    01/20/03 - xpath filter apis
SQL> Rem    ayalaman    12/05/02 - validate expfil
SQL> Rem    ayalaman    10/21/02 - fix argument names
SQL> Rem    ayalaman    10/04/02 - defrag_index api
SQL> Rem    ayalaman    09/26/02 - package variables
SQL> Rem    ayalaman    09/25/02 - validate expressions API
SQL> Rem    ayalaman    09/24/02 - add build_exceptions_table API
SQL> Rem    ayalaman    09/06/02 - Created
SQL> Rem
SQL> 
SQL> 
SQL> prompt .. creating Expression Filter PL/SQL Package Specifications
.. creating Expression Filter PL/SQL Package Specifications
SQL> 
SQL> /*******************************  PACKAGE  *********************************/
SQL> /*** DBMS_EXPFIL : Package to manage the Expression Engine               ***/
SQL> /***               All procedures are defined with invoker rights        ***/
SQL> /***************************************************************************/
SQL> create or replace package dbms_expfil AUTHID CURRENT_USER AS
  2  
  3    procedure copy_attribute_set (
  4                from_set   IN   VARCHAR2,    --- name of an existing att set
  5                to_set     IN   VARCHAR2);   --- new set name
  6  
  7    procedure create_attribute_set (
  8                attr_set   IN   VARCHAR2,    --- attr set name
  9                from_type  IN   VARCHAR2     --- ADT for attributes
 10                           default 'NO');
 11  
 12    procedure assign_attribute_set (
 13                attr_set   IN   VARCHAR2,    --- attr set name
 14                expr_tab   IN   VARCHAR2,    --- name of the table
 15                expr_col   IN   VARCHAR2,    --- exp column in the table
 16                force      IN   VARCHAR2     --- to use existing expressions
 17                           default 'FALSE');
 18  
 19    procedure add_elementary_attribute (
 20                attr_set   IN   VARCHAR2,    --- attr set name
 21                attr_name  IN   VARCHAR2,    --- attr name
 22                attr_type  IN   VARCHAR2,    --- attr type
 23                attr_defvl IN   VARCHAR2     --- default value for attr
 24                           default NULL);
 25  
 26    procedure add_elementary_attribute (
 27                attr_set   IN   VARCHAR2,    --- attr set name
 28                attr_name  IN   VARCHAR2,    --- table alias (name)
 29                tab_alias  IN   exf$table_alias);  -- table alias for
 30  
 31    procedure add_elementary_attribute (
 32                attr_set   IN   VARCHAR2,    --- attr set name
 33                attr_name  IN   VARCHAR2,    --- attr name
 34                attr_type  IN   VARCHAR2,    --- attr type
 35                text_pref  IN   exf$text);   --- text data type pref
 36  
 37    procedure add_functions (
 38                attr_set   IN   VARCHAR2,    --- attr set name
 39                funcs_name IN   VARCHAR2);   --- function/package/type name
 40  
 41    procedure unassign_attribute_set (
 42                expr_tab   IN   VARCHAR2,    --- table with expr. column
 43                expr_col   IN   VARCHAR2);   --- column storing expr. set
 44  
 45    procedure drop_attribute_set (
 46                attr_set   IN   VARCHAR2);   --- attr set name
 47  
 48    procedure modify_operator_list (
 49                attr_set   IN   VARCHAR2,    --- attr set name
 50                attr_name  IN   VARCHAR2,    --- attribute to be modified
 51                attr_oper  IN   EXF$INDEXOPER);  --- list of new operators
 52  
 53    procedure default_index_parameters (
 54                attr_set   IN   VARCHAR2,    --- attribute set name
 55                attr_list  IN   EXF$ATTRIBUTE_LIST,
 56                                             --- stored and indexed attrs
 57                operation  IN   VARCHAR2     --- to ADD or DROP
 58                                 default 'ADD');
 59  
 60    procedure index_parameters(
 61                expr_tab   IN   VARCHAR2,    --- expression set table
 62                expr_col   IN   VARCHAR2,    --- expression set column
 63                attr_list  IN   EXF$ATTRIBUTE_LIST default null,
 64                operation  IN   VARCHAR2     --- DEFAULT/ADD/DROP/CLEAR
 65                                 default 'ADD');
 66  
 67    procedure default_xpindex_parameters (
 68                attr_set   IN   VARCHAR2,    --- attribute set
 69                xmlt_attr  IN   VARCHAR2,    --- XMLType attribute name
 70                xptag_list IN   EXF$XPATH_TAGS, --- common elements/attributes
 71                                                --- in xpath expressions
 72                operation  IN   VARCHAR2     --- to ADD/DROP
 73                                  default 'ADD');
 74  
 75    procedure xpindex_parameters(
 76                expr_tab   IN   VARCHAR2,    --- expression set table
 77                expr_col   IN   VARCHAR2,    --- expression set column
 78                xmlt_attr  IN   VARCHAR2,    --- XMLType attribute name
 79                xptag_list IN   EXF$XPATH_TAGS, --- common elements/attributes
 80                                                --- in xpath expressions
 81                operation  IN   VARCHAR2     --- to ADD/DROP
 82                                  default 'ADD');
 83  
 84    procedure get_exprset_stats (
 85                expr_tab   IN   VARCHAR2,    --- table storing expression set
 86                expr_col   IN   VARCHAR2);   --- column in the table with set
 87  
 88    procedure clear_exprset_stats (
 89                expr_tab   IN   VARCHAR2,    --- table storing expression set
 90                expr_col   IN   VARCHAR2);   --- column in the table with set
 91  
 92    procedure grant_privilege (
 93                expr_tab   IN  VARCHAR2,     --- table w/ the expr column
 94                expr_col   IN  VARCHAR2,     --- column storing the expressions
 95                priv_type  IN  VARCHAR2,     --- type of priv to be granted
 96                to_user    IN  VARCHAR2);    --- user to which the priv is
 97                                             ---   granted
 98    procedure revoke_privilege (
 99                expr_tab   IN  VARCHAR2,     --- table with the expr column
100                expr_col   IN  VARCHAR2,     --- column storing the expressions
101                priv_type  IN  VARCHAR2,     --- type of privilege to be granted
102                from_user  IN  VARCHAR2);    --- user from which the priv is
103                                             ---   revoked
104  
105    procedure build_exceptions_table (
106                exception_tab IN VARCHAR2);  -- exception table to be created --
107  
108    procedure validate_expressions (
109                expr_tab      IN  VARCHAR2,  --- expressions table
110                expr_col      IN  VARCHAR2,  --- column storing expressions
111                exception_tab IN  VARCHAR2   --- exception table
112                      default null);
113  
114    procedure defrag_index (
115                idx_name   IN  VARCHAR2);    --- expfil index to defrag
116  
117    procedure sync_text_indexes (
118                expr_tab      IN  VARCHAR2);  --- sync text indexes
119  end;
120  /

Package created.

SQL> 
SQL> show errors;
No errors.
SQL> 
SQL> create or replace public synonym dbms_expfil for exfsys.dbms_expfil;

Synonym created.

SQL> 
SQL> grant execute on dbms_expfil to public;

Grant succeeded.

SQL> 
SQL> /****************************** PROCEDURES *********************************/
SQL> /*** VALIDATION Procedures for Expression Filter and Rules Manager       ***/
SQL> /***************************************************************************/
SQL> create or replace procedure sys.validate_exf as
  2    retnum  NUMBER;
  3  begin
  4   -- ensure that the expression filter objects are all valid --
  5   -- ignore any rules manager objects in this schema --
  6   select 1 into retnum from all_objects where
  7     owner = 'EXFSYS' and status != 'VALID' and
  8        (object_name like 'EXF$%' or object_name like '%EXPFIL%') and
  9       rownum < 2;
 10  
 11   sys.dbms_registry.invalid('EXF');
 12  exception
 13    when no_data_found then
 14      sys.dbms_registry.valid('EXF');
 15  end;
 16  /

Procedure created.

SQL> 
SQL> create or replace  procedure sys.validate_rul as
  2    retnum  NUMBER;
  3  begin
  4   -- make sure all the objects in EXFSYS schema are valid --
  5   select 1 into retnum from all_objects where
  6     owner = 'EXFSYS' and status != 'VALID' and rownum < 2;
  7  
  8   sys.dbms_registry.invalid('RUL');
  9  exception
 10    when no_data_found then
 11      sys.dbms_registry.valid('RUL');
 12  end;
 13  /

Procedure created.

SQL> 
SQL> /*******************************  PACKAGE  *********************************/
SQL> /***  Package to manage the system triggers in the EXPFIL schema as a    ***/
SQL> /***  set. Appropriate triggers can be created by invoking the corr.     ***/
SQL> /***  APIs. Only EXFSYS or DBA user has execute privileges to this       ***/
SQL> /***************************************************************************/
SQL> create or replace package adm_expfil_systrig as
  2  
  3    /*************************************************************************/
  4    /*** CREATE_SYSTRIG_DROPOBJ : System trigger to manage meta-data after ***/
  5    /*** the drop of expression table and user with attributes sets. Also  ***/
  6    /*** restricts the user from dropping the ADT associated with an       ***/
  7    /*** Attribute set. Name of the trigger created : EXPFIL_DROPOBJ_MAINT ***/
  8    /*************************************************************************/
  9    procedure create_systrig_dropobj;
 10  
 11    /*************************************************************************/
 12    /*** CREATE_SYSTRIG_TRUNCRULCLS : Trigger to perform the necessary     ***/
 13    /*** maintenance for TRUNCATE of a rule class table                    ***/
 14    /*************************************************************************/
 15    procedure create_systrig_truncrulcls;
 16  
 17    /*************************************************************************/
 18    /*** CREATE_SYSTRIG_TYPEEVOLVE : System trigger to restrict ALTER and  ***/
 19    /*** CREATE or REPLACE operations on the ADT associated with an        ***/
 20    /*** Attribute set. Name of trig created : EXPFIL_RESTRICT_TYPEEVOLVE  ***/
 21    /*************************************************************************/
 22    procedure create_systrig_typeevolve;
 23  
 24    /*************************************************************************/
 25    /*** CREATE_SYSTRIG_ALTEREXPTAB : System trigger to manage meta-data   ***/
 26    /*** after a drop of expression column from the user table or a rename ***/
 27    /*** of the expression table. Name of trig : EXPFIL_ALTEREXPTAB_MAINT  ***/
 28    /*************************************************************************/
 29    procedure create_systrig_alterexptab;
 30  
 31    /*************************************************************************/
 32    /*** DISABLE_ALL : Api to disable all the system triggers in the EXPFIL***/
 33    /*** schema temporarily. They can be re-enabled using ENABLE_ALL API   ***/
 34    /*************************************************************************/
 35    procedure disable_all;
 36  
 37    /*************************************************************************/
 38    /*** ENABLE_ALL : Api to enable all the system triggers in the EXPFIL  ***/
 39    /*** schema. The triggers should exist in a valid state for this to    ***/
 40    /*** succeed. See CREATE_SYSTRIG_* APIs to create the triggers         ***/
 41    /*************************************************************************/
 42    procedure enable_all;
 43  
 44  end;
 45  /

Package created.

SQL> 
SQL> /****************  VARRAR2STR used in view definitions *********************/
SQL> create or replace function varray2str (ioper exf$indexoper,
  2                                         wquote VARCHAR2 default 'FALSE')
  3      return varchar2 is
  4    ret  varchar2(300);
  5    CURSOR c1 (va exf$indexoper) IS
  6       SELECT column_value from TABLE (cast(va as exf$indexoper));
  7  begin
  8    ret := null;
  9  
 10    IF (upper(wquote) = 'TRUE') THEN
 11      FOR cur IN c1(ioper) LOOP
 12        IF (ret is null) THEN
 13          ret := ''''||cur.column_value||'''';
 14        ELSE
 15          ret := ret ||','''||cur.column_value||'''';
 16        END IF;
 17      END LOOP;
 18    ELSE
 19      FOR cur IN c1(ioper) LOOP
 20        IF (ret is null) THEN
 21          ret := cur.column_value;
 22        ELSE
 23          ret := ret ||','||cur.column_value;
 24        END IF;
 25      END LOOP;
 26    END IF;
 27  
 28    return ret;
 29  end;
 30  /

Function created.

SQL> 
SQL> 
SQL> create or replace function arrhasvalue(ioper exf$indexoper, val varchar2)
  2    return number is
  3    retval number := 0;
  4  begin
  5    select count(*) into retval from table (cast(ioper as exf$indexoper))
  6      where upper(column_value) = upper(val);
  7    return retval;
  8  end;
  9  /

Function created.

SQL> 
SQL> create or replace function exf$text2exprid (ptname VARCHAR2, ptrowd VARCHAR2)
  2    return VARCHAR2 AUTHID CURRENT_USER is
  3  begin
  4    return null;
  5  end;
  6  /

Function created.

SQL> 
SQL> 
SQL> --- Create Expression Filter catalog views
SQL> @@exfview.sql
SQL> Rem
SQL> Rem $Header: rdbms/admin/exfview.sql /main/11 2009/01/08 11:05:03 ayalaman Exp $
SQL> Rem
SQL> Rem exfview.sql
SQL> Rem
SQL> Rem Copyright (c) 2002, 2008, Oracle. All rights reserved.
SQL> Rem
SQL> Rem    NAME
SQL> Rem      exfview.sql - EXpression Filter VIEW definitions.
SQL> Rem
SQL> Rem    DESCRIPTION
SQL> Rem      Catalog views to obtain information about expression sets,
SQL> Rem      their metadata and the expression filter indexes.
SQL> Rem
SQL> Rem    NOTES
SQL> Rem      See Documentation.
SQL> Rem
SQL> Rem    MODIFIED   (MM/DD/YY)
SQL> Rem    ayalaman    07/23/08 - compiled sparse preds
SQL> Rem    ayalaman    10/30/07 - bug 6596055
SQL> Rem    ayalaman    09/02/05 - text index errors
SQL> Rem    ayalaman    07/31/05 - contains operator in stored expressions
SQL> Rem    ayalaman    07/23/03 - attribute set with default valued attributes
SQL> Rem    ayalaman    03/03/03 - predicate table plans
SQL> Rem    ayalaman    01/20/03 - xpath filter views
SQL> Rem    ayalaman    11/07/02 - define sch_expfil_indexes view
SQL> Rem    ayalaman    10/21/02 - modify priv name
SQL> Rem    ayalaman    10/15/02 - all_.* views for export/import
SQL> Rem    ayalaman    10/09/02 - define def_index_parameters view
SQL> Rem    ayalaman    09/26/02 - ayalaman_expression_filter_support
SQL> Rem    ayalaman    09/06/02 - Created
SQL> Rem
SQL> 
SQL> 
SQL> REM
SQL> REM Create Expression Filter catalog views
SQL> REM
SQL> prompt .. creating Expression Filter catalog views
.. creating Expression Filter catalog views
SQL> 
SQL> /***************  [USER/ALL/ADM]_EXPFIL_ATTRIBUTE_SETS *********************/
SQL> --
SQL> -- USER_EXPFIL_ATTRIBUTE_SETS
SQL> --
SQL> create or replace view USER_EXPFIL_ATTRIBUTE_SETS
  2    (ATTRIBUTE_SET_NAME)
  3    as
  4    select atsname from exf$attrset
  5    where atsowner = (select user from dual);

View created.

SQL> 
SQL> create or replace public synonym  USER_EXPFIL_ATTRIBUTE_SETS
  2    for exfsys.USER_EXPFIL_ATTRIBUTE_SETS;

Synonym created.

SQL> 
SQL> grant select on USER_EXPFIL_ATTRIBUTE_SETS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE  user_expfil_attribute_sets IS
  2  'List of all the attribute sets in the current schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_attribute_sets.attribute_set_name  IS
  2  'Name of the attribute set';

Comment created.

SQL> 
SQL> ---
SQL> ---                ALL_EXPFIL_ATTRIBUTE_SETS
SQL> ---           (use privs of the associated ADT)
SQL> create or replace view ALL_EXPFIL_ATTRIBUTE_SETS
  2    (OWNER, ATTRIBUTE_SET_NAME)
  3   as
  4     select atsowner, atsname from exf$attrset ast, all_types ao
  5     where ao.owner = ast.atsowner and ao.type_name = ast.atsname;

View created.

SQL> 
SQL> create or replace public synonym ALL_EXPFIL_ATTRIBUTE_SETS
  2    for exfsys.ALL_EXPFIL_ATTRIBUTE_SETS;

Synonym created.

SQL> 
SQL> grant select on ALL_EXPFIL_ATTRIBUTE_SETS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE  all_expfil_attribute_sets IS
  2  'List of all the attribute sets accessible to the user';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_attribute_sets.owner  IS
  2  'Owner of the attribute set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_attribute_sets.attribute_set_name  IS
  2  'Name of the attribute set';

Comment created.

SQL> 
SQL> ---
SQL> ---                ADM_EXPFIL_ATTRIBUTE_SETS
SQL> ---
SQL> create or replace view ADM_EXPFIL_ATTRIBUTE_SETS
  2    (OWNER, ATTRIBUTE_SET_NAME)
  3    as
  4    select atsowner, atsname from exf$attrset;

View created.

SQL> 
SQL> COMMENT ON TABLE  adm_expfil_attribute_sets IS
  2  'List of all the attribute sets in the current instance';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attribute_sets.owner  IS
  2  'Owner of the attribute set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attribute_sets.attribute_set_name IS
  2  'Name of the attribute set';

Comment created.

SQL> 
SQL> 
SQL> /********************* [USER/ALL]_EXPFIL_ATTRIBUTES ************************/
SQL> --- NOTE : Order by clause for this view is important for the correctness
SQL> ---    of the expeng implementation. Atleast ordering should be
SQL> ---    maintained among elementary attributes (same order as they appear
SQL> ---    in the corresponding type definition). This order by is used to
SQL> ---    generate the APIs in the type and access function that ensure the
SQL> ---    arguments  in the correct order
SQL> ---
SQL> ---               USER_EXPFIL_ATTRIBUTES
SQL> ---
SQL> create or replace view USER_EXPFIL_ATTRIBUTES
  2    (ATTRIBUTE_SET_NAME, ATTRIBUTE, DATA_TYPE, ASSOCIATED_TABLE, DEFAULT_VALUE, TEXT_PREFERENCES)
  3    as select atsname, attrname, attrtype,
  4          decode (bitand(attrprop, 16), 16, attrtptab, null), attrdefvl,
  5          decode (bitand(attrprop, 32), 32, attrtxtprf, 'N/A')
  6   from exf$attrlist where  atsowner = (select user from dual)
  7    order by atsowner, atsname, elattrid;

View created.

SQL> 
SQL> create or replace public synonym USER_EXPFIL_ATTRIBUTES for
  2                                          exfsys.USER_EXPFIL_ATTRIBUTES;

Synonym created.

SQL> 
SQL> grant select on USER_EXPFIL_ATTRIBUTES to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE  user_expfil_attributes IS
  2  'List of all the elementary attributes in the current schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_attributes.attribute_set_name IS
  2  'Name of the attribute set this attribute belongs to';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_attributes.attribute IS
  2  'Name of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_attributes.data_type IS
  2  'Datatype of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_attributes.associated_table IS
  2  'Table associated with table alias attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_attributes.default_value IS
  2  'String representation of the default value for the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_attributes.text_preferences IS
  2  'Preferences for an attribute configured for text predicates';

Comment created.

SQL> 
SQL> ---
SQL> ---                      ALL_EXPFIL_ATTRIBUTES
SQL> ---            (use the privs of the associated ADT)
SQL> create or replace view ALL_EXPFIL_ATTRIBUTES
  2    (OWNER, ATTRIBUTE_SET_NAME, ATTRIBUTE, DATA_TYPE, ASSOCIATED_TABLE,
  3     DEFAULT_VALUE, TEXT_PREFERENCES) as
  4   select atsowner, atsname, attrname, attrtype,
  5          decode (bitand(attrprop, 16), 16, attrtptab, null), attrdefvl,
  6          decode (bitand(attrprop, 32), 32, attrtxtprf, 'N/A')
  7   from exf$attrlist, all_types ao where
  8     atsowner = ao.owner and atsname = ao.type_name
  9   order by atsowner, atsname, elattrid;

View created.

SQL> 
SQL> create or replace public synonym ALL_EXPFIL_ATTRIBUTES
  2    for exfsys.ALL_EXPFIL_ATTRIBUTES;

Synonym created.

SQL> 
SQL> grant select on ALL_EXPFIL_ATTRIBUTES to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE  all_expfil_attributes IS
  2  'List of all the elementary attributes accessible to the user';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_attributes.owner IS
  2  'Owner of the attribute set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_attributes.attribute_set_name IS
  2  'Name of the attribute set this attribute belongs to';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_attributes.attribute IS
  2  'Name of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_attributes.data_type IS
  2  'Datatype of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_attributes.associated_table IS
  2  'Table associated with table alias attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_attributes.default_value IS
  2  'String representation of the default value for the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_attributes.text_preferences IS
  2  'Preferences for an attribute configured for text predicates';

Comment created.

SQL> 
SQL> /******************* [USER/ALL]_EXPFIL_DEF_INDEX_PARAMS  *******************/
SQL> -- NOTE : This view lists all the attributes that are configired as
SQL> -- stored attributes. These attributes may additionally have INDEXED
SQL> -- property set (implying bitmap index on the attribute) and have
SQL> -- operator list set. Note that XPath parameters(attributes) are
SQL> -- also listed in this view. Additional info about XPath tags can be
SQL> -- obtained from USER_EXPFIL_XPATH_TAGS view.
SQL> ---
SQL> ---                      USER_EXPFIL_DEF_INDEX_PARAMS
SQL> ---
SQL> create or replace view USER_EXPFIL_DEF_INDEX_PARAMS
  2    (ATTRIBUTE_SET_NAME, ATTRIBUTE, DATA_TYPE, ELEMENTARY, INDEXED,
  3     OPERATOR_LIST, XMLTYPE_ATTR) as
  4    select atsname, attrsexp, attrtype,
  5           decode (bitand(attrprop, 1), 1, 'YES','NO'),
  6           decode (bitand(attrprop, 8), 8, 'YES','NO'),
  7           varray2str(attroper), xmltattr
  8    from exf$defidxparam
  9    where  atsowner = (select user from dual);

View created.

SQL> 
SQL> create or replace public synonym USER_EXPFIL_DEF_INDEX_PARAMS for
  2                               exfsys.USER_EXPFIL_DEF_INDEX_PARAMS;

Synonym created.

SQL> 
SQL> grant select on USER_EXPFIL_DEF_INDEX_PARAMS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE  user_expfil_def_index_params IS
  2  'List of all the stored attributes in the current schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_def_index_params.attribute_set_name IS
  2  'Name of the attribute set this attribute belongs to';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_def_index_params.attribute IS
  2  'Name of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_def_index_params.data_type IS
  2  'Datatype of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_def_index_params.elementary IS
  2  'Field to indicate if the attribute is elementary';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_def_index_params.indexed IS
  2  'Field to indicate if the attribute is indexed in the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_def_index_params.operator_list IS
  2  'List of common operators for the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_def_index_params.xmltype_attr IS
  2  'The XMLType attribute for which the current XPath attribute is defined';

Comment created.

SQL> 
SQL> ---
SQL> ---                        ALL_EXPFIL_DEF_INDEX_PARAMS
SQL> ---
SQL> create or replace view ALL_EXPFIL_DEF_INDEX_PARAMS
  2    (OWNER, ATTRIBUTE_SET_NAME, ATTRIBUTE, DATA_TYPE, ELEMENTARY, INDEXED,
  3     OPERATOR_LIST, XMLTYPE_ATTR) as
  4    select atsowner, atsname, attrsexp, attrtype,
  5           decode (bitand(attrprop, 1), 1, 'YES','NO'),
  6           decode (bitand(attrprop, 8), 8, 'YES','NO'),
  7           varray2str(attroper), xmltattr
  8    from exf$defidxparam, all_types ao
  9    where  atsowner = ao.owner and atsname = ao.type_name;

View created.

SQL> 
SQL> create or replace public synonym ALL_EXPFIL_DEF_INDEX_PARAMS
  2    for exfsys.ALL_EXPFIL_DEF_INDEX_PARAMS;

Synonym created.

SQL> 
SQL> grant select on ALL_EXPFIL_DEF_INDEX_PARAMS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE  all_expfil_def_index_params IS
  2  'List of all the stored attributes accessible to the user';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_def_index_params.owner IS
  2  'Owner of the attribute set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_def_index_params.attribute_set_name IS
  2  'Name of the attribute set this attribute belongs to';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_def_index_params.attribute IS
  2  'Name of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_def_index_params.data_type IS
  2  'Datatype of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_def_index_params.elementary IS
  2  'Field to indicate if the attribute is elementary';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_def_index_params.indexed IS
  2  'Field to indicate if the attribute is indexed in the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_def_index_params.operator_list IS
  2  'List of common operators for the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_def_index_params.xmltype_attr IS
  2  'The XMLType attribute for which the current XPath attribute is defined';

Comment created.

SQL> 
SQL> /************************** ADM_EXPFIL_ATTRIBUTES **************************/
SQL> -- This view is a union of the USER_EXPFIL_ATTRIBUTES and
SQL> -- USER_EXPFIL_DEF_INDEX_PARAMS views. This is used by the java
SQL> -- implementation during index maintenance --
SQL> --
SQL> create or replace view ADM_EXPFIL_ATTRIBUTES
  2    (OWNER, ATTRIBUTE_SET_NAME, ATTRIBUTE,
  3     DATA_TYPE, ELEMENTARY, COMPLEX,
  4     STORED, INDEXED, TABLE_ALIAS,
  5     OPERATOR_LIST, XMLTYPE_ATTR,  ASSOCIATED_TABLE, DEFAULT_VALUE) as
  6  ( select atsowner, atsname, attrname,
  7           attrtype, 'YES', 'NO',
  8          'NO', 'NO', decode (bitand(attrprop, 16), 16, 'YES', 'NO'),
  9           null, null, attrtptab, attrdefvl
 10     from exf$attrlist eal where attrname not in (select attrsexp from
 11      exf$defidxparam dip where eal.atsowner = dip.atsowner and
 12      eal.atsname = dip.atsname)
 13    UNION ALL
 14    select atsowner, atsname, attrsexp,
 15           attrtype, decode (bitand(attrprop, 1), 1, 'YES','NO'),
 16                                decode (bitand(attrprop, 1), 1, 'NO','YES'),
 17           'YES', decode (bitand(attrprop, 8), 8, 'YES','NO'), 'NO',
 18           varray2str(attroper), xmltattr, null, null
 19    from exf$defidxparam
 20    where bitand(attrprop, 4) = 4
 21  );

View created.

SQL> 
SQL> COMMENT ON TABLE  adm_expfil_attributes IS
  2  'List of all the attributes in the current instance';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attributes.owner IS
  2  'Owner of the attribute set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attributes.attribute_set_name IS
  2  'Name of the attribute set this attribute belongs to';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attributes.attribute IS
  2  'Name of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attributes.data_type IS
  2  'Datatype of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attributes.elementary IS
  2  'Field to indicate if the attribute is elementary';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attributes.complex IS
  2  'Field to indicate if the attribute is complex';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attributes.stored IS
  2  'Field to indicate if the attribute is stored in the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attributes.indexed IS
  2  'Field to indicate if the attribute is indexed in the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attributes.table_alias IS
  2  'Field to indicate if the elementary attribute is a table alias';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attributes.operator_list IS
  2  'List of common operators for the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attributes.xmltype_attr IS
  2  'The XMLType attribute for which the current XPath attribute is defined';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attributes.associated_table IS
  2  'Table associated with the embedded ADT / table aliases';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_attributes.default_value IS
  2  'String representation of the default value for the attribute';

Comment created.

SQL> 
SQL> /***************** [USER/ALL/ADM]_EXPFIL_INDEX_PARAMS **********************/
SQL> -- Unlike the DEFAULT index params which are associated with the attr set,
SQL> -- these are the parameter for an instance of expression set (for the index)
SQL> --
SQL> --                USER_EXPFIL_INDEX_PARAMS
SQL> --
SQL> create or replace view USER_EXPFIL_INDEX_PARAMS
  2    (EXPSET_TABLE, EXPSET_COLUMN, ATTRIBUTE, DATA_TYPE, ELEMENTARY,
  3     INDEXED, OPERATOR_LIST, XMLTYPE_ATTR) as
  4    select esettabn, esetcoln, attrsexp, attrtype,
  5           decode (bitand(attrprop, 1), 1, 'YES','NO'),
  6           decode (bitand(attrprop, 8), 8, 'YES','NO'),
  7           varray2str(attroper), xmltattr
  8    from exf$esetidxparam
  9    where  esetowner = (select user from dual);

View created.

SQL> 
SQL> create or replace public synonym USER_EXPFIL_INDEX_PARAMS for
  2                               exfsys.USER_EXPFIL_INDEX_PARAMS;

Synonym created.

SQL> 
SQL> grant select on USER_EXPFIL_INDEX_PARAMS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE  user_expfil_index_params IS
  2  'List of all the stored attributes for index instances in the schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_index_params.expset_table IS
  2  'Name of the table storing the expressions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_index_params.expset_column IS
  2  'Name of the column storing the expressions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_index_params.attribute IS
  2  'Name of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_index_params.data_type IS
  2  'Datatype of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_index_params.elementary IS
  2  'Field to indicate if the attribute is elementary';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_index_params.indexed IS
  2  'Field to indicate if the attribute is indexed in the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_index_params.operator_list IS
  2  'List of common operators for the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_index_params.xmltype_attr IS
  2  'The XMLType attribute for which the current XPath attribute is defined';

Comment created.

SQL> 
SQL> ---
SQL> ---                        ALL_EXPFIL_INDEX_PARAMS
SQL> ---        (using the privs of the table storing expressions)
SQL> create or replace view ALL_EXPFIL_INDEX_PARAMS
  2    (OWNER, EXPSET_TABLE, EXPSET_COLUMN, ATTRIBUTE, DATA_TYPE, ELEMENTARY,
  3     INDEXED, OPERATOR_LIST, XMLTYPE_ATTR) as
  4    select esetowner, esettabn, esetcoln, attrsexp, attrtype,
  5           decode (bitand(attrprop, 1), 1, 'YES','NO'),
  6           decode (bitand(attrprop, 8), 8, 'YES','NO'),
  7           varray2str(attroper), xmltattr
  8    from exf$esetidxparam, all_tables ao
  9    where  esetowner = ao.owner and esettabn = ao.table_name;

View created.

SQL> 
SQL> create or replace public synonym ALL_EXPFIL_INDEX_PARAMS
  2    for exfsys.ALL_EXPFIL_INDEX_PARAMS;

Synonym created.

SQL> 
SQL> grant select on ALL_EXPFIL_INDEX_PARAMS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE  all_expfil_index_params IS
  2  'List of all the stored attributes for index instances accessible to the user';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_index_params.owner IS
  2  'Owner of the Expression Set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_index_params.expset_table IS
  2  'Name of the table storing the expressions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_index_params.expset_column IS
  2  'Name of the column storing the expressions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_index_params.attribute IS
  2  'Name of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_index_params.data_type IS
  2  'Datatype of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_index_params.elementary IS
  2  'Field to indicate if the attribute is elementary';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_index_params.indexed IS
  2  'Field to indicate if the attribute is indexed in the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_index_params.operator_list IS
  2  'List of common operators for the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_index_params.xmltype_attr IS
  2  'The XMLType attribute for which the current XPath attribute is defined';

Comment created.

SQL> 
SQL> 
SQL> ---
SQL> ---                        ADM_EXPFIL_INDEX_PARAMS
SQL> ---
SQL> create or replace view ADM_EXPFIL_INDEX_PARAMS
  2    (OWNER, EXPSET_TABLE, EXPSET_COLUMN, ATTRIBUTE, DATA_TYPE, ELEMENTARY,
  3     INDEXED, OPERATOR_LIST, XMLTYPE_ATTR) as
  4    select esetowner, esettabn, esetcoln, attrsexp, attrtype,
  5           decode (bitand(attrprop, 1), 1, 'YES','NO'),
  6           decode (bitand(attrprop, 8), 8, 'YES','NO'),
  7           varray2str(attroper), xmltattr
  8    from exf$esetidxparam;

View created.

SQL> 
SQL> COMMENT ON TABLE  adm_expfil_index_params IS
  2  'List of all the stored attributes for all index instances';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_index_params.owner IS
  2  'Owner of the Expression Set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_index_params.expset_table IS
  2  'Name of the table storing the expressions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_index_params.expset_column IS
  2  'Name of the column storing the expressions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_index_params.attribute IS
  2  'Name of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_index_params.data_type IS
  2  'Datatype of the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_index_params.elementary IS
  2  'Field to indicate if the attribute is elementary';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_index_params.indexed IS
  2  'Field to indicate if the attribute is indexed in the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_index_params.operator_list IS
  2  'List of common operators for the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_index_params.xmltype_attr IS
  2  'The XMLType attribute for which the current XPath attribute is defined';

Comment created.

SQL> 
SQL> 
SQL> /****************** [USER/ALL/ADM]_EXPFIL_ASET_FUNCTIONS *******************/
SQL> --
SQL> --                   USER_EXPFIL_ASET_FUNCTIONS
SQL> --
SQL> create or replace view USER_EXPFIL_ASET_FUNCTIONS
  2    (ATTRIBUTE_SET_NAME, UDF_NAME, OBJECT_OWNER, OBJECT_NAME, OBJECT_TYPE)
  3    as
  4  select udfasname, udfname, udfobjown, udfobjnm, udftype from
  5     exf$asudflist where udfasoner = (select user from dual);

View created.

SQL> 
SQL> create or replace public synonym USER_EXPFIL_ASET_FUNCTIONS for
  2                                   exfsys.USER_EXPFIL_ASET_FUNCTIONS;

Synonym created.

SQL> 
SQL> grant select on USER_EXPFIL_ASET_FUNCTIONS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE USER_EXPFIL_ASET_FUNCTIONS IS
  2  'List of approved user-defined functions for the attribute sets';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_aset_functions.attribute_set_name IS
  2  'Name of the attribute set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_aset_functions.udf_name IS
  2  'Name of the user-defined FUNCTION/PACKAGE/TYPE';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_aset_functions.object_owner IS
  2  'Owner of the object';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_aset_functions.object_name IS
  2  'Name of the object';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_aset_functions.object_type IS
  2  'Type of the object - FUNCTION/PACKAGE/TYPE';

Comment created.

SQL> 
SQL> ---
SQL> ---             ALL_EXPFIL_ASET_FUNCTIONS
SQL> ---    (use privs of the associated attribute set type)
SQL> create or replace view ALL_EXPFIL_ASET_FUNCTIONS
  2    (OWNER, ATTRIBUTE_SET_NAME, UDF_NAME, OBJECT_OWNER,
  3     OBJECT_NAME, OBJECT_TYPE)
  4    as
  5  select udfasoner, udfasname, udfname, udfobjown, udfobjnm, udftype from
  6     exf$asudflist, all_types ao where
  7     udfasoner = ao.owner and udfasname = ao.type_name;

View created.

SQL> 
SQL> create or replace public synonym ALL_EXPFIL_ASET_FUNCTIONS
  2    for exfsys.ALL_EXPFIL_ASET_FUNCTIONS;

Synonym created.

SQL> 
SQL> grant select on ALL_EXPFIL_ASET_FUNCTIONS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE ALL_EXPFIL_ASET_FUNCTIONS IS
  2  'List of approved user-defined functions for the attribute sets accessible
  3   to the user';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_aset_functions.owner IS
  2  'Owner of the attribute set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_aset_functions.attribute_set_name IS
  2  'Name of the attribute set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_aset_functions.udf_name IS
  2  'Name of the user-defined FUNCTION/PACKAGE/TYPE';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_aset_functions.object_owner IS
  2  'Owner of the object';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_aset_functions.object_name IS
  2  'Name of the object';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_aset_functions.object_type IS
  2  'Type of the object - FUNCTION/PACKAGE/TYPE';

Comment created.

SQL> 
SQL> ---
SQL> ---             ADM_EXPFIL_ASET_FUNCTIONS
SQL> ---
SQL> create or replace view ADM_EXPFIL_ASET_FUNCTIONS
  2    (OWNER, ATTRIBUTE_SET_NAME, UDF_NAME, OBJECT_OWNER,
  3     OBJECT_NAME, OBJECT_TYPE)
  4    as
  5  select udfasoner, udfasname, udfname, udfobjown, udfobjnm, udftype from
  6     exf$asudflist;

View created.

SQL> 
SQL> COMMENT ON TABLE ADM_EXPFIL_ASET_FUNCTIONS IS
  2  'List of approved user-defined functions for the attribute sets';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_aset_functions.owner IS
  2  'Owner of the attribute set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_aset_functions.attribute_set_name IS
  2  'Name of the attribute set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_aset_functions.udf_name IS
  2  'Name of the user-defined FUNCTION/PACKAGE/TYPE';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_aset_functions.object_owner IS
  2  'Owner of the object';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_aset_functions.object_name IS
  2  'Name of the object';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_aset_functions.object_type IS
  2  'Type of the object - FUNCTION/PACKAGE/TYPE';

Comment created.

SQL> 
SQL> /*******************  [USER/ALL/ADM]_EXPFIL_XPATH_TAGS *********************/
SQL> ---
SQL> ---                   USER_EXPFIL_XPATH_TAGS
SQL> ---
SQL> create or replace view USER_EXPFIL_XPATH_TAGS
  2    (ATTRIBUTE_SET_NAME, XMLTYPE_ATTRIBUTE, XPATH_TAG, DATA_TYPE, TAG_TYPE,
  3     FILTER_TYPE) as
  4    select atsname, xmltattr, attrsexp, attrtype,
  5       decode(bitand(attrprop, 32), 32, 'XML ELEMENT',
  6              decode(bitand(attrprop, 64), 64, 'XML ATTRIBUTE', null)),
  7       decode(bitand(attrprop, 128), 128, 'POSITIONAL',
  8              decode(bitand(attrprop, 256), 256, 'VALUE BASED', null))
  9     from exf$defidxparam where xmltattr is not null and
 10          atsowner = (select user from dual);

View created.

SQL> 
SQL> --
SQL> --create or replace public synonym USER_EXPFIL_XPATH_TAGS for
SQL> --                                        exfsys.USER_EXPFIL_XPATH_TAGS;
SQL> 
SQL> grant select on USER_EXPFIL_XPATH_TAGS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE user_expfil_xpath_tags IS
  2  'List of all the XPath Tags in the attribute sets';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_xpath_tags.attribute_set_name IS
  2  'Name of the attribute set a XPath Tag belongs';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_xpath_tags.xmltype_attribute IS
  2  'Name of the XMLType attribute for which this XPath Tag is defined';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_xpath_tags.xpath_tag IS
  2  'Name of the XPath Tag';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_xpath_tags.data_type IS
  2  'Datatype of the values for the XPath tag';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_xpath_tags.tag_type IS
  2  'Type of the Tag - XML ELEMENT or XML ATTRIBUTE';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_xpath_tags.filter_type IS
  2  'Type of filter for the XPath tag - POSITIONAL/ VALUE BASED';

Comment created.

SQL> 
SQL> ---
SQL> ---               ALL_EXPFIL_XPATH_TAGS
SQL> ---     (use privs of the associated attribute set type)
SQL> create or replace view ALL_EXPFIL_XPATH_TAGS
  2    (OWNER, ATTRIBUTE_SET_NAME, XMLTYPE_ATTRIBUTE, XPATH_TAG, DATA_TYPE,
  3     TAG_TYPE, FILTER_TYPE) as
  4    select atsowner, atsname, xmltattr, attrsexp, attrtype,
  5       decode(bitand(attrprop, 32), 32, 'XML ELEMENT',
  6              decode(bitand(attrprop, 64), 64, 'XML ATTRIBUTE', null)),
  7       decode(bitand(attrprop, 128), 128, 'POSITIONAL',
  8              decode(bitand(attrprop, 256), 256, 'VALUE BASED', null))
  9     from exf$defidxparam, all_types ao where
 10    atsowner = ao.owner and atsname = ao.type_name and xmltattr is not null;

View created.

SQL> 
SQL> --
SQL> --create or replace public synonym ALL_EXPFIL_ASET_FUNCTIONS
SQL> --  for exfsys.ALL_EXPFIL_ASET_FUNCTIONS;
SQL> --
SQL> grant select on ALL_EXPFIL_ASET_FUNCTIONS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE all_expfil_xpath_tags IS
  2  'List of all the XPath Tags in the attribute sets accessible to the user';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_xpath_tags.owner IS
  2  'Schema owning the attribute set with the XPath tags';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_xpath_tags.attribute_set_name IS
  2  'Name of the attribute set a XPath Tag belongs';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_xpath_tags.xmltype_attribute IS
  2  'Name of the XMLType attribute for which this XPath Tag is defined';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_xpath_tags.xpath_tag IS
  2  'Name of the XPath Tag';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_xpath_tags.data_type IS
  2  'Datatype of the values for the XPath tag';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_xpath_tags.tag_type IS
  2  'Type of the Tag - XML ELEMENT or XML ATTRIBUTE';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_xpath_tags.filter_type IS
  2  'Type of filter for the XPath tag - POSITIONAL/ VALUE BASED';

Comment created.

SQL> 
SQL> ---
SQL> ---                    ADM_EXPFIL_XPATH_TAGS
SQL> ---
SQL> create or replace view ADM_EXPFIL_XPATH_TAGS
  2    (OWNER, ATTRIBUTE_SET_NAME, XMLTYPE_ATTRIBUTE, XPATH_TAG, DATA_TYPE,
  3     TAG_TYPE, FILTER_TYPE) as
  4    select atsowner, atsname, xmltattr, attrsexp, attrtype,
  5       decode(bitand(attrprop, 32), 32, 'XML ELEMENT',
  6              decode(bitand(attrprop, 64), 64, 'XML ATTRIBUTE', null)),
  7       decode(bitand(attrprop, 128), 128, 'POSITIONAL',
  8              decode(bitand(attrprop, 256), 256, 'VALUE BASED', null))
  9     from exf$defidxparam where xmltattr is not null;

View created.

SQL> 
SQL> COMMENT ON TABLE adm_expfil_xpath_tags IS
  2  'List of all the XPath Tags in the attribute sets';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_xpath_tags.owner IS
  2  'Schema owning the attribute set with the XPath tags';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_xpath_tags.attribute_set_name IS
  2  'Name of the attribute set a XPath Tag belongs';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_xpath_tags.xmltype_attribute IS
  2  'Name of the XMLType attribute for which this XPath Tag is defined';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_xpath_tags.xpath_tag IS
  2  'Name of the XPath Tag';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_xpath_tags.data_type IS
  2  'Datatype of the values for the XPath tag';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_xpath_tags.tag_type IS
  2  'Type of the Tag - XML ELEMENT or XML ATTRIBUTE';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_xpath_tags.filter_type IS
  2  'Type of filter for the XPath tag - POSITIONAL/ VALUE BASED';

Comment created.

SQL> 
SQL> /***************** [USER/SCH/ALL/ADM]_EXPFIL_INDEXES ***********************/
SQL> ---
SQL> ---                    USER_EXPFIL_INDEXES
SQL> ---
SQL> create or replace view USER_EXPFIL_INDEXES
  2    (INDEX_NAME, PREDICATE_TABLE, ACCESS_FUNC_PACKAGE, ATTRIBUTE_SET,
  3     EXPRESSION_TABLE, EXPRESSION_COLUMN, STATUS, FUNC_CPU_COST,
  4     FUNC_IO_COST, INDEX_SELECTIVITY, INDEX_CPU_COST, INDEX_IO_COST)
  5    as
  6    select io.idxname, io.idxpredtab, io.idxaccfunc, io.idxattrset,
  7           io.idxesettab, idxesetcol, io.idxstatus, io.optfccpuct,
  8           io.optfcioct, io.optixselvt, io.optixcpuct, io.optixioct
  9    from exf$idxsecobj io
 10    where io.idxowner = (select user from dual);

View created.

SQL> 
SQL> create or replace public synonym USER_EXPFIL_INDEXES for
  2                                          exfsys.USER_EXPFIL_INDEXES;

Synonym created.

SQL> 
SQL> grant select on USER_EXPFIL_INDEXES to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE user_expfil_indexes IS
  2  'List of all the expression filter indexes in this schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_indexes.index_name IS
  2  'Name of the index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_indexes.predicate_table IS
  2  'Predicate table associated with the index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_indexes.access_func_package IS
  2  'System generated package that implements the index''s access function';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_indexes.attribute_set IS
  2  'Name of the attribute set used for this index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_indexes.expression_table IS
  2  'The table storing the expression set corresponding to this index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_indexes.expression_column IS
  2  'The column storing the expression set corresponding to this index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_indexes.status IS
  2  'The current status of the index : VALID, FAILED [IMP], INPROGRESS';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_indexes.func_cpu_cost IS
  2  'Estimated CPU cost for function based evaluation of each expression';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_indexes.func_io_cost IS
  2  'Estimated I/O cost for function based evaluation of each expression';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_indexes.index_selectivity IS
  2  'Estimated selectivity of the index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_indexes.index_cpu_cost IS
  2  'Estimated CPU cost for the index based evaluation of expressions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_indexes.index_io_cost IS
  2  'Estimated I/O cost for the index based evaluation of expressions';

Comment created.

SQL> 
SQL> ---
SQL> ---                    SCH_EXPFIL_INDEXES
SQL> --- This view is used by the IndexStart implementation and is not
SQL> --- required by the end user. This view performs better than the
SQL> --- ALL_EXPFIL_INDEXES as it does not need priviledge info.
SQL> --- The user query already goes through privilege checks for the
SQL> --- table and the ind$ index entry.
SQL> ---
SQL> create or replace view SCH_EXPFIL_INDEXES
  2    (INDEX_NAME, PREDICATE_TABLE, ACCESS_FUNC_PACKAGE, ATTRIBUTE_SET,
  3     EXPRESSION_TABLE, EXPRESSION_COLUMN, FUNC_CPU_COST, FUNC_IO_COST,
  4     INDEX_SELECTIVITY, INDEX_CPU_COST, INDEX_IO_COST, PTAB_FULLIO_COST)
  5    as
  6    select io.idxname, io.idxpredtab, io.idxaccfunc, io.idxattrset,
  7           io.idxesettab, idxesetcol, io.optfccpuct, io.optfcioct,
  8           io.optixselvt, io.optixcpuct, io.optixioct, io.optptfscct
  9    from exf$idxsecobj io
 10    where io.idxowner = SYS_CONTEXT('USERENV', 'CURRENT_SCHEMA');

View created.

SQL> 
SQL> grant select on exfsys.SCH_EXPFIL_INDEXES to public;

Grant succeeded.

SQL> 
SQL> ---
SQL> ---                    ALL_EXPFIL_INDEXES
SQL> ---                (use privs of the index)
SQL> create or replace view ALL_EXPFIL_INDEXES
  2    (OWNER, INDEX_NAME, PREDICATE_TABLE, ACCESS_FUNC_PACKAGE, ATTRIBUTE_SET,
  3     EXPRESSION_TABLE, EXPRESSION_COLUMN, STATUS, FUNC_CPU_COST,
  4     FUNC_IO_COST, INDEX_SELECTIVITY, INDEX_CPU_COST, INDEX_IO_COST)
  5    as
  6    select io.idxowner, io.idxname, io.idxpredtab, io.idxaccfunc,
  7           io.idxattrset, io.idxesettab, idxesetcol, io.idxstatus,
  8           io.optfccpuct, io.optfcioct, io.optixselvt, io.optixcpuct,
  9           io.optixioct
 10    from exf$idxsecobj io, all_indexes ai
 11    where io.idxowner = ai.owner and io.idxname = ai.index_name;

View created.

SQL> 
SQL> create or replace public synonym ALL_EXPFIL_INDEXES
  2    for exfsys.ALL_EXPFIL_INDEXES;

Synonym created.

SQL> 
SQL> grant select on ALL_EXPFIL_INDEXES to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE all_expfil_indexes IS
  2  'List of all the expression filter indexes in this instance';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_indexes.owner IS
  2  'Owner of the index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_indexes.index_name IS
  2  'Name of the index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_indexes.predicate_table IS
  2  'Predicate table associated with the index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_indexes.access_func_package IS
  2  'System generated package that implements the index''s access function';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_indexes.attribute_set IS
  2  'Name of the attribute set used for this index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_indexes.expression_table IS
  2  'The table storing the expression set corresponding to this index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_indexes.expression_column IS
  2  'The column storing the expression set corresponding to this index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_indexes.status IS
  2  'The current status of the index : VALID, FAILED [IMP], INPROGRESS';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_indexes.func_cpu_cost IS
  2  'Estimated CPU cost for function based evaluation of each expression';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_indexes.func_io_cost IS
  2  'Estimated I/O cost for function based evaluation of each expression';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_indexes.index_selectivity IS
  2  'Estimated selectivity of the index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_indexes.index_cpu_cost IS
  2  'Estimated CPU cost for the index based evaluation of expressions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_indexes.index_io_cost IS
  2  'Estimated I/O cost for the index based evaluation of expressions';

Comment created.

SQL> 
SQL> ---
SQL> ---                    ADM_EXPFIL_INDEXES
SQL> ---
SQL> create or replace view ADM_EXPFIL_INDEXES
  2    (OWNER, INDEX_NAME, PREDICATE_TABLE, ACCESS_FUNC_PACKAGE, ATTRIBUTE_SET,
  3     EXPRESSION_TABLE, EXPRESSION_COLUMN, STATUS)
  4    as
  5    select io.idxowner, io.idxname, io.idxpredtab, io.idxaccfunc,
  6           io.idxattrset, io.idxesettab, idxesetcol, io.idxstatus
  7    from exf$idxsecobj io;

View created.

SQL> 
SQL> COMMENT ON TABLE adm_expfil_indexes IS
  2  'List of all the expression filter indexes in this instance';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_indexes.owner IS
  2  'Owner of the index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_indexes.index_name IS
  2  'Name of the index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_indexes.predicate_table IS
  2  'Predicate table associated with the index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_indexes.access_func_package IS
  2  'System generated package that implements the index''s access function';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_indexes.attribute_set IS
  2  'Name of the attribute set used for this index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_indexes.expression_table IS
  2  'The table storing the expression set corresponding to this index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_indexes.expression_column IS
  2  'The column storing the expression set corresponding to this index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_indexes.status IS
  2  'The current status of the index : VALID, FAILED [IMP], INPROGRESS';

Comment created.

SQL> 
SQL> /***************** [USER/ALL/ADM]_EXPFIL_PREDTAB_ATTRIBUTES ****************/
SQL> ---
SQL> ---                    USER_EXPFIL_PREDTAB_ATTRIBUTES
SQL> ---
SQL> create or replace view USER_EXPFIL_PREDTAB_ATTRIBUTES
  2    (INDEX_NAME, ATTRIBUTE_ID, ATTRIBUTE_ALIAS, SUBEXPRESSION, DATA_TYPE,
  3    STORED, INDEXED, OPERATOR_LIST, XMLTYPE_ATTR, XPTAG_TYPE, XPFILTER_TYPE)
  4    as select io.idxname, pc.ptattrid, pc.ptattralias, pc.ptattrsexp,
  5    pc.ptattrtype, decode (bitand(pc.ptattrprop, 1), 1, 'YES','NO'),
  6    decode (bitand(pc.ptattrprop, 2), 2, 'YES','NO'), varray2str(ptattroper),
  7    pc.xmltattr, decode(bitand(ptattrprop, 8), 8, 'XML ELEMENT',
  8                decode(bitand(ptattrprop, 16), 16, 'XML ATTRIBUTE', null)),
  9    decode(bitand(ptattrprop, 32), 32, 'POSITIONAL',
 10           decode(bitand(ptattrprop, 128), 128, 'CHAR VALUE',
 11             decode(bitand(ptattrprop, 256), 256, 'INT VALUE',
 12               decode(bitand(ptattrprop, 512), 512, 'DATE VALUE', null))))
 13    from exf$predattrmap pc, exf$idxsecobj io
 14    where io.idxobj# = pc.ptidxobj# and io.idxowner = (select user from dual)
 15          and bitand(ptattrprop, 1024) = 0;

View created.

SQL> 
SQL> create or replace public synonym USER_EXPFIL_PREDTAB_ATTRIBUTES for
  2                                      exfsys.USER_EXPFIL_PREDTAB_ATTRIBUTES;

Synonym created.

SQL> 
SQL> grant select on USER_EXPFIL_PREDTAB_ATTRIBUTES to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE user_expfil_predtab_attributes IS
  2  'List of all the predicate table attributes in this schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_predtab_attributes.index_name IS
  2  'Name of the index associated with the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_predtab_attributes.attribute_id IS
  2  'Identifier for the predicate table attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_predtab_attributes.attribute_alias IS
  2  'Alias for the predicate table attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_predtab_attributes.subexpression IS
  2  'Sub-expression representing the complex or elementary attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_predtab_attributes.data_type IS
  2  'Resulting datatype of the sub-expression';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_predtab_attributes.stored IS
  2  'Field to indicate if the attribute is stored in the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_predtab_attributes.indexed IS
  2  'Field to indicate if the attribute is indexed in the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_predtab_attributes.operator_list IS
  2  'List of common operators for the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_predtab_attributes.xmltype_attr IS
  2  'The XMLType attribute for which the current XPath attribute is defined';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_predtab_attributes.xptag_type IS
  2  'Type of the Tag - XML ELEMENT or XML ATTRIBUTE';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_predtab_attributes.xpfilter_type IS
  2  'Type of filter for the XPath tag - POSITIONAL/ [CHAR|INT|DATE] VALUE ';

Comment created.

SQL> 
SQL> ---
SQL> ---                    ALL_EXPFIL_PREDTAB_ATTRIBUTES
SQL> ---                 (use privs of the index object)
SQL> create or replace view ALL_EXPFIL_PREDTAB_ATTRIBUTES
  2    (OWNER, INDEX_NAME, ATTRIBUTE_ID, ATTRIBUTE_ALIAS, SUBEXPRESSION, DATA_TYPE,
  3    STORED, INDEXED, OPERATOR_LIST, XMLTYPE_ATTR, XPTAG_TYPE, XPFILTER_TYPE)
  4    as select io.idxowner, io.idxName, pc.ptattrid, pc.ptattralias,
  5    pc.ptattrsexp, pc.ptattrtype,
  6    decode (bitand(pc.ptattrprop, 1), 1, 'YES','NO'),
  7    decode (bitand(pc.ptattrprop, 2), 2, 'YES','NO'), varray2str(ptattroper),
  8    pc.xmltattr, decode(bitand(ptattrprop, 8), 8, 'XML ELEMENT',
  9                decode(bitand(ptattrprop, 16), 16, 'XML ATTRIBUTE', null)),
 10    decode(bitand(ptattrprop, 32), 32, 'POSITIONAL',
 11           decode(bitand(ptattrprop, 128), 128, 'CHAR VALUE',
 12             decode(bitand(ptattrprop, 256), 256, 'INT VALUE',
 13               decode(bitand(ptattrprop, 512), 512, 'DATE VALUE', null))))
 14    from exf$predattrmap pc, exf$idxsecobj io, all_indexes ai
 15    where io.idxobj# = pc.ptidxobj# and io.idxowner = ai.owner
 16    and io.idxname = ai.index_name;

View created.

SQL> 
SQL> create or replace public synonym ALL_EXPFIL_PREDTAB_ATTRIBUTES for
  2                                      exfsys.ALL_EXPFIL_PREDTAB_ATTRIBUTES;

Synonym created.

SQL> 
SQL> grant select on ALL_EXPFIL_PREDTAB_ATTRIBUTES to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE all_expfil_predtab_attributes IS
  2  'List of all the predicate table attributes';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_predtab_attributes.owner IS
  2  'Owner of the index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_predtab_attributes.index_name IS
  2  'Name of the index associated with the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_predtab_attributes.attribute_id IS
  2  'Identifier for the predicate table attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_predtab_attributes.attribute_alias IS
  2  'Alias for the predicate table attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_predtab_attributes.subexpression IS
  2  'Sub-expression representing the complex or elementary attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_predtab_attributes.data_type IS
  2  'Resulting datatype of the sub-expression';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_predtab_attributes.stored IS
  2  'Field to indicate if the attribute is stored in the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_predtab_attributes.indexed IS
  2  'Field to indicate if the attribute is indexed in the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_predtab_attributes.operator_list IS
  2  'List of common operators for the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_predtab_attributes.xmltype_attr IS
  2  'The XMLType attribute for which the current XPath attribute is defined';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_predtab_attributes.xptag_type IS
  2  'Type of the Tag - XML ELEMENT or XML ATTRIBUTE';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_predtab_attributes.xpfilter_type IS
  2  'Type of filter for the XPath tag - POSITIONAL/ [CHAR|INT|DATE] VALUE ';

Comment created.

SQL> 
SQL> ---
SQL> ---                    ADM_EXPFIL_PREDTAB_ATTRIBUTES
SQL> ---
SQL> create or replace view ADM_EXPFIL_PREDTAB_ATTRIBUTES
  2    (OWNER, INDEX_NAME, ATTRIBUTE_ID, ATTRIBUTE_ALIAS, SUBEXPRESSION, DATA_TYPE,
  3    STORED, INDEXED, OPERATOR_LIST, XMLTYPE_ATTR, XPTAG_TYPE, XPFILTER_TYPE)
  4    as select io.idxowner, io.idxName, pc.ptattrid, pc.ptattralias,
  5    pc.ptattrsexp, pc.ptattrtype,
  6    decode (bitand(pc.ptattrprop, 1), 1, 'YES','NO'),
  7    decode (bitand(pc.ptattrprop, 2), 2, 'YES','NO'), varray2str(ptattroper),
  8    pc.xmltattr, decode(bitand(ptattrprop, 8), 8, 'XML ELEMENT',
  9           decode(bitand(ptattrprop, 16), 16, 'XML ATTRIBUTE', null)),
 10    decode(bitand(ptattrprop, 32), 32, 'POSITIONAL',
 11           decode(bitand(ptattrprop, 128), 128, 'CHAR VALUE',
 12             decode(bitand(ptattrprop, 256), 256, 'INT VALUE',
 13               decode(bitand(ptattrprop, 512), 512, 'DATE VALUE', null))))
 14    from exf$predattrmap pc, exf$idxsecobj io
 15    where io.idxobj# = pc.ptidxobj#;

View created.

SQL> 
SQL> COMMENT ON TABLE adm_expfil_predtab_attributes IS
  2  'List of all the predicate table attributes';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_predtab_attributes.owner IS
  2  'Owner of the index';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_predtab_attributes.index_name IS
  2  'Name of the index associated with the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_predtab_attributes.attribute_id IS
  2  'Identifier for the predicate table attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_predtab_attributes.attribute_alias IS
  2  'Alias for the predicate table attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_predtab_attributes.subexpression IS
  2  'Sub-expression representing the complex or elementary attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_predtab_attributes.data_type IS
  2  'Resulting datatype of the sub-expression';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_predtab_attributes.stored IS
  2  'Field to indicate if the attribute is stored in the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_predtab_attributes.indexed IS
  2  'Field to indicate if the attribute is indexed in the predicate table';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_predtab_attributes.operator_list IS
  2  'List of common operators for the attribute';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_predtab_attributes.xmltype_attr IS
  2  'The XMLType attribute for which the current XPath attribute is defined';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_predtab_attributes.xptag_type IS
  2  'Type of the Tag - XML ELEMENT or XML ATTRIBUTE';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_predtab_attributes.xpfilter_type IS
  2  'Type of filter for the XPath tag - POSITIONAL/ [CHAR|INT|DATE] VALUE ';

Comment created.

SQL> 
SQL> /***************** [USER/ALL/ADM]_EXPFIL_EXPRESSION_SETS *******************/
SQL> ---
SQL> ---                USER_EXPFIL_EXPRESSION_SETS
SQL> ---
SQL> create or replace view USER_EXPFIL_EXPRESSION_SETS
  2    (EXPR_TABLE, EXPR_COLUMN, ATTRIBUTE_SET, LAST_ANALYZED,
  3     NUM_EXPRESSIONS, PREDS_PER_EXPR, NUM_SPARSE_PREDS)
  4    as select exstabnm, exscolnm, exsatsnm, exsetlanl, exsetnexp,
  5              avgprpexp, exsetsprp from exf$exprset
  6    where exsowner = (select user from dual);

View created.

SQL> 
SQL> 
SQL> create or replace public synonym USER_EXPFIL_EXPRESSION_SETS for
  2                                      exfsys.USER_EXPFIL_EXPRESSION_SETS;

Synonym created.

SQL> 
SQL> grant select on USER_EXPFIL_EXPRESSION_SETS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE user_expfil_expression_sets IS
  2  'List of expression sets in the current schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_expression_sets.expr_table IS
  2  'The table storing the expression set in the current schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_expression_sets.expr_column IS
  2  'The column storing the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_expression_sets.attribute_set IS
  2  'Attribute set used for the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_expression_sets.last_analyzed IS
  2  'The date of the most recent time the expression set is analyzed';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_expression_sets.num_expressions IS
  2  'Number of expressions (disjunctions) in the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_expression_sets.preds_per_expr IS
  2  'Average number of conjunctive predicates per expressions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_expression_sets.num_sparse_preds IS
  2  'Number of sparse predicates in the expression set';

Comment created.

SQL> 
SQL> ---
SQL> ---                ALL_EXPFIL_EXPRESSION_SETS
SQL> ---      (use privs of the table storing expressions)
SQL> create or replace view ALL_EXPFIL_EXPRESSION_SETS
  2    (OWNER, EXPR_TABLE, EXPR_COLUMN, ATTRIBUTE_SET,
  3     LAST_ANALYZED, NUM_EXPRESSIONS, PREDS_PER_EXPR, NUM_SPARSE_PREDS)
  4    as select exsowner, exstabnm, exscolnm, exsatsnm,
  5              exsetlanl, exsetnexp, avgprpexp, exsetsprp
  6    from exf$exprset, all_tables at
  7    where at.owner = exsowner and at.table_name = exstabnm;

View created.

SQL> 
SQL> create or replace public synonym ALL_EXPFIL_EXPRESSION_SETS for
  2                                      exfsys.ALL_EXPFIL_EXPRESSION_SETS;

Synonym created.

SQL> 
SQL> grant select on ALL_EXPFIL_EXPRESSION_SETS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE all_expfil_expression_sets IS
  2  'List of expression sets accessible to the current user';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_expression_sets.owner IS
  2  'Owner of the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_expression_sets.expr_table IS
  2  'The table storing the expression set in the owner''s schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_expression_sets.expr_column IS
  2  'The column storing the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_expression_sets.attribute_set IS
  2  'Attribute set used for the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_expression_sets.last_analyzed IS
  2  'The date of the most recent time the expression set is analyzed';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_expression_sets.num_expressions IS
  2  'Number of expressions (disjunctions) in the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_expression_sets.preds_per_expr IS
  2  'Average number of conjunctive predicates per expressions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_expression_sets.num_sparse_preds IS
  2  'Number of sparse predicates in the expression set';

Comment created.

SQL> 
SQL> ---
SQL> ---                ADM_EXPFIL_EXPRESSION_SETS
SQL> ---
SQL> create or replace view ADM_EXPFIL_EXPRESSION_SETS
  2    (OWNER, EXPR_TABLE, EXPR_COLUMN, ATTRIBUTE_SET, PRIVILEGE_TRIGGER,
  3     LAST_ANALYZED, NUM_EXPRESSIONS, PREDS_PER_EXPR, NUM_SPARSE_PREDS)
  4    as select exsowner, exstabnm, exscolnm, exsatsnm, exsprvtrig,
  5              exsetlanl, exsetnexp, avgprpexp, exsetsprp from exf$exprset;

View created.

SQL> 
SQL> COMMENT ON TABLE adm_expfil_expression_sets IS
  2  'List of expression sets';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_expression_sets.owner IS
  2  'Owner of the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_expression_sets.expr_table IS
  2  'The table storing the expression set in the owner''s schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_expression_sets.expr_column IS
  2  'The column storing the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_expression_sets.attribute_set IS
  2  'Attribute set used for the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_expression_sets.privilege_trigger IS
  2  'Trigger used to enforce the privileges for the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_expression_sets.last_analyzed IS
  2  'The date of the most recent time the expression set is analyzed';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_expression_sets.num_expressions IS
  2  'Number of expressions (disjunctions) in the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_expression_sets.preds_per_expr IS
  2  'Average number of conjunctive predicates per expressions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_expression_sets.num_sparse_preds IS
  2  'Number of sparse predicates in the expression set';

Comment created.

SQL> 
SQL> /************************ [USER/ADM]_EXPFIL_PRIVELEGES *********************/
SQL> ---
SQL> ---                   USER_EXPFIL_PRIVILEGES
SQL> ---
SQL> create or replace view USER_EXPFIL_PRIVILEGES
  2   (EXPSET_OWNER, EXPSET_TABLE, EXPSET_COLUMN, GRANTEE, INSERT_PRIV,
  3    UPDATE_PRIV) as
  4   select esowner, esexptab, esexpcol, esgrantee, escrtpriv, esupdpriv from
  5     exf$expsetprivs where esgrantee = 'PUBLIC' or
  6      esgrantee = (select user from dual) or
  7      esowner = (select user from dual);

View created.

SQL> 
SQL> create or replace public synonym USER_EXPFIL_PRIVILEGES for
  2                                      exfsys.USER_EXPFIL_PRIVILEGES;

Synonym created.

SQL> 
SQL> grant select on USER_EXPFIL_PRIVILEGES to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE user_expfil_privileges IS
  2  'Privileges for Expression set modifications';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_privileges.expset_owner IS
  2  'Owner of the table storing the expression set. Also the grantor';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_privileges.expset_table IS
  2  'The table storing the expression set in the owner''s schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_privileges.expset_column IS
  2  'The column storing the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_privileges.grantee IS
  2  'Grantee of the privilege. PUBLIC or the current user';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_privileges.insert_priv IS
  2  'Current user''s privilege to create new expressions in the set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_privileges.update_priv IS
  2  'Current user''s privilege to modify existing expressions in the set';

Comment created.

SQL> 
SQL> ---
SQL> ---                   ADM_EXPFIL_PRIVELEGES
SQL> ---
SQL> create or replace view ADM_EXPFIL_PRIVILEGES
  2   (EXPSET_OWNER, EXPSET_TABLE, EXPSET_COLUMN, GRANTEE, INSERT_PRIV,
  3    UPDATE_PRIV) as
  4   select esowner, esexptab, esexpcol, esgrantee, escrtpriv, esupdpriv from
  5     exf$expsetprivs;

View created.

SQL> 
SQL> COMMENT ON TABLE adm_expfil_privileges IS
  2  'Privileges for Expression set modifications';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_privileges.expset_owner IS
  2  'Owner of the table storing the expression set. Also the grantor';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_privileges.expset_table IS
  2  'The table storing the expression set in the owner''s schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_privileges.expset_column IS
  2  'The column storing the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_privileges.grantee IS
  2  'Grantee of the privilege. PUBLIC implies any user';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_privileges.insert_priv IS
  2  'Grantee''s privilege to create new expressions in the set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_privileges.update_priv IS
  2  'Grantee''s privilege to modify existing expressions in the set';

Comment created.

SQL> 
SQL> /******************* [USER/ALL/ADM]_EXPFIL_EXPRSET_STATS *******************/
SQL> ---
SQL> ---                   USER_EXPFIL_EXPRSET_STATS
SQL> ---
SQL> create or replace view USER_EXPFIL_EXPRSET_STATS
  2    (EXPR_TABLE, EXPR_COLUMN, ATTRIBUTE_EXP, PCT_OCCURRENCE,
  3     PCT_EQ_OPER, PCT_LT_OPER, PCT_GT_OPER, PCT_LTEQ_OPER, PCT_GTEQ_OPER,
  4     PCT_NEQ_OPER, PCT_NUL_OPER, PCT_NNUL_OPER, PCT_BETW_OPER, PCT_NVL_OPER,
  5     PCT_LIKE_OPER)
  6    as
  7   select e.ESETTABLE, e.ESETCOLUMN, e.PREDLHS, (((NOEQPREDS+NOLTPREDS+NOGTPREDS
  8    +NOLTEQPRS+NOGTEQPRS+NONEQPRS+NOISNLPRS+NOISNNLPRS+NOBETPREDS+NONVLPREDS
  9    +NOLIKEPRS)*100)/EXSETNEXP),
 10     NOEQPREDS*100/EXSETNEXP, NOLTPREDS*100/EXSETNEXP, NOGTPREDS*100/EXSETNEXP,
 11     NOLTEQPRS*100/EXSETNEXP, NOGTEQPRS*100/EXSETNEXP, NONEQPRS*100/EXSETNEXP,
 12     NOISNLPRS*100/EXSETNEXP, NOISNNLPRS*100/EXSETNEXP, NOBETPREDS*
 13      100/EXSETNEXP, NONVLPREDS*100/EXSETNEXP, NOLIKEPRS*100/EXSETNEXP
 14   from exf$expsetstats e, exf$exprset es
 15   where e.esetowner = es.exsowner and e.esettable = es.exstabnm and
 16         e.esetcolumn = es.exscolnm and e.esetowner = (select user from dual);

View created.

SQL> 
SQL> create or replace public synonym USER_EXPFIL_EXPRSET_STATS for
  2                                      exfsys.USER_EXPFIL_EXPRSET_STATS;

Synonym created.

SQL> 
SQL> grant select on USER_EXPFIL_EXPRSET_STATS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE user_expfil_exprset_stats IS
  2  'Predicate statistics for the expression sets in the current schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.expr_table IS
  2  'The table storing the expression set in the current schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.expr_column IS
  2  'The column storing the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.attribute_exp IS
  2  'Sub-expression representing the complex or elementary attribute. Also
  3   the left-hand-side of predicates';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.pct_occurrence IS
  2  'Percentage occurrence of the attribute in the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.pct_eq_oper IS
  2  'Percentage of predicates (of the attribute) with ''='' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.pct_lt_oper IS
  2  'Percentage of predicates (of the attribute) with ''<'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.pct_gt_oper IS
  2  'Percentage of predicates (of the attribute) with ''>'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.pct_lteq_oper IS
  2  'Percentage of predicates (of the attribute) with ''<='' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.pct_gteq_oper IS
  2  'Percentage of predicates (of the attribute) with ''>='' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.pct_neq_oper IS
  2  'Percentage of predicates (of the attribute) with ''!='' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.pct_nul_oper IS
  2  'Percentage of predicates (of the attribute) with ''IS NULL'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.pct_nnul_oper IS
  2  'Percentage of predicates (of the attribute) with ''IS NOT NULL'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.pct_betw_oper IS
  2  'Percentage of predicates (of the attribute) with ''BETWEEN'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.pct_nvl_oper IS
  2  'Percentage of predicates (of the attribute) with ''NVL'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN user_expfil_exprset_stats.pct_like_oper IS
  2  'Percentage of predicates (of the attribute) with ''LIKE'' operator';

Comment created.

SQL> 
SQL> ---
SQL> ---                   ALL_EXPFIL_EXPRSET_STATS
SQL> ---      (using the privs of the expression set table)
SQL> create or replace view ALL_EXPFIL_EXPRSET_STATS
  2    (OWNER, EXPR_TABLE, EXPR_COLUMN, ATTRIBUTE_EXP, PCT_OCCURRENCE,
  3     PCT_EQ_OPER, PCT_LT_OPER, PCT_GT_OPER, PCT_LTEQ_OPER, PCT_GTEQ_OPER,
  4     PCT_NEQ_OPER, PCT_NUL_OPER, PCT_NNUL_OPER, PCT_BETW_OPER, PCT_NVL_OPER,
  5     PCT_LIKE_OPER)
  6    as
  7   select e.ESETOWNER, e.ESETTABLE, e.ESETCOLUMN, e.PREDLHS,
  8     (((NOEQPREDS+NOLTPREDS+NOGTPREDS+NOLTEQPRS+NOGTEQPRS+NONEQPRS+NOISNLPRS+
  9        NOISNNLPRS+NOBETPREDS+NONVLPREDS+NOLIKEPRS)*100)/EXSETNEXP),
 10     NOEQPREDS*100/EXSETNEXP, NOLTPREDS*100/EXSETNEXP, NOGTPREDS*100/EXSETNEXP,
 11     NOLTEQPRS*100/EXSETNEXP, NOGTEQPRS*100/EXSETNEXP, NONEQPRS*100/EXSETNEXP,
 12     NOISNLPRS*100/EXSETNEXP, NOISNNLPRS*100/EXSETNEXP, NOBETPREDS*
 13      100/EXSETNEXP, NONVLPREDS*100/EXSETNEXP,  NOLIKEPRS*100/EXSETNEXP
 14   from exf$expsetstats e, exf$exprset es, all_tables ao
 15   where e.esetowner = ao.owner and e.esettable = ao.table_name and
 16         e.esetowner = es.exsowner and e.esettable = es.exstabnm and
 17         e.esetcolumn = es.exscolnm ;

View created.

SQL> 
SQL> create or replace public synonym ALL_EXPFIL_EXPRSET_STATS for
  2                                      exfsys.ALL_EXPFIL_EXPRSET_STATS;

Synonym created.

SQL> 
SQL> grant select on ALL_EXPFIL_EXPRSET_STATS to public;

Grant succeeded.

SQL> 
SQL> COMMENT ON TABLE all_expfil_exprset_stats IS
  2  'Predicate statistics for the expression sets in the current schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.owner IS
  2  'Owner of the table storing expressions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.expr_table IS
  2  'The table storing the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.expr_column IS
  2  'The column storing the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.attribute_exp IS
  2  'Sub-expression representing the complex or elementary attribute. Also
  3   the left-hand-side of predicates';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.pct_occurrence IS
  2  'Percentage occurrence of the attribute in the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.pct_eq_oper IS
  2  'Percentage of predicates (of the attribute) with ''='' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.pct_lt_oper IS
  2  'Percentage of predicates (of the attribute) with ''<'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.pct_gt_oper IS
  2  'Percentage of predicates (of the attribute) with ''>'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.pct_lteq_oper IS
  2  'Percentage of predicates (of the attribute) with ''<='' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.pct_gteq_oper IS
  2  'Percentage of predicates (of the attribute) with ''>='' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.pct_neq_oper IS
  2  'Percentage of predicates (of the attribute) with ''!='' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.pct_nul_oper IS
  2  'Percentage of predicates (of the attribute) with ''IS NULL'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.pct_nnul_oper IS
  2  'Percentage of predicates (of the attribute) with ''IS NOT NULL'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.pct_betw_oper IS
  2  'Percentage of predicates (of the attribute) with ''BETWEEN'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.pct_nvl_oper IS
  2  'Percentage of predicates (of the attribute) with ''NVL'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN all_expfil_exprset_stats.pct_like_oper IS
  2  'Percentage of predicates (of the attribute) with ''LIKE'' operator';

Comment created.

SQL> 
SQL> ---
SQL> ---                   ADM_EXPFIL_EXPRSET_STATS
SQL> ---
SQL> create or replace view ADM_EXPFIL_EXPRSET_STATS
  2    (OWNER, EXPR_TABLE, EXPR_COLUMN, ATTRIBUTE_EXP, PCT_OCCURRENCE,
  3     PCT_EQ_OPER, PCT_LT_OPER, PCT_GT_OPER, PCT_LTEQ_OPER, PCT_GTEQ_OPER,
  4     PCT_NEQ_OPER, PCT_NUL_OPER, PCT_NNUL_OPER, PCT_BETW_OPER, PCT_NVL_OPER,
  5     PCT_LIKE_OPER)
  6    as
  7   select e.ESETOWNER, e.ESETTABLE, e.ESETCOLUMN, e.PREDLHS,
  8     (((NOEQPREDS+NOLTPREDS+NOGTPREDS+NOLTEQPRS+NOGTEQPRS+NONEQPRS+NOISNLPRS+
  9        NOISNNLPRS+NOBETPREDS+NONVLPREDS+NOLIKEPRS)*100)/EXSETNEXP),
 10     NOEQPREDS*100/EXSETNEXP, NOLTPREDS*100/EXSETNEXP, NOGTPREDS*100/EXSETNEXP,
 11     NOLTEQPRS*100/EXSETNEXP, NOGTEQPRS*100/EXSETNEXP, NONEQPRS*100/EXSETNEXP,
 12     NOISNLPRS*100/EXSETNEXP, NOISNNLPRS*100/EXSETNEXP, NOBETPREDS*
 13      100/EXSETNEXP, NONVLPREDS*100/EXSETNEXP,  NOLIKEPRS*100/EXSETNEXP
 14   from exf$expsetstats e, exf$exprset es
 15   where e.esetowner = es.exsowner and e.esettable = es.exstabnm and
 16         e.esetcolumn = es.exscolnm ;

View created.

SQL> 
SQL> COMMENT ON TABLE adm_expfil_exprset_stats IS
  2  'Predicate statistics for the expression sets in the current schema';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.owner IS
  2  'Owner of the table storing expressions';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.expr_table IS
  2  'The table storing the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.expr_column IS
  2  'The column storing the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.attribute_exp IS
  2  'Sub-expression representing the complex or elementary attribute. Also
  3   the left-hand-side of predicates';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.pct_occurrence IS
  2  'Percentage occurrence of the attribute in the expression set';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.pct_eq_oper IS
  2  'Percentage of predicates (of the attribute) with ''='' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.pct_lt_oper IS
  2  'Percentage of predicates (of the attribute) with ''<'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.pct_gt_oper IS
  2  'Percentage of predicates (of the attribute) with ''>'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.pct_lteq_oper IS
  2  'Percentage of predicates (of the attribute) with ''<='' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.pct_gteq_oper IS
  2  'Percentage of predicates (of the attribute) with ''>='' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.pct_neq_oper IS
  2  'Percentage of predicates (of the attribute) with ''!='' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.pct_nul_oper IS
  2  'Percentage of predicates (of the attribute) with ''IS NULL'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.pct_nnul_oper IS
  2  'Percentage of predicates (of the attribute) with ''IS NOT NULL'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.pct_betw_oper IS
  2  'Percentage of predicates (of the attribute) with ''BETWEEN'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.pct_nvl_oper IS
  2  'Percentage of predicates (of the attribute) with ''NVL'' operator';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_expfil_exprset_stats.pct_like_oper IS
  2  'Percentage of predicates (of the attribute) with ''LIKE'' operator';

Comment created.

SQL> 
SQL> --
SQL> --                    USER_EXPFIL_PREDTAB_PLAN
SQL> --                       (undocumented)
SQL> -- This is similat to plan_table except for the index_name. The user
SQL> -- is expected to use connect by clause while querying from this view.
SQL> create or replace view USER_EXPFIL_PREDTAB_PLAN
  2   as select i.idxname INDEX_NAME, p.*
  3   from exf$plan_table p, exf$idxsecobj i
  4   where p.statement_id = i.idxobj# and i.idxowner =
  5          (select user from dual);

View created.

SQL> 
SQL> grant select on user_expfil_predtab_plan to public;

Grant succeeded.

SQL> 
SQL> create or replace view ALL_EXPFIL_PREDTAB_PLAN
  2   as select i.idxowner OWNER, i.idxname INDEX_NAME, p.*
  3   from exf$plan_table p, exf$idxsecobj i
  4   where p.statement_id = i.idxobj#;

View created.

SQL> 
SQL> grant select on all_expfil_predtab_plan to public;

Grant succeeded.

SQL> 
SQL> 
SQL> /********************* USER_EXPFIL_TEXT_INDEX_ERRORS ********************/
SQL> 
SQL> --
SQL> -- This view maps any errors with the text indexes to the expression
SQL> -- column values in which the error exists
SQL> --
SQL> -- The text component may not be installed. create this view
SQL> -- conditionally --
SQL> declare
  2   txtviewexts NUMBER;
  3  begin
  4    begin
  5      execute immediate 'drop public synonym USER_EXPFIL_TEXT_INDEX_ERRORS';
  6      execute immediate 'drop view exfsys.USER_EXPFIL_TEXT_INDEX_ERRORS';
  7    exception
  8      when others then null;
  9    end;
 10  
 11    select count(*) into txtviewexts from dba_views where
 12      owner = 'CTXSYS' and view_name = 'CTX_USER_INDEX_ERRORS';
 13  
 14    if (txtviewexts != 0) then
 15      execute immediate 'create or replace view USER_EXPFIL_TEXT_INDEX_ERRORS
 16       (expression_table, expression_column, err_timestamp, err_exprkey,
 17        err_text) as
 18      select uei.expression_table, uei.expression_column, cie.err_timestamp,
 19           exf$text2exprid(ui.table_name, cie.err_textkey), cie.err_text
 20        from user_indexes ui, user_expfil_indexes uei,
 21                ctxsys.ctx_user_index_errors cie
 22        where ui.index_name = cie.err_index_name and uei.predicate_table =
 23              ui.table_name';
 24  
 25      execute immediate
 26        'COMMENT ON TABLE user_expfil_text_index_errors IS
 27        ''Errors for the text predicates stored in the expressions columns''';
 28  
 29      execute immediate
 30        'COMMENT ON COLUMN user_expfil_text_index_errors.expression_table IS
 31        ''Table with the expression column''';
 32  
 33      execute immediate
 34        'COMMENT ON COLUMN user_expfil_text_index_errors.expression_column IS
 35         ''Name of the column storing expressions''';
 36  
 37      execute immediate
 38        'COMMENT ON COLUMN user_expfil_text_index_errors.err_timestamp IS
 39          ''Time at which the error was noticed''';
 40  
 41      execute immediate
 42        'COMMENT ON COLUMN user_expfil_text_index_errors.err_exprkey IS
 43          ''Key to the expression with the text predicate''';
 44  
 45      execute immediate
 46        'COMMENT ON COLUMN user_expfil_text_index_errors.err_text IS
 47          ''Description of the text predicate error''';
 48  
 49      execute immediate
 50        'grant select on user_expfil_text_index_errors to public';
 51  
 52      execute immediate
 53        'create or replace public synonym USER_EXPFIL_TEXT_INDEX_ERRORS for
 54                                      exfsys.USER_EXPFIL_TEXT_INDEX_ERRORS';
 55    end if;
 56  exception when others then
 57    if (SQLCODE = -942) then null;
 58    else raise;
 59    end if;
 60  end;
 61  /

PL/SQL procedure successfully completed.

SQL> 
SQL> 
SQL> REM
SQL> REM Create package implementations
SQL> REM
SQL> prompt .. creating Expression Filter private package in SYS schema
.. creating Expression Filter private package in SYS schema
SQL> @@exfsppvs.plb
SQL> create or replace package sys.exf$dbms_expfil_syspack wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  9
 20  c30 38c
 21  D2JHtljcHseDb7VVSreSRD7x/3Awg1UrLiAFfHRVrZ3mB+EuqWvdwhnA4H57PRsMQRZJ/6G0
 22  gJl0BanhvvW1P4mGkUrNtP+spGFuXanQz64aWskv7QeUGMacsBOWTz+K5IbZTuuxuz/+x/7k
 23  CE54+74SyC3jf/erO6bTt/QvoeLvSfBv1fUZryX2WsznfyrZv3uuOhQab8+jUZAIB+mcumI8
 24  cIxbS07psCgDvfP/zgQzS9dQ/eiXHBVCuy75QDRB406dqbT2TahKzGJ+RR3lDUlb0bDHf+kP
 25  UK9TVSdqTOlgQyYzVFrAdx+Rlzw9lUqLlcjFT4yoR7Cyrfy0SQjD6ckuXWw65cKS6ZFxY2AF
 26  DARE4yLDs1rnXic1RaI2hF/HbXaV05IJmVC8rIApU3HUQ8Vg71SItFxz7YEFAwj9s1PoUKjK
 27  6kqkFirnTw9bqhKk5Pl7U1vt8K81pWe6RdrPPJBHbyqWhJSCtf7yQJrbq4koEOx/G78HFYj7
 28  o4BOHRHDIIvVsITUBgHyQSJNmB3TI2tTp3+/A9MY6dPCAVwjC9fo5J0f2e0mrMdhyGmYjwHe
 29  X+ZQxpFJDucX8OJnehxLhVPEUtHmxB5tXp8RHEINsbHaIbQIIq9MRHp8SNyqxEN5wp2i5fHV
 30  CDphPhsJM7XztmVq5HzAh/3fFsTw2cafyLRugwtnern96wGog8RznOefbN9JoFzK3IfOe9eV
 31  2O3+aTncm4LchOsDdS79w6nlEIwjwhcsrWkNZXSrexfQ6DJqM1F3GdyT7I0tna7tahUIP7Rd
 32  E62L1UUR46dDrRV52cKV4yTgdmNKZs22CxCzr+pYjbOtMThv/6zoUVHzVkLQeeKC8JttOtEr
 33  b+BdsoLXGhVXXRNJb/1RSh9kP/tl5fQe
 34  
 35  /

Package created.

SQL> create or replace package body sys.exf$dbms_expfil_syspack wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  b
 20  438a 1443
 21  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
 92  7kg=
 93  
 94  /

Package body created.

SQL> begin
  2  
  3  
  4    delete from sys.expdepact$ where schema = 'EXFSYS'
  5      and package = 'DBMS_EXPFIL_DEPASEXP';
  6    delete from sys.exppkgact$ where package = 'DBMS_EXPFIL_DEPASEXP'
  7      and schema = 'EXFSYS';
  8  
  9  
 10    insert into sys.exppkgact$ (package, schema, class, level#)
 11        values ('DBMS_EXPFIL_DEPASEXP','EXFSYS',1,1000);
 12    insert into sys.exppkgact$ (package, schema, class, level#)
 13        values ('DBMS_EXPFIL_DEPASEXP','EXFSYS',2,1000);
 14    insert into sys.exppkgact$ (package, schema, class, level#)
 15        values ('DBMS_EXPFIL_DEPASEXP','EXFSYS',3,1000);
 16    insert into sys.exppkgact$ (package, schema, class, level#)
 17        values ('DBMS_EXPFIL_DEPASEXP','EXFSYS',4,1000);
 18    commit;
 19  end;
 20  /

PL/SQL procedure successfully completed.

SQL> grant execute on sys.exf$dbms_expfil_syspack to exfsys;

Grant succeeded.

SQL> 
SQL> prompt .. installing Expression Filter APIs
.. installing Expression Filter APIs
SQL> @@exfeapvs.plb
SQL> create or replace function transform_lhs wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  b0 df
 21  thgcP/wGKg4ASKF47DA3+pBgkGEwg0zwAJkVfI6mkPjVGTxFkbgyI4lU1asMkjcTehQ7jXU8
 22  nBZzOvJbRCB6y0heCqCX0J7ht07N3f4D7ZKiQZ6FlCFN62L8PWXhpmIKo7V2cL0Sw5PwWEak
 23  3wQ+elrjW+htKhVZCwW67iwrhd5W4+04CJCPxmx4I/dLXXvMOblMeA/JtEZJ2s4oBoEGsgNJ
 24  eLo=
 25  
 26  /

Function created.

SQL> create or replace function parseParams wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  bf eb
 21  TtbsNCsk9dFTh2+4Fw9oXdf+l4AwgwHXr56sZ44C7jwilVXeygMRBfwntz5CjbP3YYRZ4Fm3
 22  cWIj5MjKrP+bJG0gZD55ThhwIXoxg0u+Li9DoLewxT6p9VhalITwntk5e8Mp+z3JpKYWMSfp
 23  mja03fM+63WhFktqqUuJLxkxbpCUMyqHOUkiZ+1UVj+FEaXHdOpOIRWImm3Ji6/+mQNfzeRw
 24  tb8HBT39MlXa6Q==
 25  
 26  /

Function created.

SQL> create or replace function populatePredtab wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  ec 107
 21  Dg7M+IR6MFGrGT09B6Z2kQ8D+gkwgwFKfyisfC8CkDqUxPv0KY/89TeeBGLooH3JxcOsqAIh
 22  cM464Fsu0qec+BlV2QWhb/RWF3zSancmzE/Y4oAy1soLf+1dFzlsmxbpvJMSpstleiUosjde
 23  qDr+dGkYIW2o8W5eG+LCDs862+HLhdP0vQIAp32+jp3E5fwhs064INrmkJHoPIIm2If8UJAF
 24  yjBNsGaQZbI+YAXsi1XJWA92rD2GkddP7iDqlhPXobI=
 25  
 26  /

Function created.

SQL> create or replace function insertPredtab wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  137 117
 21  7HDPzJ7lJT3nshGbayxrsZkh31Awg/DcNZ4VfC/SitUzK0T6rwqwY0z26V6hEzwTovBjCYzb
 22  FiKaq9tmh3FUp1g4yRfFQnVJPgeDcQ0y1Qr+3Hk4yKXjPN76a2fz/2lfgBClhkRKDPyODoHy
 23  GgHTEF4sIX47rMA+RSFnWHKjhBYCykEgkWDhfNZEm1TgWXzG4fj5LrhhJ7ER6CychFV8m0l/
 24  EnNwSVz9sdEuAECvzFWU9okmVIt+eeW/KSySKItcgye/A4uAnhvtSdPpD9E=
 25  
 26  /

Function created.

SQL> create or replace function collectStats wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  11d 10b
 21  Uq9bgvlygo3EW8nkdwZWlSqOCpswg/D/LcusfC85cBdBBt/Kf6RxkNwJzB0CZzWxGI1wq8pj
 22  BBwPUKJZVDQImJgktSILHCRgdBhgPpN1d+frN2pSH5CIXXUwW1nf9pmp7wsEJTGph+CWnj+m
 23  XpeTzkSxrEabVljH1JnnyDqIko7cdYyBSqD9Yp5s9HaDEmNaaKDt02DUoxlfU/EJq3ugkOSJ
 24  xxwGPuPTMqEJjApFbpfwA48k25CHDSHt4h/aEpgj+0iok54=
 25  
 26  /

Function created.

SQL> CREATE OR REPLACE TYPE namelist IS TABLE OF VARCHAR2(110);
  2  /

Type created.

SQL> alter type exf$attribute compile;

Type altered.

SQL> alter type exf$xpath_tag compile;

Type altered.

SQL> alter type exf$xpath_tags compile;

Type altered.

SQL> create or replace function exf$text2exprid wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  ef 107
 21  Mk2pU8hqv8xACS7CdWDt3LA8LTAwgy5KLcusZy+iOzoYYlmpRmkE2uVOSPdtwsjtANv8q38t
 22  gtSsch/m4dw6yRuCY0liYagE1MH52l+aany8JGRbFDvI5fN7lUUJz4UOlEhIyUQ+oqZfBlgr
 23  OZcMAbIRcl8Ur9qRS8tRtkFieUK/v60zQxluJx9LIAwSsrb2jbxdF4mILSruVFuvh9hY7BPx
 24  Poj1hAON2042CR8XCLURbsnZtX5CkG/z8T6fJBT+Z0I=
 25  
 26  /

Function created.

SQL> begin
  2  
  3    execute immediate 'alter view USER_EXPFIL_TEXT_INDEX_ERRORS compile';
  4  exception
  5    when others then null;
  6  end;
  7  /

PL/SQL procedure successfully completed.

SQL> create or replace function exf$curruser wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  2f7 1ba
 21  jFuA2dp2pdrSeG7XeNqBDJcE3mMwg40JLq5qfHRDaA/uHQmj3gZpSI7LkwYlWjuCQwv9sBxQ
 22  zvuEt846V5N4xS9+VFwTkjoAqtt5FJRfbLQQNFW8HDP4avhIKMuE9Tb2KcNJTLJEFLd/9WDW
 23  GP+oAn8j9XDP4VwiT4bZ+EUnGGwi/eCl5DCKzERQTdjUJZ3OzJOeU7JjWs8aDVTjvkVNb8ZH
 24  gphnTuVqNWXzP3yWwKoMPnVJb7Wx+IxvGBAPN2twsDEN/8sOjIoTjn6jFj3evMa0UKhsfSFc
 25  qWSxIbTV2Viw19JuE/q/HO3BTASQzbMXEestnhqqyTU+0gnCZkjqC9lc8KM5vokcMRdAu7ye
 26  FClCHv9IFsul5zJqh2jFcUM92gFmS2hjTsGHt6QezzBFuZvCfCkpasdZsN4TAwleFM6LtpJq
 27  wik=
 28  
 29  /

Function created.

SQL> create or replace package dbms_expfil_utl wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  9
 20  bff 4d0
 21  M757WJLs6gGjLxUsMx4l7w25mvgwg+0rBRj9rS/Xx7zmKDdfqEYtSZwu7HpNY8JiYGKBp3dK
 22  cxRaZTc3cW/xAs/5p125n5oX/jgLqwsMwcOQRaFMwFLZv90iEM6S72hzkh5Oc5yl/nKWX+o/
 23  ZBS2lGYELMVbhVMS5HV/qsU3vbBT/n3dgkN1wb45ycSK3cyKrUjih9hkZOpZiL2Ap0/RHnig
 24  bi3UnnbErm5JRCksiAbj5PXpcWbQR/PQ480LfrgnH36hlwaAVIRhXxfYd9EWhjiA2iCaLR5W
 25  7nmIFCXqngG9nf/xAFHIvGm4g2aWbYkuUaJCZa4YU+o8Ro48LwWzkEzhrO/62Wr7UPO3Xw0t
 26  ZD4f9yvekD3dTQrp3B32GsWXyiGlxxjR+18J9SvuSFyIU9LBTR8+HuxmGAkshH5ApRltc83h
 27  AV5eTeGO5ogNPkJWLXWwaCGOvmxMZU2QNWdx0zNRhmz+5y+K+4SHpcCnm8LohcXo2XssU+6S
 28  XU3vwRZkRYhObt8ocdVY/CIMI5A9Pf/7M/ymLXrsYpyL0EDvqGSfr+3qiUNbVyDCx4LfpFCo
 29  ssjtHPp7iVQESjR9vwaBUx/9fJD76H2pIN8dfd8VFpjpJqDVsy1oo5snZpcLRJOCUpGUajVe
 30  H55iVB9hY3pqOgRnTIpLT/AmQdTyHaQJNcpuDAO0UKK0K2AUDsDezzvxIXRdXcX5gjQOx5eg
 31  zCJt7MEkDfs8Y2mkxDQlIgHJjX3nvOaEmemHT707GEx3SA3co+b1JCYLPbQRb5Ir/IzsZQpu
 32  0DVbgPtSo/JAG2LXJmueKoCuLPpgaVgoyAAywbCi1WcrWpz7UZVw1XLiOaFECxNP5VL+fqnu
 33  U7oPfLf6QQ5+HA7YG43Uw+jupq47gsMTnxVNXhvM9cnSAyQpZKLIIYfucp6ljjN3A4RPKVGy
 34  jODLkId0WQfk0vkFsJgP7ob+ZCy5nVUtsAo/OgLQTvZ6VbJIjmGgUe8XP+bxQKo31TsrBiEV
 35  O2+YuZ0WjoOLneqkab7VuetDB48lkXTpnpSaJqNqIXm5XUHGH2wjQ1E799O/xc/iuqxHmR/N
 36  II3LjbFylpYnasm4QfFdLSQredXYgErdhVp1r66yBKH21lgYYyQn2YBUEJhBx3jReaMQU371
 37  a1CVJQbsCmOz97mcLcjDldlXYQldtWQBGcSbaV8QsD1SumCCw504v5HQ+fuDZlCt
 38  
 39  /

Package created.

SQL> show errors;
No errors.
SQL> create or replace package dbms_expfil_dr wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  9
 20  31e4 a1f
 21  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
 56  eH0KWesVgQc6L63qkhCtAmXAOuuqzPrP/Q==
 57  
 58  /

Package created.

SQL> show errors;
No errors.
SQL> create or replace package dbms_expfil_ir wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  9
 20  1348 45b
 21  N7pCBNt3LveLC9sVCSNwJviju5owg81ULq79fy/NWA/uhGxn5SN9jbexQS50hwXO1htJDI7F
 22  6cWgJ5bk5EqQS6GfoeDvjswmEvrJA3JBQiDkekprihjcqWhVIuT0/q6dvJY/25Ug5tZPntxU
 23  S2+J0K83bHeQbi8lOZU0UBgwDI32Dc1RmbJHdK2MGQV1ueNpXUCj32Mz2a0tj9ZMJFNajAQK
 24  iKVwN1ndgFVx4WrQZJ5+w8yzy/+lYxCcaSk7Q6Qpxvmiy92gwtV2FfWl9l2ocMc6ZaV6wQON
 25  08luGfBB39PggAKbXXSdXfvfJohpqI4HkyF3Jf8AastGAh8yWMSjG2XT5GUmoxQYXzovm8UU
 26  68BGVufflJyO/xfKR4PQKfQRrAfkU3Dned0lcZgTxyhcdVi1e4q+yZDSheTV6Fkt3BSetNVX
 27  gneuUlhZcb0/nM+Rup39xUSwVJTU4dAQ91PTskRPYkxNe75Gz5BAQtz1nGwJAuL7ug7WsRtl
 28  KfxEXVDiNwtJEjeF3brqA+HfVuKROJhBxPBaOaeDxqx+rSBC8Q2HsxhNYdJo3rTRi90Jje6r
 29  4sD0o/Erb8xbCyvaxujqBenx8qk5KfomJbDax+BFgtMQSw81xtzQiXmeakCML8HBOZVV6rVH
 30  FQPw56e5mz+HVPWG7NUDrMzXlEsXbk9dlO2ww/DfNbzW9Z/IWYgdweCacbwk8WSv3F5JS73V
 31  dTv+aEOsunoZVSSVICQsSB/Q/l31W/3wpaQqf/6olf2x/fJ3tTSkTNVQttaJ9gxaK/OXZlkE
 32  zwXwv5CvVsjUWVZZ27JN9UFLVKsC6fcZn6Nc+HJguA1hPfcn+KHMBinl3/J6Wn/Xa5pTnO0V
 33  8uL+NWaVkK2vaGgQ6CdKmn0k1wu7riaa3bf8AzWkxCzFNaFoZ+2aZ4Hot6d+vRPwi8fVQqtR
 34  s6PhXHMvYuKyBOyUOF5w6vef8HU2pHEBZBBZn92jjkIMijXRiU7nzpmw5FrF0NpBf68KBsd/
 35  MtU0MGo/2WDP0sFgkmrUcQ9bS8fSlHBgJWbqofBbM1EN7fDXQrF71k6Qrv9pvYKtO3QLCXg6
 36  dsB9e/uVliLkRKb3RUo=
 37  
 38  /

Package created.

SQL> show errors;
No errors.
SQL> create or replace type exf$expfuncrefs is VARRAY(1000) of VARCHAR2(32);
  2  /

Type created.

SQL> grant execute on exf$expfuncrefs to public;

Grant succeeded.

SQL> create or replace procedure exf$expcorrchkoci wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  7
 20  16a 12c
 21  u2SmOZlyVXCkW8a4akbMxVafSGIwgwJpf8sVfHSRudVW26YJld2XkawM78pinDaDJoRE4X+p
 22  dTAiSCmHliIxRU6QDI5gYfPmsbt5n3O8BbHB6xlPZDM1TkbU5bhLus39HgQyC0zIkMqkSZcp
 23  jkQqkIgbF9gJq8GRs4g5hXvF4MomZQ/4Y2FYwwHERpE/a3t2hOJhWTbbAhsj+y3q5i9XIvWc
 24  diwC6Jd522diirBV0nB4UHaQ9WluUJVAbllrLeXIafpp7BjOtSBA6SzEtaLQQBEAHFZJbYFd
 25  WzPkafQ=
 26  
 27  /

Procedure created.

SQL> show errors;
No errors.
SQL> create or replace procedure exf$validatedataitem wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  7
 20  ad e7
 21  vH5dboF/zAsXYvejaL4H7CpvKuYwg2JKNZmsaS9G2vjVOSlwUCb2sNfEBh0Ql0VyihTmOeZV
 22  FJI6O7M4cIi8MVgr7G5MjtTkQoqa68e+rh5+7KcyPwH/1bF9oZvxXfVn4Wl3JdpdzEbWSi0L
 23  +zKPNZPhXGDKaddaQhbUvMD8d7ATujptyGhfVne5NupkbJsbTQG2oBRvA0mkZWq1+VIK5DtX
 24  br8P7fHR5w==
 25  
 26  /

Procedure created.

SQL> create or replace procedure exf$expfunclistchk wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  7
 20  259 1a5
 21  mUsNL9DvVrJaENFJN2Y8+rx9PJIwg433rvZqfHSVv/+wUGsHNuYoVXACJdb8FvbdLdaOv1U+
 22  ByXCLX85BQ4sqsDT8hK0JA9+mdISI66yEoTpcKxzCHwxLJrLT2SYnLD+0FWGghq95MBpTYFK
 23  ONZ+PIUD5K6k4kCq9YmviLqhmWcFCRyR5bFGYS7Ygo3xNWyefzeVgnWIGhYfgiboapKKna9P
 24  zKbmp1mZ1AVpmEjW3y+JivYRUgE+KhZ55Y6Ju2cxER4/LuzNRMY6b8VbKU3zGAmw/Qjz1lFj
 25  GaU+7DdRQ31fBKd8VKLqdD1BS3ZfyW2R6b/lDs0BWRS4d/2sKbGN0LqFrjHJcO0gI+3gXAwf
 26  O8Nh1TCXVL0y24qt7UGaRyBO525B2gk1VfBK04iZWtK+U5LhQzlKQA==
 27  
 28  /

Procedure created.

SQL> show errors;
No errors.
SQL> create or replace function exf$expisvalid wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  23f 17d
 21  1Ar/uy2D8Pa23Gbr5xrVzKpFrlcwg433LSdqZ3RA2sE+IZFX1r0aCy4HTuncSoNFYEWCCJGe
 22  LqhQa2kWQuSXJv00daDE5xQQnRq15aLRkme4ep1i0MHQ68Gx2fgplN1Wj9SZ2z+MLdKRvh4A
 23  6Whmwbi2oKzMOBFimJBD+OSuNiqlKOH++EZoTPR+VG1/GxsOd4mFcF5oKfvRf++VIvSLNBG6
 24  Y0F3h1HldsUpkWM49AfBqHJUvXp6/8NZKxZkGNMEaKtZ9hd7gqSBholw8NGsmTInTSB5kC/F
 25  y7KiujwRbo1XhVRYXiVYbEgAssAL10Q8A0+sToubDDpkLDqBU9notiaosOOIJEksAE/htpmx
 26  leHeXmgQHYhIAqs=
 27  
 28  /

Function created.

SQL> show errors;
No errors.
SQL> create or replace package body dbms_expfil_dr wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  b
 20  f679 3d5b
 21  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
236  teQkbnBvQw==
237  
238  /

Package body created.

SQL> show errors;
No errors.
SQL> create or replace package body dbms_expfil wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  b
 20  dc6a 306d
 21  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
191  
192  /

Package body created.

SQL> show errors;
No errors.
SQL> create or replace package body dbms_expfil_ir wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  b
 20  1c73d 6701
 21  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
382  4b7SteQkTjygyg==
383  
384  /

Package body created.

SQL> show errors;
No errors.
SQL> create or replace procedure exf$check_privilege wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  7
 20  576 203
 21  CktCzKFkWsMHsSF/eQCN1Pwzp9wwg9cJLgxqZy+BaA9/5mv04xHV6XStft+338iKQDEuCrB2
 22  8ndRWwjK+c+/E1W0xUQ7nEBnFYr/NNBClKFK3i7nzcZquIF34kETscSB+JJjEH4dk1JYZlYE
 23  CK2MCK10jyAoGVzAPrw5dlBkk5sk4XFvB7aP2BbIkvkvwAGtR1jlFg+pTdnbdprUuIhYwKNv
 24  K0iqAHVfauc5vf/AOAVFeHLd2v1q49DmUMeO/cmemV2rU9gCy/907FDCW9lap2Bp3yFRjie6
 25  XktujJNBtwKX3f0iLXhB9HeOkG0txANko/bgu/cmMwvJ20Zg2XKIUA24gw6jg/7v1QSZQ93Q
 26  bkJMY5p1E8BB6doMCPWuC1P8pyWzx/Yquty3CSo5KtltG2NtiPzUdt+kw3dVYbdxB+qGQPP8
 27  7KJdLThQmpq2BwugPaEFtuPNWnYA+CxrtEoCtfjpep+ENVbqtMr3GnDAxwCQQAWGR3h7OjbZ
 28  KnpR
 29  
 30  /

Procedure created.

SQL> show errors;
No errors.
SQL> create or replace package body dbms_expfil_utl wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  b
 20  8e56 1ab9
 21  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
115  
116  /

Package body created.

SQL> show errors;
No errors.
SQL> grant execute on dbms_expfil_utl to public;

Grant succeeded.

SQL> create or replace package dbms_expfil_exp wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  9
 20  62e 23b
 21  DLkUDjU1ajbqgvODjyZAjJtiKH8wgz2Jr9xqfHRArf4+zwUbUmeG1NuvLjRio+zD9NkjCkam
 22  vb0UFNF6IqHGg+LNtBvcztNcOn61YV7BFt9TZjAjz7XYQZ0ih4eaBvt9qKGmTUf3ELnYpqZe
 23  kT6tU5gHE0SKOzeKPEYMMGdJPH2L6wU6VlHoUCOzr3TJNkl8cszTdgyTC2C/vBMRmHC3kcK0
 24  6Qbx942KgCfRAGRwoteR9pB3l8fjt3cp4Jlab0pRjDJxqANe3q/DQuB1G7hwUyCAIQGDdLEd
 25  pbCoHS8jGlbCcZHC6H6vYq0F9nFvYEvCyZbMiKEBjfOMotQ3YHvq7wJCGhvaW44rTx2rg+iD
 26  GC5eDOIQyNmgZngdgHFX61exQ4H2jGPxAQJr/n3tlNaDp+ViubFhOcKQZ5x6a++/w5V4Ribo
 27  xf/JtJq4BSm4rjlfUJCwuKz5hB3HHjos1f7gLog8t/6G/B2zjU74zpacx0t0UamjDKUm/A1D
 28  OIP55IDrSlSYvUpzKu88D54fUzPVu28cnmzvNehY0K4BJvV6b+qaT0Dqhw==
 29  
 30  /

Package created.

SQL> show errors;
No errors.
SQL> create or replace package body dbms_expfil_exp wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  b
 20  8a4f 227c
 21  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
142  
143  /

Package body created.

SQL> show errors;
No errors.
SQL> create or replace package dbms_expfil_depasexp wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  9
 20  5ed 203
 21  IiOoTcZGznpgOqbg4lq23t7Z5qMwgzuJLvZqfHRAv7lkUFLWHGEc6p+4pCoqLn4LPnNXAvCf
 22  fLQOUNk/+YphbbenAS5Nod2fGuol7/PVXXEa5xPEZBC+cxntqs+nE825Mrv+yp5BJjaR7nYn
 23  0ZnmW6w5Han8qG9fYyUYjYXdlt6gnet0cIKbLAReu4Hk4dCGl2h7t3sUJ4KqGItarIWFK4HM
 24  fChYLplik4iyoBvUaAVZLvTVEiCko4R0xmP1hOBXqZ2cKOXMZS1ee0RefFZGt4LuYDtImfWO
 25  0/T7ZMDrU1ZJWPdOaj6iCkM6psu+uEXxq3j2p4JH6dg6MLlvndQmmRTp+qL1F7rWdwdpeHr8
 26  fHrT78q1wm+tn70oLzRHwrol7a8zYAUouWKlBhjMSXWi/zvNdORcjqRB1FNS/k+mk6goxTJ7
 27  3fYSUkLXik8eztNKqp32XnsN2IR9mocqZ9srbr9R8UWK44Ao+hSwpj/lwmU11YW7xr8kwjla
 28  KA==
 29  
 30  /

Package created.

SQL> show errors;
No errors.
SQL> create or replace package body dbms_expfil_depasexp wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  b
 20  e8c 477
 21  W84ZBWYG3//bW0sDqXjNxIqHv1wwg+2c1yCDfI7dv4tkMNpEGyvMn7p31qEccCpX981nrekT
 22  g6G33yYJlvhO/nYFOsr703uyDWwIbZr++K3XVNKF3+cKISIVTv6aIJXZT7EsJKqUcpZkmhl9
 23  q3XsWaalPl7s3jaF01y4a1LW07wiZ77ymXHHp0aLs/wXkG1aTsOpe8Xw2iMRkG8aEeyhRwlj
 24  rz9TET6Qro/kSfIC3VrVYr60Z+z2tIKIeVhxh2hhgCZf7w2vNQU2HBhc8WDQQ5AtPKXHK7mJ
 25  Tcc+xTLdlM6BAAzyBdwhc8JxVm8DyNvVaMgo13NmrtPvNfNPydVGKwm6QvBhUwsyh81zUwT9
 26  DQRe5+IGlP0PnWCoSCYV3dPS6g7MpvEcZjj9uJVEt4BkJfKMcaHBuFwAnV4a6Rs6HEdZonVY
 27  5lQ1GzHUyZ3Ticd/MtqLpTo/CEO8uanA6rtPvOm8QCe4HHB/He3psaKQ38Lw27Huky49ek9Z
 28  uLp5WFuCXYBcUH3ezyXryuoWzIrWrTbM0SkJH8k+da32PGe+gYYdNqB4pmC5zpQFYzxpXL8C
 29  vdcq17/R0tLrX0WEsOJa9li5X1u/no3eQeboveW3Sq1++j6XHfQWGqkV1TyJX2bJ7Dt1FQ7A
 30  yw5FfD+j/Vzm/Sdshp4Qvmryj4IFvAoecOxKCW9kn5d0Q+xJix7/dzu4HQz5EVzbOv/QijRI
 31  m1ixirLO5lzY15FF94kYpRrOPJ+0dJtZH9LfqeoF3tj+W3dKTbMU3No16/VIBcAPffl1JgPr
 32  FmDVtJ/cepMFNHRyrI2Zwklm2LPynaNLpEr76og33CiGuL+C8SBAm3lU+b9wh2GFaMYZQ0fv
 33  p7tixPhNcz9lmDP1wU5nVJ8Fg5xVs7tGVqQrvxZlb5icTR4Qa+nvdqxMT0MKjw1QpHJxII9V
 34  d6TAJTL/Rx6RtxG8PuM2Yndx08GPf7gBZdHQbQoEG54HzDOqV+tHBq0hrjnAvvMxPYYeew3a
 35  fBzdeewEgxhSsqXTGTTos2iQOTsNbWRrGmcBVsUNIbOeknUybwc0wE/8fx2RYCNLDEr+71kS
 36  UMTTzMfPV9QeH7RBtXD/nDfyFxwRn0JfiC2soiz54ZOZ1Zw=
 37  
 38  /

Package body created.

SQL> show errors;
No errors.
SQL> grant execute on dbms_expfil_depasexp to public;

Grant succeeded.

SQL> prompt .. creating System Triggers for Expression Filter management
.. creating System Triggers for Expression Filter management
SQL> create or replace package body adm_expfil_systrig wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  b
 20  3921 1227
 21  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
 85  
 86  /

Package body created.

SQL> show errors;
No errors.
SQL> set serveroutput on;
SQL> declare
  2    CURSOR dbtriggers is SELECT trigger_name FROM all_triggers where
  3      owner = 'EXFSYS' and trim(base_object_type) = 'DATABASE' and
  4        not(trigger_name LIKE 'RLMGR_%');
  5  begin
  6    for c1 in dbtriggers loop
  7    begin
  8      EXECUTE IMMEDIATE 'drop trigger '|| sys.dbms_assert.enquote_name(
  9                 c1.trigger_name, false);
 10    exception when others then
 11        null;
 12    end;
 13    end loop;
 14  end;
 15  /

PL/SQL procedure successfully completed.

SQL> execute adm_expfil_systrig.create_systrig_dropobj;

PL/SQL procedure successfully completed.

SQL> execute adm_expfil_systrig.create_systrig_typeevolve;

PL/SQL procedure successfully completed.

SQL> execute adm_expfil_systrig.create_systrig_alterexptab;

PL/SQL procedure successfully completed.

SQL> declare
  2    asetcnt NUMBER;
  3  begin
  4    select count(*) into asetcnt from exf$attrset;
  5    if (asetcnt = 0) then
  6      adm_expfil_systrig.disable_all;
  7    end if;
  8  end;
  9  /

PL/SQL procedure successfully completed.

SQL> set serveroutput off;
SQL> 
SQL> prompt .. installing Expression Filter indextype and operators
.. installing Expression Filter indextype and operators
SQL> @@exfimpvs.plb
SQL> create or replace type body ExpressionIndexMethods wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  e
 20  52c7 1316
 21  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
 88  
 89  /

Type body created.

SQL> show errors;
No errors.
SQL> create or replace type body ExpressionIndexStats wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  e
 20  346c ba4
 21  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
 62  
 63  /

Type body created.

SQL> show errors;
No errors.
SQL> create or replace function evaluate_vv wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  4c3 284
 21  JrlvEXL7dKSfOz3G4ecS5+a34XQwg5DDr9yGfC9Vgg9/5tVsjVERmZjhN1dTMxotibSVn/L+
 22  kVKPYYB9JixyX5DmaenZ02wt4HJ6chJyt8l8ZRH2j974zrtDCDo+SMRDiHa+Gs197W/cYRVM
 23  w4ALsVH9pQBvSjn2iN+m+WRkO/Gj/QL97K28N66tg6mk4Y/JQ1AS4LfxEnQ7XPk2Z+ti+0dQ
 24  llCQTdDjTkj44f0J3Bji6+gtgtz1BDkXYFYvhBEN4a1XBxvbr05uLIYaXFOalEi5j7Filtis
 25  8wDc22KWlsne6TB06E/icXNrjUTR9HtEUDv9FtbrEKEB/4/LGK3ti5V05m0btv2ZboIUq+k+
 26  xBetOrLnZ2IjLKH6YL/MviP0qJu5s9/zQon+AW9R6De+sTVWe9LClYduaaVnR9AER7ySG6bw
 27  tY1BlC78JX9qXPw3ieTdI5MJ1zr0n1sVV2sAYPX/RZubknjaRJOxFPx9BEK6bh+YVcHxzZ+V
 28  QteordYkmeZ1hzFxudrNKVD1XbtrCnqqEVZI7E93RqP0qdLnpEuWXurAvq2L1f6AkoM9hco2
 29  q5wj8Bu8xByxk0PUtcKIXgzl0ixNkCs9vF7xDHGKWjJuG+HYM9DqiALk7g==
 30  
 31  /

Function created.

SQL> show errors;
No errors.
SQL> create or replace function evaluate_va wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  475 268
 21  8CNy3UeizgkldrfNILQvDcIhhaIwg5C3r0gFfHRAv/9eL+20+3QL3nh+VFDWZrMtprqXFq0M
 22  rubL7c1TgYkHLD7akG1w+t+vyHD0JOk/jhOvKRHt1sGchv5PxixyKUNU0Y+XULyGQmRaxBi5
 23  CgphEj2y5+4+d5cAiJQ9MscKhvvCvniDoxel3dqxKqj22B0kot1qSnw2/0ltEl87eO5A1ugF
 24  4VNrmspcuNUyvs12cGqKoPx7Hqudjqg4doUuvKZ3L7r2ZyiifeCr5hl0t2MzOXL+FZyAMJ2n
 25  HZR8RT85U+TSUliun7MmHMFJKP7Pwq9iSXI55DE5l1phlq1QbHrmLQbeXFaoYX3Ud+gv6gbT
 26  kDj6I3e8kvt8EyIUYDG00YjlxAS3Ro3Pt2krcw12oXc0WpsywxPL1kgt6ngvh1DPHoQJ2Pnr
 27  +2S1FCzMF1Pk/7icBcptnb3RclAWR1BMqagBHRsUm8Miz/nKQ6nzHiMtMGJsnGFT1dywJO/a
 28  kBiYo1lgAuRvijgi1IPyHjHdIOiGm4dvXDPBMkw08LQJ8CXIxeCDgwBF0phM2zIqYR4PThNe
 29  2MC7PJEuMj8FiIqOMaCVMDb/mA+qbQio
 30  
 31  /

Function created.

SQL> create or replace function evaluate_cv wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  1ac 134
 21  33auj/wDRJkAx57MuwhmgWpEhfYwgwJpf0hqfHSKiuq4Wabv1reoqUmTUeDhZZTICe7c5mmR
 22  HrSLc43wkTJXuMq5Sr/BggWi9+75U3PkVT+7Q/gt9nALfnTZy1IReFJPG5HYuooRGvY4tlnf
 23  16aSYwd9VvPabh4B+DfiduDjrfv/6jU97JFsrnXUfdLwqSgfpv/rqSW82TR6EjpODSH25soz
 24  Up0vRF5vP/I3+t4UW99tyrDxDRndEYKPY0VMGLhqGmOjM44Yt9YECVYW0wG/ek9KVbwPOK4x
 25  4iDITLUIKPlRVHM=
 26  
 27  /

Function created.

SQL> create or replace function evaluate_ca wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  1af 130
 21  V7M9JmC50M287STMLtqjR7CiM7gwgwJp7UoVfHS8vq7u8xoY+wTc/Ikby1TypJFJsGXpPfTN
 22  1NpBT6AGBG1bKDz+9k8xGxh0xPjSTnhzGZf+oN5wAX50TsstIOpSDxuRNu38/6U9WJGjVJW3
 23  Lu9Wzn1W89p2HgFVhB/Lf9tupsZtDidiA8hbWcF90vCpKEmm/4TQJbwKABNzwU6BIDxGZ4qG
 24  nxue6FbkieF8rZD6N9dmhSaRTEqD0jBm4jCxKKMn4K5rVzH0qJWsZszfB3KGOJ3N5clO8VW/
 25  ssIeIhxcGJMZ
 26  
 27  /

Function created.

SQL> 
SQL> REM .. installing XPath Expression Filter support
SQL> @@exfxppvs.plb
SQL> begin
  2    execute immediate
  3       'create or replace type exf$xpposlst is VARRAY(100) of NUMBER';
  4  exception
  5    when others then
  6      if (SQLCODE = -02303) then null;
  7      else raise;
  8      end if;
  9  end;
 10  /

PL/SQL procedure successfully completed.

SQL> grant execute on exf$xpposlst to public;

Grant succeeded.

SQL> begin
  2    execute immediate
  3     'create or replace type exf$xpvarclst is VARRAY(100) of VARCHAR2(500)';
  4  exception
  5    when others then
  6      if (SQLCODE = -02303) then null;
  7      else raise;
  8      end if;
  9  end;
 10  /

PL/SQL procedure successfully completed.

SQL> grant execute on exf$xpvarclst to public;

Grant succeeded.

SQL> begin
  2    execute immediate
  3      'create or replace type exf$xpnumblst is VARRAY(100) of NUMBER';
  4  exception
  5    when others then
  6      if (SQLCODE = -02303) then null;
  7      else raise;
  8      end if;
  9  end;
 10  /

PL/SQL procedure successfully completed.

SQL> grant execute on exf$xpnumblst to public;

Grant succeeded.

SQL> begin
  2    execute immediate
  3      'create or replace type exf$xpdatelst is VARRAY(100) of DATE';
  4  exception
  5    when others then
  6      if (SQLCODE = -02303) then null;
  7      else raise;
  8      end if;
  9  end;
 10  /

PL/SQL procedure successfully completed.

SQL> grant execute on exf$xpdatelst to public;

Grant succeeded.

SQL> begin
  2    execute immediate
  3      'create or replace type exf$xptaginfo as object (
  4    tag_name  VARCHAR2(70),
  5    type      NUMBER,
  6    poslst    exf$xpposlst,
  7    varclst   exf$xpvarclst,
  8    numblst   exf$xpnumblst,
  9    datelst   exf$xpdatelst)';
 10  exception
 11    when others then
 12      if (SQLCODE = -02303) then null;
 13      else raise;
 14      end if;
 15  end;
 16  /

PL/SQL procedure successfully completed.

SQL> show errors;
No errors.
SQL> grant execute on exf$xptaginfo to public;

Grant succeeded.

SQL> create or replace type exf$xptagsinfo as VARRAY(490) of exf$xptaginfo;
  2  /

Type created.

SQL> grant execute on exf$xptagsinfo to public;

Grant succeeded.

SQL> create or replace procedure getDummyTags wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  7
 20  2a1 1b6
 21  YuZVYftwLil1ExIS3vUBXgMnHR0wg43M2q5qfC/J/2RXvUCispQ4GvyP25zfFi07Ax25hal7
 22  MuE5+QDBgCxZiVkzwZi7lIRFhK22FflzXj+ky5q5ebX7Q8rtJabW4SquYglM3T1PuEp3jp8P
 23  NjK6NdAq5AtV9PDKnh4jn6m8nU5Af9pNh+rKVl4ygpMuUCr6fbMLCSImK3y0FH5S2//766Wp
 24  6SAnUyB1xRG+kDV9oa7Mly+XfCG9HWS6FEfU8AuoVSKaFatRGmnT5CFgYNTxwhv0Ns3R1bLA
 25  XHZOXzEUejvuOFygU+6p5IMHdsdfBSomM24L5XB3g47B3Kd9pOVaI+gBvM9xIZyWAWAKfFIn
 26  f4lUwhmbwm24ci7kCE+20LOfoOLY/M8oArXh5nc2cYTGAgtu4qyqywTHZBgvgYtbe3N1Zg==
 27  
 28  
 29  /

Procedure created.

SQL> show errors;
No errors.
SQL> create or replace procedure getTagsArrOCI wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  7
 20  fd 10f
 21  c9A+2zqAsllp4PRqwdLj7GqnpNYwg+lKLcsVfC+EWE6Ub+AOCRsr6PbsYfclGkWHqFnj+y0f
 22  +Q8UYtMTQwMQIF0RfoIDlR4698YeLtnT8GqzKj6id9EvmrnR481W9hamFBU43QK00ttJ8CHO
 23  G6sELPaya0p17uEGVksmABp/EreZedhnt5dBVMtdjcX2NzltEP9VmGJTluK/KsHGY5aT1XGQ
 24  0nx/xxTMBPTHYnJZV6fOuw5th6+BLPWN/QbFeGcC/DT44flaIus=
 25  
 26  /

Procedure created.

SQL> show errors;
No errors.
SQL> create or replace function getTagsArray wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  1fb 164
 21  A8F09Tn5X0iKStlGgIWdqKVwZhgwg/DIfyBqyi8C2k7VSIVwDCtASumkfG6kFFdm3fcAyU3C
 22  sEybuxI2sDvYyzhnfblV+Bl/WRoDsjac0GTPvM/lHoHP1tTsWOFQXRJfpE1u70JXJk0oxbyf
 23  4UEAA78bEVoMg06CloB+RKJHXhTdQrTXxtjUkd7nDtMFwAyVU3nt7SDFLtWT2NY1yXeJY93n
 24  HyNQz6GzhhH0bZ+pyfA4tm2Q9qgsyI+8leMxWRmWlb5Ic1TEumpozH3TGDJrrI+iPcdyOQK/
 25  CeJAkvtvMSTdsPd0bGrJm/cDfb6IoFXcXINPKcA/wR6dp5Zk4T5T7w+8+5eLMBU=
 26  
 27  /

Function created.

SQL> show errors;
No errors.
SQL> grant execute on getTagsArray to public;

Grant succeeded.

SQL> create or replace function v02c wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  177 144
 21  5h3HxZ34VZ0T3wTJvp1eWLrmfXUwgzJpmNwdfy8avGR14T4ivWvv9VQ+dgMbp26B+tBeexjk
 22  hOX4MDzcZza9eJjaHkK04sJiImXR6zN0Q4ZZvfXA0LBCSq1dZWbMJvQtdZEoG3nuTqk5BlsJ
 23  ZOshJzV5Lq0btB9NleT3KSGtWOEx4f2EAJvB4OZsU47QFsks55fscasFXRL7f7TrB8ETOgXL
 24  cYRQ1kfiQjw2cuAQEGrjL4ZopO3WJ3RP2guirS8PA8/VvTo6v8pVsY5lVZr2AUx4rhMycwcV
 25  uwaxkjwN5wCPzZljfTVvku6Zpk6j5Q==
 26  
 27  /

Function created.

SQL> show errors;
No errors.
SQL> create or replace function v12c wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  17a 140
 21  KjxyReZiZcPi+QfU9KDfw2GN3nUwgzJpmEgdqC9ZEA9/6RTH8ZQx3B9d4bdsYBW4o49d0en5
 22  qD0Qz1SKomFjUIq5Vk6m6oxiIunPIL8PaSIu2w4DEiKuAzj9wIivw8WAhc8hNNZyHTbbLBqH
 23  eBPMeHcr//Q4xGkDQncpNJ9lRMJE3wIjGE8DvY2PV5BpR6gviSq+51VdWwLJUg4oLGQzIBLb
 24  q6wcg4rbDWXPfoucF1/nPi5VJdoWOM5oiO+X9wZsR2QJ751oGyUQLqjrcwA+2cKjZKdDLPLP
 25  ID8lDEnzI90eSWFRB2FQriSZybqT
 26  
 27  /

Function created.

SQL> show errors;
No errors.
SQL> create or replace function v22c wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  17a 144
 21  8NOhu3fjggBuVPv2cY0yZuvyBvEwgzJpmEgdqC9ZEA9/6RTH8ZQxnNGFRICnBPS63HrcuXHO
 22  LHFVxltLC2yn5gOYA0cdWcmQ2BdxB+7hOHNZ+/VlZLBYTiFFdSM28q18b5TSzAL7359NyhzI
 23  MJrNI5NpkITS+yMoLU0XkNTVSfHvkA7t2bZPH0NlrzYkqCaz80Yrf1xFGK6eleAaltm/+NAd
 24  V9pJmGUT/OwdVh9OBYIjV7vByd6yogG0tAQAJffOb4uAJsiaP0nxeS7RJZoSDdgeyZiTsaoW
 25  5JPkJw+Yq2tENKrgPsLVmTqbssrWun4=
 26  
 27  /

Function created.

SQL> show errors;
No errors.
SQL> create or replace function v32c wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  8
 20  17a 144
 21  xVCEq9GqK+j4crR44NIiSZUV6s8wgzLImEjhfy/pXrvqaGbThz4Y5/UtFl+IWwzJNJsL6Zxm
 22  tcgnJCILhC81GBNCOv++YQp+bdBfu82LmZfG9NN9ikFy66+Onr5fWsMn4EcbMYyh/c56DipS
 23  9ibNIwAnKYPswFlLIGkDQmjrMsBlRMJE30AjBnIxRvK4PkFpRyIviSq+Ib76KP02LbAocurk
 24  +MtxhFDWd+LM9qwXNw9Bf2bbVzIav2ku7sfqXxaABm1Ymi5mP+2/GvhUS9L+h5nZwiOTYtkk
 25  0yLnZENi9m9Frx5J8lDWdNLrKJq1un8=
 26  
 27  /

Function created.

SQL> show errors;
No errors.
SQL> create or replace procedure exf$xpdumptagsinfo wrapped
  2  a000000
  3  1
  4  abcd
  5  abcd
  6  abcd
  7  abcd
  8  abcd
  9  abcd
 10  abcd
 11  abcd
 12  abcd
 13  abcd
 14  abcd
 15  abcd
 16  abcd
 17  abcd
 18  abcd
 19  7
 20  2a4 19d
 21  HpezcZhzLKbNBzVWxgW/rlDSRyswgwLx2SfWZ45AmDM+/2YO0WYuRW317gFW+5CI9Yn1bOYu
 22  L/wCJ8pELLwXw03eGBwEV5y1tTmLdChYhGhXFMia/xO6TlJiE9GYoOky4jW2PLo2XV153HHo
 23  gPx/pNha+7hNpqtb370u2LjO1bfFXi29G6mC0ALWqwqkBEB3YEBq4H46X1LDX/lqHnwlaQoT
 24  hLEN1hYBLY8tfKUa+ffTUHfNemfNEvXS7Z6/cztFprPD90ypyQHLhHYURJZ4pRp3noXl6s94
 25  KBm/vIqGMrr16UyvF7OfjJZCGdqb97L/ZiTTklEk+rzdJlB7TrsbquAC/8Wph9lb3T/hhUzi
 26  4WjY2Ww4yzBYpuJshZ6Pu7n59FL2RkVqmnyUR0ewLIzgZP8=
 27  
 28  /

Procedure created.

SQL> grant execute on exf$xpdumptagsinfo to public;

Grant succeeded.

SQL> 
SQL> REM
SQL> REM Create Indextype definition
SQL> REM
SQL> create indextype EXPFilter
  2    for
  3     EVALUATE(VARCHAR2, VARCHAR2),
  4     EVALUATE(VARCHAR2, sys.ANYDATA),
  5     EVALUATE(CLOB, VARCHAR2),
  6     EVALUATE(CLOB, sys.ANYDATA)
  7  using ExpressionIndexMethods;

Indextype created.

SQL> 
SQL> grant execute on expfilter to public;

Grant succeeded.

SQL> 
SQL> REM
SQL> REM Associate Statistics Methods
SQL> REM
SQL> ASSOCIATE STATISTICS WITH FUNCTIONS
  2    evaluate_vv,
  3    evaluate_va,
  4    evaluate_cv,
  5    evaluate_ca
  6    USING ExpressionIndexStats;

Statistics associated.

SQL> 
SQL> ASSOCIATE STATISTICS WITH INDEXTYPES EXPFilter
  2    USING ExpressionIndexStats;

Statistics associated.

SQL> 
SQL> REM
SQL> REM Validate Expression Filter installation
SQL> REM
SQL> EXECUTE sys.dbms_registry.loaded('EXF');

PL/SQL procedure successfully completed.

SQL> 
SQL> EXECUTE sys.validate_exf;

PL/SQL procedure successfully completed.

SQL> 
SQL> ALTER SESSION SET CURRENT_SCHEMA = SYS;

Session altered.

SQL> spool off
